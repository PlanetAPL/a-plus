

				qio
				===


0.  Description.

	Like sasha's quote.in{} and quote.out{}, but streamlined for 
	scalar formatting and conversion.

	qio.in{} and qio.out{} do not require shadow variables.  Format-
	state information is stored on the variable in the attribute
	`s.io.

1.  Operation.

		valueûqio.in{s;string;i;p;c;v}

		stringûqio.out{s;value;i;p;c;v}

	so that:

		`a is `scalar
		      `array
		      `matrix
		      `slot
		      `tableField, where `a Å b and `b is `table

		`a has (`out;qio.out;`in;qio.in)

2. `s.io

	The variable attribute `s.io holds an array of slotfillers which
	represents the format-state of each number in a.

	It is always true that

		(Òa) ½ Ò`a _get `s.io

	`s.io can be examined and modified by the application.

3.  qio.in{}

	qio.in{} uses the function:

		(value;slotfiller)ûqio.in_{(string;slotfiller)}

	value is *always* of type `float.

4.  qio.out{}

	qio.out{} uses the function:

		stringûqio.out_{(value;slotfiller)}

5.  Slotfiller.

	Default attributes are:

		`form		`decimal
		`precision	0 if `integer, else 3
		`plus		1
		`width		4+precision
		`zero		1
		`round		0
		`na		¢999999999.0
		`fuzz		1
		`max		Inf
		`min		¢Inf
		`comma		0
		`forms		(all)

	Possible values of the `form slot are:

		`integer
		`decimal
		`decimal_32nd
		`decimal_64th
		`8th_32nd
