

				afm
				===
		

0.  Description.

	The AFM gadget ("Application File Manager") is a modification 
	of the pup utility written by daveh and modified by mkr.

1.  Operation.

	AFM is a window for selecting files in an application 
	directory under a "mode".

	The set of files to be selected from is determined by
	the three variables _USER, _APPL, and _SUFFIX:

		_DIR:'/u/',_USER,'/',_APPL

	_SUFFIX is a character string which is chopped from the
	end of any matching files.  E.g., if

		_SUFFIXû'orother.m'

	and if file is 
		
		somethingorother.m

	it will be displayed as 

		something

	There are three modes:  get, put, and drop.  A mode is
	selected via the radio box _MODES, or by setting the gadget
	variable _MODE to one of `get, `put, or `drop.  Either
	action causes a corresponding state-change in the companion
	variable.  E.g., setting _MODEû`put causes (`putØ_MODES) to
	become 1, and vice-versa.

	In "get" mode, the operator can enter a user name (_USER)
	and pick from the files displayed in _FILES.  

	In "put" mode, the operator can enter a new file name (_NEW),
	but cannot change the user name from sys.getusername.

	In "drop" mode, the operator can neither enter a new file
	name nor change the user name from sys.getusername.

2.  zûdefine cx

	cx = target context of AFM
	z = `cx._AFM

	Define an AFM-gadget in the specified context.

3.  Variables

	_FONTû		Electric font variable

	_MODEû		Å `get, `put, `drop
	_USERû		"username" (default = sys.getusername) 
	_FILEû		Selected file
	_APPLû		Application name
	_SUFFIXû	Invisible filename suffix
	
	_DIR:		Implied directory
	_FILESû		File view (depends on _DIR, _SUFFIX, _TRIGGER)
	_TRIGGERû	anything (triggers file refresh)
	
	_MODESû		Mode radio box
	_NEWû		New filename

	_AFMû		Outer layout

4.  Restrictions

	Set callbacks set by AFM on:

		_MODE
		_MODES
		_SUFFIX
		_APPL
		_USER
		_TRIGGER

	Preset callback set by AFM on _MODE.
	Select callback set by AFM on _FILES.

	Variables which may be assigned:

		_FONT		Font of all AFM objects
		_MODE		Mode of AFM instance
		_USER		User 
		_APPL		Application
		_SUFFIX		Invisible filename suffix

5.  Example

		$load s
		$load act
		$load afm
		afm.define `f
		f._APPLû'myappl'	ã seek in directory .../myappl/
		f._SUFFIXû'object.m'	ã filename = ...object.m
		f._MODEû`get		ã initialize in "get" mode.
		act.define `g
		g._STUFFû`f._AFM
		
		attention{s;d;i;p;c;v}:{
		  if (d½`apply) {
		    (mode;dir;file;new)ûs%¡`_MODE `_DIR `_FILE `_NEW;
		    case (mode) {
		      `get;	Õ`get;
		      `put;     Õ`put;
		      `drop;    Õ`drop
		    }
		  }
		}

		`g._Z _scb (attention;`f)
		
		g._MSGû'Hello Woild'



