ãã Copyright (c) 1990-2008 Morgan Stanley All rights reserved.
ãã See .../src/LICENSE for terms of distribution.
$cx ted

if( ()½scriptsDirûsys.readenv{"UTILS_DIR"} ) {
  scriptsDirû"/usr/local/aplus-fsf-4.22/autils";
}

_load{scriptsDir,"/act"}
_load{scriptsDir,"/box"}
_load{scriptsDir,"/dio"}

DESCRIBEû(,t.DOT;,<(,t.DOT;,<()));

define{cx}:
	{
	acxûÂ(Îcx),'_act';
	Ý act.define{acx};
	(acx%`_FONT)ûs.FONT;
	(acx%`_LOCATE)ûcxÖ`_TED;
	(acx%`_SHELLS)ûcxÖ`_TED;

	WSûs.autows{()};

	(cx%`_FIELD)û();
	(cx%`_N)û0;
	(cx%`_DO)û();
	(cx,`_DO) _spcb (preset_do;);
	(cx,`_DO) _scb (set_do;);

	(cx%`_ACTION)û(`Help `New `Load `Save `Make,(>Â¡('+Field';'-Field';'+Attr';'-Attr')),`Derive;(;;;;;;;;;));
	(cx%`_MSG)û' ';
	(cx%`_DESCRIBE)ûDESCRIBE;
	cxâ'_FIELDS:ted.fields{`',(Îcx),'} Ý _DESCRIBE';
	cxâ'_ATTRS:ted.attrs{`',(Îcx),'} Ý _FIELD';
	(cx%`_WINDOW)û`_ATTRS;
	(cx%`_HPANE)û<`_FIELDS `_WINDOW;
	(cx%`_TED)û`_ACTION `_MSG `_HPANE;

	(cx%`_ACT)ûacx;
	(cx%`_DIR)û'./';
	(cx%`_NAME)û();

	(cx,`_ACTION) .is `action;
	(cx,`_MSG) .is `label;
	(cx,`_FIELDS) .is `array;
	(cx,`_ATTRS) .is `slot;
	(cx,`_WINDOW) .is `window;
	(cx,`_HPANE) .is `hpane;
	(cx,`_TED) .is `layout;

	(cx,`_DIR) .is `scalar;
	(cx,`_NAME) .is `scalar;

	(cx,`_ACTION) .has (`title;'';`geometry;5;`set;set_action;`acceptfocus;0;`C;1);
	(cx,`_MSG) .has (`resize;'hH');
	(cx,`_FIELDS) .has (`title;'';`rows;10;`space;30;`select;select_field;`out;out_sym;`protect;1);
	(cx,`_ATTRS) .has (`title;'';`stars;0;`set;set_attr;`in;in_attr;`out;out_attr;`preset;preset_attr);
	(cx,`_WINDOW) .has (`title;'');
	(cx,`_HPANE) .has (`title;'');
	(cx,`_TED) .has (`title;'');

	(cx,`_NAME) .has (`title;'';`out;out_name;`in;in_name);
	(cx,`_DIR) .has (`title;'';`set;set_dir);
	(cx,`_N) .has (`title;'');

	s.autows{WS};

	cxÖ`_TED
	}

attrs{c}:if (()½n Ý nûc%`_FIELD) (;) else sf_sort{nØc%`_DESCRIBE}
fields{c}:sym_sort{0Øc%`_DESCRIBE}

sf_sort{sf}:if ((;)½sf) sf else (<èÎ0Øsf)#¡sf

msg{c;x}:Ý(c%`_MSG)ûif (()½x) ' ' else x
err{c;x}:msg{c;'!! ',x,' !!'}
warn{c;x}:msg{c;'! ',x,' !'}

dir{c}:k,(('/'¨¢1Ùk)/'/'),t.DOT_T Ý kûc%`_DIR
sym_sort{x}:if (~()½x) (èÎx)#x
space{c;v;s}:if (s>0Ø`space .of c,v) (c,v) .has (`space;s;`naturalsize;1)

select_field{s;c;v}:Ý c%`_ATTRS Ý (c%`_FIELD)ûif (0¤r Ý rû0Ø`row .of c,v) r#c%v

check_dir{z}:((1ÕÒf)Ùt.DOT_T)Åf Ý fûsys.agetdents{z}

in_dir{s;d;i;p;c;v}:
	{
	zûif (0=#zû(d¨' ')/d) './' else z;
	case (s) 
		{
		0;	z Ý if (check_dir{z}) warn{c;'No Describe in that directory'};
		1;	if (check_dir{z}) z else err{c;'No Describe in that directory'};
		}	
	}

set_dir{s;d;i;p;c;v}:msg{c;} 
out_sym{s;d;i;p;c;v}:if (`sym=©d) Îd

set_attr{s;d;i;p;c;v}:if (`sym=©p) if (`sym=©f Ý fûc%`_FIELD) ((f,p)Øc%`_DESCRIBE)ûd
preset_attr{s;d;i;p;c;v}:if (`sym¨©p) d Ý (c,v) .has (`space;¢1) else if (~d½<()) d
in_attr{s;d;i;p;c;v}:if (('()'½(d¨' ')/d)©^/d=' ') <() else if (0=r Ý (r;z)ûdo box.in{'<',d}) >z Ý msg{c;} else Ý err{c;z}
out_attr{s;d;i;p;c;v}:z Ý space{c;v;#z} Ý zûbox.out{d}

out_name{s;d;i;p;c;v}:if (()½d) '' else 1ÕØ',',¡Î¡d
in_name{s;d;i;p;c;v}:if (0<#z Ý zû(d¨' ')/d) if (©/zÅs Ý zû,t.unique{>Â¡1Õ¡(Úz=',')Úzû',',z}) Ý warn{c;'Duplicate name'} else z Ý msg{c;}

parse_def{dir;x}:
	{
		if ((1Ùx)Å'[â:') 			(;)
	else 	if (3>i Ý iû('¢1à';'¢2à';'¢3à')É<3Ùx) 	(-1+i;t.file_string{dir;3Õx})
	else 	if ('à'=1#2Ùx) 				(â0#1Ùx;t.file_string{dir;2Õx})
	else 						(0;t.file_string{dir;x})
	}

clear{c}:
	{
	(c%`_DESCRIBE)ûDESCRIBE;
	(c%`_FIELD)û();
	(c,`_FIELDS) .has (`firstrow;0;`row;¢1);
	}

ã ***	Actions

Help{c}:Help_do{c}
New{c}:New_do{c}

Make{c}:
	{
	msg{c;};
	acxûc%`_ACT;
	(acx%`_STUFF)ûcÖ`_N;
	(acx,`_Z) .has (`set;(Make_Z;c));
	(acx%`_MSG)û'Number of records to make ...';
	}

Save{c}:fileDir{c;c%`_DIR;0;Save_Z;'Save to directory ...'}
Load{c}:fileDir{c;c%`_DIR;1;Load_Z;'Load from directory ...'}
Derive{c}:fileDir{c;c%`_DIR;0;Derive_Z;'Derive from directory ...'}

DelField{c}:DelField_do{c}
DelAttr{c}:DelAttr_do{c}

AddField{c}:add{c;c%`_FIELDS;AddField_Z;'Add Field(s), names delimited by ","'}

AddAttr{c}:
	{
	if (()½f Ý fûc%`_FIELD) warn{c;'No field selected'} 
	else add{c;0Øc%`_ATTRS;AddAttr_Z;'Add Attribute(s), names delimited by "," ...'}
	}

ã *** Action code

Help_do{c}:msg{c;'Not yet implemented'}

New_do{c}:
	{
	(c%`_DIR)û'';
	clear{c};
	msg{c;'New Describe'};
	}

Derive_do{s}:
	{
	dirûdir,('/'¨¢1Ùdir)/'/' Ý dirûs%`_DIR;
	fsû(~fsÅô1!(1ÕÒfs)Ùt.DOT_T)/fs Ý fsûsys.agetdents{dir};
	zûDESCRIBE;
	(iû#fs) do if (0=rc Ý (rc;val)ûdo à dir,f Ý fû(f¨' ')/f Ý fûi#fs)
		{
		sfû(t.DOT;<'0à',f),¡(`na;<(©val)Øt.NA),¡2Ùif (2¤#Òval) (`t.width;<1ÕÒval);
		zûz,¡(Â(¢2«'.m'½¢2Ùf)Õf;<sf);
		};
	clear{s};
	(s%`_DESCRIBE)ûz;
	msg{s;'Derived'};
	}


Save_do{s}:
	{
		if (0¨rc Ý (rc;d)ûdo fàsys.exp{s%`_DESCRIBE} Ý fûdir{s}) 	err{s;'Save of Describe failed'} 
	else 									msg{s;'Saved'}
	}

Load_do{s}:
	{
		if (0¨rc Ý (rc;d)ûdo sys.imp{Ûàf} Ý fûdir{s}) 			err{s;'Load of Describe failed'}
	else 	if (0¨rc Ý (rc;d)ûdo s.rsf{d}) 					err{s;'Malformed Describe'}
	else
		{
		(s%`_DESCRIBE)ûd;
		(s%`_FIELD)û();
		(s,`_FIELDS) .has (`firstrow;0;`row;¢1);
		msg{s;'Loaded'};
		}
	}

Make_do{s}:
	{
	if (()½ dir Ý dirûs%`_DIR) 	warn{s;'Directory not specified'}
	else
		{
		nûs%`_N;
		(iû#fs Ý fsû(fs¨t.DOT)/fs Ý fsû0Ødesc Ý descûs%`_DESCRIBE) do
			{
			fûi#fs;
			aûfØdesc;
			if (()½def Ý defût.pick{t.DOT;a}) defû'0à',(Îf),'.m';
			if (()½na Ý naût.pick{`na;a}) naû¢999999999;
			if (()½it Ý itût.pick{`t.item;a}) itûÉ0;
			if (~()½ca Ý caût.pick{`t.calendar;a}) if (it½É0) itû#t.calendar{ca};
			if (~()½file Ý (beam;file)ûparse_def{dir;(def¨' ')/def}) 
				{
				naûif (beam=¢1) sys.exp{(n,it)Òna} else (n,it)Òna;
				filesû1Õ¡(Ú','=files)Úfilesû',',file;
				filesà¡<na;
				}
			};
		msg{s;'Made'}
		}
	}

AddField_do{s}:
	{
	(s%`_DESCRIBE)û(s%`_DESCRIBE),¡(z;(#z)Ò<(,t.DOT;,<())) Ý zûs%`_NAME;
	msg{s;'Field(s) added'}
	}


AddAttr_do{s}:
	{
	if (()½f Ý fûs%`_FIELD) msg{s;}
	else
		{
		(fØs%`_DESCRIBE)û(fØs%`_DESCRIBE),¡(z;(#z)Ò<()) Ý zûs%`_NAME;
		select_field{;s;`_FIELDS};
		msg{s;'Attribute(s) added'}
		}
	}

DelField_do{c}:
	{
	if (()½f Ý fûc%`_FIELD) warn{c;'No field selected'}
	else if (f=t.DOT)	warn{c;'Cannot delete dot field'}
	else
		{
		iû(0Ød)Éf Ý dûc%`_DESCRIBE;
		(c%`_DESCRIBE)û(<i¨É#0Ød)/¡d;
		select_field{;c;`_FIELDS};
		msg{c;'Field deleted'}
		}
	}

DelAttr_do{c}:
	{
		if (()½f Ý fûc%`_FIELD) 		warn{c;'No field selected'}
	else 	if (()½a Ý aû0Ø`selected .of c,`_ATTRS) warn{c;'No attribute selected'}
	else	if (t.DOT=a)				warn{c;'Cannot delete dot attribute'}
	else
		{
		jû(0ØfØd)Éa Ý dûc%`_DESCRIBE;
		(fØc%`_DESCRIBE)û(<j¨É#0ØfØd)/¡fØd;
		select_field{;c;`_FIELDS};
		msg{c;'Attribute deleted'}
		}
	}

ã ***	ACT Z setups and callbacks

fileDir{c;x;y;z;w}:
	{
	msg{c;};
	acxûc%`_ACT;
	(c%`_DIR)ûx;
	(c,`_DIR) .has (`in;(in_dir;y));
	(acx%`_STUFF)ûcÖ`_DIR;
	(acx,`_Z) .has (`set;(z;c));
	(acx%`_MSG)ûw;
	}

add{c;x;y;z}:
	{
	msg{c;};
	acxûc%`_ACT;
	(c%`_NAME)û();
	(c,`_NAME) .has (`in;(in_name;x));
	(acx%`_STUFF)ûcÖ`_NAME;
	(acx,`_Z) .has (`set;(y;c));
	(acx%`_MSG)ûz;
	}

Derive_Z{s;d;i;p;c;v}:if (`apply¨d) msg{s;} else Derive_do{s}
Save_Z{s;d;i;p;c;v}:if (`apply¨d) msg{s;} else Save_do{s}
Load_Z{s;d;i;p;c;v}:if (`apply¨d) msg{s;} else Load_do{s}
Make_Z{s;d;i;p;c;v}:if (`apply¨d) msg{s;} else Make_do{s}
AddField_Z{s;d;i;p;c;v}:if (d¨`apply) msg{s;} else AddField_do{s}
AddAttr_Z{s;d;i;p;c;v}:if (d¨`apply) msg{s;} else AddAttr_do{s}

ã ***	Action

preset_do{s;d;i;p;c;v}:if (~()½d) if (dÅ0Øc%`_ACTION) d 

set_do{s;d;i;p;c;v}:
	{
	case (d)
		{
		`Help;		Help_do{c};
		`New;		New_do{c};
		`Load;		Load_do{c};
		`Save;		Save_do{c};
		`Make;		Make_do{c};
		Â'+Field';	AddField_do{c};
		Â'-Field';	DelField_do{c};
		Â'+Attr';	AddAttr_do{c};
		Â'-Attr';	DelAttr_do{c};
		`Derive;	Derive_do{c};
		}
	}

set_action{s;d;i;p;c;v}:
	{
	case (p)
		{
		`Help;		Help{c};
		`New;		New{c};
		`Load;		Load{c};
		`Save;		Save{c};
		`Make;		Make{c};
		Â'+Field';	AddField{c};
		Â'-Field';	DelField{c};
		Â'+Attr';	AddAttr{c};
		Â'-Attr';	DelAttr{c};
		`Derive;	Derive{c};
		}
	}
