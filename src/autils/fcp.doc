

				fcp
				===
		

0.  Description.

	The fcp gadget manages the cutting and pasting of fields
	from and to tables.

1.  Operation.

	Set _TABLES to list of tables to manage, or () for all tables.

	_CUT_BUFFER to (`t0 ... `tn;((`f0 ... g0);...;(`fn ... `gn)))
		is a slotfiller of fifo stacks of cut fields.

	Make sure `reparent is 0 for each table to be managed.

	Menu operation:
	¢¢¢¢¢¢¢¢¢¢¢¢¢¢
		Cut:		Cut focussed field into buffer.
		Paste Left:	Paste top field to left of focussed field.
		Paste Below:	Paste top field to right of focussed field.
		Buffer, table:	Popup cutbuffer for selected table;
				allow rearrangement of fields (as in SST)
	
2.  zûdefine cx

	cx = target context of field cut and paste tool.
	z = `cx._FCP

	Define a fcp-gadget in the specified context.

3.  Variables

	_FCP:		Menu
	_BUFFER:	Array of cut fields for selected table
	_CUT_BUFFERû	Slotfiller of fifo stacks of cut fields
	_TABLEû		Selected table
	_TABLESû	() or all, or list of tables to be managed
		
4.  Restrictions

	Assignment callback on _FCP is controlled.
	Select and reference callbacks on _BUFFER are controlled.

5.  Example

		$load s
		$load fcp

		aûbûcûÉ10
		t1û`a`b`c
		dûeûfûgûÉ10
		t2û`d`e`f`g

		`t1`t2 is¡`table
		`t1`t2 has¡<(`reparent;0)

		kûfcp.define `f

		mû(k;`t1;`t2)
		show `m is `layout




