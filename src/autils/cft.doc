

				cft
				===
		

0.  Description.

	The cft gadget provides a simple mechanism for experimenting with
	colors and fonts.

1.  Operation.

	Reference to a foreground or background color uses that color in
	the display labels.  

	Reference to a font uses that font in the display labels.

	Reference to an attribute may be achieved in three ways:

		(a)  refer to the list-item naming the attribute
		(b)  enter the name of the attribute into one of the
		     scalars _FG, _BG, _FONT.

		(c)  assign _FG, _BG, or _FONT to the attribute name.
		     attribute.

	To pick from all colors, _FGSû_BGSûs.COLOR_NAMES

	To pick from all fonts, _FONTSûs.FONT_NAMES

	Assignment-callback or dependency on _FG, _BG, and/or _FONT
	is the recommended method of use.

2.  zûdefine cx

	cx = target context of color-font tool
	z = `cx._CFT

	Define a cft-gadget in the specified context.

3.  Variables

	cx._FGû		selected foreground color symbol
	cx._BGû		selected background color symbol
	cx._FONTû	selected font symbol

	cx._FGSû	vector of available foreground colors*
	cx._BGSû	vector of available background colors*
	cx._FONTSû	vector of available fonts*

			* will also accept character matrices.

	cx._FG_ON_BGû	label of foreground on background
	cx._BG_ON_FGû	label of background on foreground

	cx._CFTû	layout of color-font tool

4.  Restrictions

	cx._FGS, cx._BGS, cx._FONTS:

			may be assigned;
			`refer, `set, `preset not available

	cx._FG, cx._BG, cx.FONT:

			may be assigned;
			`in, `out, and `preset not available

	cx._FG_ON_BG, cx._BG_ON_FG:

			may be assigned any valid `label

5.  Example

		$load s
		$load cft

		bûcft.define `foo

		foo._FGSûfoo._BGSûs.COLOR_NAMES
		foo._FONTSûs.FONT_NAMES
		
		show b





