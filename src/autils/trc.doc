

				trc
				===
		

0.  Description.
	
	Interactive function execution trace.

1.  Operation.

	Desk calculator mode:

		Specify context(s) of trace.
		Enter an executable (executes from the root).
		Use -Level and +Level buttons to explore execution trace.
		Set level-indexed color array for readability.

	Running application mode:

		Have TRC running with the application.
		Specify contexts(s) of trace.
		Toggle Trace on.
		Do an application action (e.g. press a button).
		Press Display to see trace.
		(Trace toggle is automatically turned off.)

2.  zûdefine cx

	cx = target context of TRC tool.
	z = `cx._TRC

3.  Variables

	See vim.doc.

	_TIMING:	user/system cpu timing matrix
	_J:		raw timings
	_BASISû		initial time

	_Tû		raw callback checkpoints
	_Iû		level counter

	_XEQû		executable input scalar
	_BUTû		"All but" check button
	_CXSû		view of contexts
	_TRACEû		"Running application" check button
	_BUTTONSû	action box
	_LEFT, _RIGHTû	layouts
	_TRCû		outer hpane
	
4.  Restrictions

	TRC controls `set callback on _XEQ, _BUT, and _TRACE, and 
	`refer callback on _CXS, 

5.  Example

	$load s
	$load trc
	show trc.define `foo

	Example 1:

		Refer to s context.
		Enter: 

			show É10
	
		Use +Level and -Level to expand and compress the trace.

	Example 2:

		In the root, define:

			foo{}:goo{}
			goo{}:hoo{}
			hoo{}:0

		Refer only to root context (turn others off).

		Toggle Trace on.

		In emacs or in _XEQ, enter:

			foo{}

		Press the Display button (Trace will toggle off).


		




