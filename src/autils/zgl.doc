

				zgl
				===
		

0.  Description.

	The zgl gadget is a standard "zoom and geometry" layout.

1.  Operation.

	_OBJECTS is a layout of objects bound to any display classes.

	If 0 = `ZoomØ_ZOOM, then the objects are displayed in _OBJECTS
	in the pattern described by _ROWS, _COLS.  E.g., if there are
	12 objects in _OBJECTS, then if _ROWS = 3 and _COLS = 4, then
	the objects are displayed in a 3«4 pattern.

	If 1 = `ZoomØ_ZOOM, then all objects in _OBJECTS are located at
	0 0 with span of 1 1, and the object in _OBJECTS which has focus
	(or the first object, if none has focus) is raised.  _FLIPF and
	_FLIPB are buttons which successively raise objects in the set.

2.  zûdefine cx

	cx = target context of zoom-geometry layout
	z = `cx._ZGL

	Define a zgl-gadget in the specified context.

3.  Variables

	_ZOOMû		Single element check box
	_FLIPFû		Flip forward button
	_FLIPBû		Flip backward button
	_ROWS:		Rows in layout of objects
	_COLS:		Cols in layout of objects
	_ROWS_COLSû	Layout of _ROWS and _COLS
	_OBJECTSû	Layout of objects
	_ZGLû		Outer layout

	_ZOOMEDû	Object zoomed or ()

4.  Restrictions

	_ZOOM		May be pick-assigned

	_FLIPF		May not be assigned
	_FLIPB		May not be assigned

	_ROWS_COLS	May not be assigned

	_ROWS		May be assigned
	_COLS		May be assigned
	
	_OBJECTS	May be assigned;

	_ZGL		May be assigned

	_ZOOMED		May not be assigned (read only)

5.  Example

		$load s
		$load zgl

		$cx foo

		kûzgl.define `foo

		aûbûcûdûeûfûgûhûÉ2 3
		_OBJECTSû`a`b`c`d`e`f`g`h
		_ROWSû3
		(`ZoomØ_ZOOM)û1

		.show k






