ãã Copyright (c) 1990-2008 Morgan Stanley All rights reserved.
ãã See .../src/LICENSE for terms of distribution.

$cx trc

if( ()½scriptsDirûsys.readenv{"UTILS_DIR"} ) {
  scriptsDirû"/usr/local/aplus-fsf-4.22/autils";
}

_load{scriptsDir,"/vim.+"}


trc_cb{s;e;a;b;c}:
	{
	case (b)
		{
		`enter;	trc_enter{s;a};
		`exit;	trc_exit{s;a};
		`abort;	trc_abort{s;a};
		}
	}

trc_enter{c;a}:(c%`_I)û1+c%`_I Ý (c%`_T)[,]û<((c%`_I)Ò' '),Îa Ý if (¢1 ¢1½c%`_BASIS) (c%`_BASIS)û1 2Òsys.cpu{}
trc_exit{c;a}:(c%`_I)û0Ó¢1+c%`_I Ý (c%`_J)[,]û2Ùsys.cpu{}
trc_abort{c;a}:(c%`_I)û0

refer_cxs{s;c;v}:
	{
	s.call_refer{s;c;v};
	dbg_cxt{s;c;v};
	}

set_but{s;d;i;p;c;v}:dbg_cxt{s;c;v}

dbg_cxt{s;c;v}:
	{
	idxû0Ø`index .of c,`_CXS;
	rhoûÉ#c%`_CXS;
	case (`Øc%`_BUT)
		{
		0;	`cxt _dbg if (idx½rho) (`all;) else (`only;Âidx#c%`_CXS);
		1;	`cxt _dbg if (idx½É0) (`only;) else (`not;Â((~rhoÅidx)/rho)#c%`_CXS);
		}
	}

clear{c}:(c%¡`_I`_T`_J`_VIEW`_BASIS)û(0;;0 2Ò0;0 0Ò' ';¢1 ¢1)

set_buttons{s;d;i;p;c;v}:d¡{c}

display{c}:
	{
	trace_off{c};
	vim.zero{c};
	}

refresh{c}:
	{
	trace_off{c};
	clear{c};
	(c%`_CXS)ûÎcxs Ý cxsû(èÎcxs)#cxs Ý cxsû() _nl `cxs;
	vim.zero{c};
	}

maxUser{c}:scroll_to{c;0}
maxSystem{c}:scroll_to{c;1}

scroll_to{c;i}:(c,`_TVIEW) .has (`firstrow `row;2ÒtÉÓ/tû(c%`_TIMING)[;i])

set_trace{s;d;i;p;c;v}:
	{
	if (d=1) clear{c};
	`func _dbg d;
	}

xeq{stupid_goddamn_nameshadow}:
	{
	`func _dbg 1^~(`only;)½`cxt _dbg ();
	do `âstupid_goddamn_nameshadow;
	`func _dbg 0;
	}

trace_off{c}:
	{
	`func _dbg 0;
	(cÖ`_TRACE) _scb (;);
	(`Øc%`_TRACE)û0;
	(cÖ`_TRACE) _scb (set_trace;);
	}

set_xeq{s;d;i;p;c;v}:
	{
	trace_off{c};
	clear{c};
	xeq{d};
	vim.zero{c};
	}

timing{v;j;basis;bool}:if (0=#v) 0 2Ò0 else if (0=#j) j else >+/¡(Úbool)Únûj-basis,¢1Õj

define{cx}:
	{
	`print _dbg 0;
	`func _dbg 0;
	`cxt _dbg (`only;`);
	`cb _dbg (trc_cb;cx);

	Ý vim.define{cx};
	(cxÖ`_MATRIX) _scb (;);
	(cxÖ`_MATRIX) _spcb (;);

	WSûs.autows{()};

	(cx%`_I)û0;
	(cx%`_T)û();
	(cx%`_J)û0 2Ò0;
	(cx%`_BASIS)û¢1 ¢1;
	cxâ'_MATRIX:if (()½_T) 0 0Ò"" else >(Ó/>#¡_T)Ù¡_T';
	cxâ'_TIMING:trc.timing{_VIEW;_J;_BASIS;_BOOL}';
	cxâ'_TVIEW:_VIEW,@1 î_TIMING';
	(cx,`_TVIEW) .is `view;
	(cx,`_TVIEW) .has (`title;'';`rows;10;`cols;50;`fg;vim.fg;`rowbg;`grey40;`bg;`black);

	(cx%`_XEQ)û'';
	(cx%`_CXS)ûÎcxs Ý cxsû(èÎcxs)#cxs Ý cxsû() _nl `cxs;
	(cx%`_BUT)û(`;<0);
	(cx%`_TRACE)û(`;<0);
	(cx%`_BUTTONS)û(`Display `Refresh,(Â'Ó User'),Â'Ó System';<@0(display;refresh;maxUser;maxSystem));
	(cx%`_LEFT)û(`_ACTION;`_TVIEW;`_XEQ);
	(cx%`_RIGHT)û(`_BUT;`_CXS;`_TRACE;`_BUTTONS);
	(cx%`_TRC)û<`_LEFT `_RIGHT;

	(cx,`_XEQ) .is `scalar;
	(cx,`_CXS) .is `view;
	(cx,`_BUT) .is `check;
	(cx,`_BUTTONS) .is `action;
	(cx,`_TRACE) .is `check;
	(cx,`_LEFT) .is `layout;
	(cx,`_RIGHT) .is `layout;
	(cx,`_TRC) .is `hpane;

	(cx,`_XEQ) .has (`title;'â:';`set;set_xeq;`done);
	(cx,`_CXS) .has (`title;'';`index;cxsÉ`;`refer;refer_cxs);
	(cx,`_BUT) .has (`title;'';`label;'Trace all but ...';`acceptfocus;0;`set;set_but);
	(cx,`_TRACE) .has (`title;'';`label;'Trace';`acceptfocus;0;`set;set_trace);
	(cx,`_BUTTONS) .has (`title;'';`acceptfocus;0;`geometry;2;`set;set_buttons);
	(cx,`_LEFT) .has (`title;'');
	(cx,`_RIGHT) .has (`title;'';`C;1);
	(cx,`_VIEW) .has (`title;'Trace');
	(cx,`_TRC) .has (`title;'');
	
	s.autows{WS};

	cxÖ`_TRC
	}

