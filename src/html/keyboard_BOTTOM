
<!-- ========================================================================== -->
</Map>

<image src="KeyboardInt.gif" usemap="#Kmap" border=0><br><table border=1 width=990 cellspacing=0 cellpadding=10>
<tr>
<td width=222 align=center bgcolor=yellow><font face=arial,geneva,helvetica size=2>
<A HREF="keyboard_help.html" TARGET=_parent onMouseOver="window.status='Help text';return true".>Click here for HELP text</a>.
</font>
<td width=728 align=center bgcolor=lightyellow><font face=arial,geneva,helvetica size=2>
<A HREF="keybdBW.html" TARGET=_parent onMouseOver="window.status='B&W image of A+ keyboard layout';return true".>Click here</a> for a keyboard diagram which will print more clearly on a black-and-white laser printer.
</font>
</table>

<table border=0 width=990 cellspacing=0 cellpadding=0>
<tr>
<td width=222 align=center>&nbsp;<td width=728 align=center>
<font face=arial,geneva,helvetica size=2>
Questions? Comments? Suggestions?
Contact &#147;doc@aplusdev.org&#148;.
</font>
</table>

<! p>
<!-- TIMESTAMP: -->
<font face=arial,geneva,helvetica size=1><! Last updated Wed 06 Feb 2002></font><br>

<!-- ============================================================================== -->

<SCRIPT language=javascript>

  <!--
  /*  Your are permitted to reuse this code as long as the following copyright
      notice is not removed:

      This HTML tip handling is copyright 1998 by insideDHTML.com, LLC. More information about this
      code can be found at Inside Dynamic HTML: HTTP://www.insideDHTML.com
  */


  // Support for all collection
  var allSupport = document.all!=null

  function setupEventObject(e) {
    // Map NS event object to IEs
    if (e==null) return // IE returns
    window.event = e
    window.event.fromElement = e.target
    window.event.toElement = e.target
    window.event.srcElement = e.target
    window.event.x = e.x
    window.event.y = e.y
    // Route the event to the original element
    // Necessary to make sure _tip is set.
    window.event.srcElement.handleEvent(e);
  }


  function checkName(src) {
    // Look for tooltip in IE
    while ((src!=null) && (src._tip==null))
      src = src.parentElement
    return src
  }

  function getElement(elName) {
    // Get an element from its ID
    if (allSupport)
      return document.all[elName]
    else
      return document.layers[elName]
  }


 // var allSupport = document.all!=null

  function writeContents(el, tip) {
    // Replace the contents of the tooltip
     if (allSupport)
       el.innerHTML = (tip)
     else {
      // In NS, insert a table to work around
      // stylesheet rendering bug.
      // NS fails to apply style sheets when writing
      // contents into a positioned element.
   //    var allSupport = document.all!=null
      el.document.open()
      el.document.write(tip)
      el.document.close()
     }
  }

  function getOffset(el, which) {
    // Function for IE to calculate position 
    // of an element.
    var amount = el["offset"+which] 
    if (which=="Top")
      amount+=el.offsetHeight
    el = el.offsetParent
    while (el!=null) {
      amount+=el["offset"+which]
      el = el.offsetParent
    }
    return amount
  }
  
  function setPosition(el) {
    // Set the position of an element
    src = window.event.srcElement
    if (allSupport) {
   // Internet Explorer:
   //   el.style.pixelTop = getOffset(src, "Top")
   //   el.style.pixelLeft = getOffset(src, "Left")
        el.style.pixelTop = 0
        el.style.pixelLeft = 0
    } else
    {
   // Netscape:
   //   el.top = src.y + 80 //window.event.y + 15
   //   el.left = src.x //window.event.x
    if ((window.event.y < 85) && (window.event.x > 243) && (window.event.x < 505)) {
        el.top = 85  // special positioning: dropped down
        el.left = 0
        }
    else {   
        el.top = 0   // standard positioning: top left corner
        el.left = 0
         }
    }
  }

      
  function setVisibility(el, bDisplay) {
    // Hide or show to tip
    if (bDisplay)
      if (allSupport)
        el.style.visibility = "visible" 
      else
        el.visibility = "show";
    else
      if (allSupport)
        el.style.visibility = "hidden"
      else
        el.visibility = "hidden"
  }


  function displayContents(tip) {
    // Display the tooltip. 
    var el = getElement("tipBox")
    writeContents(el, tip)
    setPosition(el)
    setVisibility(el, true)
  }


  function doMouseOver(e) {
    // Mouse moves over an element
    setupEventObject(e)
    var el, tip
    if ((el = checkName(window.event.srcElement))!=null)
      if  (!el._display) {
        displayContents(el._tip)
        el._display = true
      }
  }

  function doMouseOut(e) {
    // Mouse leaves an element
    setupEventObject(e)
    el = checkName(window.event.srcElement)
    var el, tip
    if ((el = checkName(window.event.srcElement))!=null)
      if (el._display)
        if ((el.contains==null) || (!el.contains(window.event.toElement))) {
          setVisibility(getElement("tipBox"), false)
          el._display = false
        }
  }

  function doLoad() {
    // Do Loading
    if ((window.document.captureEvents==null) && (!allSupport))
      return // Not IE4 or NS4
    if (window.document.captureEvents!=null)  // NS - capture events
      window.document.captureEvents(Event.MOUSEOVER | Event.MOUSEOUT)
    window.document.onmouseover = doMouseOver;
    window.document.onmouseout = doMouseOut;
  }

  window.onload = doLoad
  // -->

</SCRIPT>
<STYLE>
  <!--
  #tipBox {position: absolute; z-index: 100;border: 0pt white solid; background: transparent; visibility: hidden}
  -->
</STYLE>

<!-- position: absolute; width: 150px; z-index: 100;border: 1pt black solid; background: yellow; visibility: hidden -->


<DIV ID=tipBox>
</DIV>

</BODY>
</HTML>
