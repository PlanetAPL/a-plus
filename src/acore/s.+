ãã Copyright (c) 1990-2008 Morgan Stanley Dean Witter & Co. All rights reserved.
ãã See .../src/LICENSE for terms of distribution.

ãã **** knowable of menu, image classes set to 0 until implemented.
ãã **** sflag>1 functional attributes
ãã **** reportStyleFunc - ret_flat_scalar_client{} commented out
ãã **** add scrollfg, and filter out inherited from state
ãã **** array scrollsize: make v and h same size
ãã **** if multiple servers, s.WS must be a vector
ãã **** arrowkey callback on f5-f8 - replace with shift-arrow callbacks
ãã **** filter_default_tablist{}:  g_widgetOrder instead of g_varWid
ãã **** implement `cols for hmenu and vmenu
ãã **** implement `rows for hmenu, vmenu, choice
ãã **** or (nuc):  `majororder;(`row/`col;n)  (default = () ûý (`col;1)
ãã **** `auto-x:  1 or 0

if (`null¨_nc{`s;`SERVER}) {
  Õ'ã S already $loaded';
  _abortload{};
};

$cx s

functions{}:
	{
	cxûÎ_gsv{`cx};
	âcx,'.isûs.is';
	âcx,'.freeûs.free';
	âcx,'.showûs.show';
	âcx,'.hideûs.hide';
	âcx,'.ofûs.of';
	âcx,'.hasûs.has';
	}

ãã ***	Basic S functions

is{s;c}:	is_object{s;c}
free{s}:	free_from_use@0{q_n{free_instance{s;}}}

show{s}:	Ý show_id{new_widget{new_symbol{s;;1}}}
hide{s}:	Ý if (0¨widûwidget{s}) hide_id{wid}

of{r;s}:	of_result{get{cx;var;id;cls;r;1};rnk;shp;dep} Ý (cx;var;id;cls;r;rnk;shp;dep)ûof_arguments{r;s}
has{s;o}:	cxÖvar Ý set{cx;var;id;cls;r;v;1} Ý (cx;var;id;cls;r;v)ûhas_arguments{s;o}

.isûis
.freeûfree
.showûshow
.hideûhide
.ofûof
.hasûhas

ãã ***	are{}

are{x;y}:
	{
	s.AREû(;);
	if (`null=©x) û();
	if (`sym¨©y) print_abort{;;'invalid right argument to are{}'};
	if (`sym¨©x) print_abort{;;'invalid left argument to are{}'};
	laûcase (#Òx)
		{
		0;	,aÖb Ý (a;b)ûc_c{Òx};
		1;	a[;0]Öa[;1] Ý aûc_c@0{x};
		2;	x[;0]Öx[;1];
			print_abort{;;'invalid left argument to are{}'};
		};
	raû(#x)Òy;
	s.AREû(la;Û¡ra);
	zûis_object@0 0{la;ra};
	s.AREû(;);
	z
	}

ãã ***	Copy

copy{fr;to}:
	{
	if ((0=#fr)©0=#to) û();
	(fcx;fvar)ûc_c{''Ò,fr};
	frûfcxÖfvar;
	tvarsûif (2=#Òto) to else c_c@0{,to};
	toûtvars[;0]Ötvars[;1];
	if (~_nc{fcx;fvar}Å`vars `deps) print_abort{fcx;fvar;'not a variable'};
	if (~G_bound{fr}) print_abort{fcx;fvar;'not bound'};
	tncû_nc@0{tvars[;0];tvars[;1]};
	if (~^/tncÅ`vars `deps `null) print_abort{fcx;fvar;'bad target variable(s)'};
	(iû#jû(tnc=`null)/É#tnc) do (%j[i]#to)ûfcx%fvar;
	sfûG_settings{fr;};
	has@0 1{to;sf}
	}

ãã ***  in/out functions for tio, dio, qio

in{s;d;i;p;c;v}:
	{
	case (flat_super{0Øof{,`class;c,v}})
		{
		`scalar `hscale `vscale;	in_scalar{s;d;i;p;c;v};
		`array `tableField `matrix;	in_array{s;d;i;p;c;v};
		`slot;				in_slot{s;d;i;p;c;v};
		}
	}

out{s;d;i;p;c;v}:
	{
	case (flat_super{0Øof{,`class;c,v}})
		{
		`scalar `hscale `vscale;	out_scalar{s;d;i;p;c;v};
		`array `tableField `matrix;	out_array{s;d;i;p;c;v};
		`slot;				out_slot{s;d;i;p;c;v};
		}
	}

in_scalar{s;d;i;p;c;v}:
	{
	(rc;za)ûdo s{(d;(c,v) _get `s.io)};
	if (0=rc) z Ý (c,v) _set (`s.io;a) Ý (z;a)ûza
	}

out_scalar{s;d;i;p;c;v}:s{(d;(c,v) _get `s.io)}

in_array{s;d;i;p;c;v}:
	{
	if (()½aû(c,v) _get `s.io) aû(Òc%v)Ò<();
	gûGf{1};
	(rc;za)ûdo s{(d;>i#a)};
	Gf{g};
	if (0=rc) z Ý (c,v) _set (`s.io;a) Ý (i#a)û<b Ý (z;b)ûza
	}

out_array{s;d;i;p;c;v}:if (()½a Ý aû(c,v) _get `s.io) s{d} else out_array_index{s;d;i;a}

out_array_index{s;d;i;a}:
	{
	gûGf{1};
	zûif (0=rc Ý (rc;z)ûdo s{(d;>i#a)}) z else s{d};
	Gf{g};
	z
	}

in_slot{s;d;i;p;c;v}:
	{
	if (()½aû(c,v) _get `s.io) aû(#0Øc%v)Ùa;
	jû(0Øc%v)Ép;
	(rc;za)ûdo s{(d;jØa)};
	if (0=rc) z Ý (c,v) _set (`s.io;a) Ý (jØa)ûb Ý (z;b)ûza
	}

out_slot{s;d;i;p;c;v}:if (()½a Ý aû(c,v) _get `s.io) s{d} else s{(d;>((0Øc%v)Ép)#a)}

ãã ***	"of"/"has" argument/result processors

of_result{z;rnk;shp;dep}:if ((OF=1)©dep>0) z else shpÒz

of_arguments{r;s}:
	{
	if (`sym¨©s) print_abort{;;'right argument to of{} must be symbolic'};
	if (~(<Òs)Å(É0;,1;,2)) print_abort{;;'right argument to has{} must be `var, `cx.var, or `cx `var'};
	(cx;var)ûc_c{s};
	idûwidget{cx,var};
	clsûif (0¨id) g_varClass{cx,var} else `variable;
	if (`null¨_nc{cx;var}) eval{cx;var};
	(cx;var;id;cls;,r;#Òr;Òr;½r)
	}

has_arguments{s;o}:
	{
	(cx;var)ûnew_symbol{s;;0};
	(r;v)û_alsf{o};
	if (0=idûwidget{cx,var}) if (~^/kûrÅ(`Öo),oûobject_attributes{}) if ((kÉ0)<Ä/rÉ`class `.class)
		{
		print_error{cx;var;'attempt to set a widget attribute on a free variable -- binding to default class ...'};
		idûwidget{bind{cx,var}};
		};
	clsûif (0¨id) g_varClass{cx,var} else `variable;
	if (`null¨_nc{cx;var}) eval{cx;var};
	(cx;var;id;cls;,r;,v)
	}

ãã ***	Class default attributes	

classesHaving{r}:  (^/@¢1>(<r)Å¡attributes_of_class¡{cls})/cls Ý clsûclasses{}

hasDefault{cls;o}:
	{
		if (()½cls) 		Ø&¡{classes{};<o}
	else 	if (~clsÅclasses{}) 	print_abort{;;(,Îcls),' is not a class'}
	else 				cls Ý has_default_value{cls;rr;vv} Ý (rr;vv)û_alsf{o}
	}

defaultOf{rr;cls}:if (~clsÅclasses{}) print_abort{;;(,Îcls),' is not a class'} else default_value_of{rr;cls}

resetDefaults{cls}:
	{
	(ax;ay)ûget_class_defaults{cls};
	(bx;by)ûget_class_defaults_0{cls};
	zû();
	if (1Åbû~axÅbx) has_default_value{cls;z;(#z)Ù()} Ý zûb/ax;
	(ax;ay)û(<axÅbx)/¡(ax;ay);
	(ax;ay)û(<axÉbx)#¡(ax;ay);
	if (1Åbû~>ay½¡by) has_default_value{cls;k;b/by} Ý z[,]ûkûb/bx;
	if (clsÅprimitives{}) (%ro)û_get{ro;`s.reference_data} Ý roû`sÖreference_object{cls};
	(cls;<z)
	}

ãã ***  Attribute types

Has{cls;o}:
	{
		if (cls½()) 		Ø&¡{classes{};<o}
	else 	if (~clsÅCLASSES) 	print_abort{;;(,Îcls),' is not a class'}
	else
		{
		(rr;vv)û_alsf{o};
		bûINITIAL=m[;0] Ý mûÎ,rr;
		if (0Åb) has_default_value{cls;(~b)/rr;(~b)/vv};
		if (1Åb) Has_default_value{cls;b/Â1Õ@1 m;b/vv};
		cls
		}
	}

Of{rr;cls}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'}
	else
		{
		(rnk;shp;dep)û(#Òrr;Òrr;½rr);
		bûINITIAL=m[;0] Ý mûÎ,rr;
		z0ûif (0Åb) default_value_of{(~b)/rr;cls};
		z1ûif (1Åb) default_value_Of{b/Â1Õ@1 m;cls};
		of_result{(èèb)#z0,z1;rnk;shp;dep}
		}
	}

ãã ***

attributesOf{vars;sym}:
	{
	(cx;var)ûc_c{sym};
	clsûg_varClass{cx,var};
	(at;cf;ty)û(CLASSESÉcls)Ø¡(ATTRIBUTES;DEFAULTS;ATTRIBUTE_TYPES);
	varsû>q_n¡{c_c¡{vars}};
	zû();
	(iû#vars) do
		{
		vûi#vars;
		zûz,<if (0<#atx Ý (atx;tyx)û(<(~atÅused{cx,var})^cfÅ<v)/¡(at;ty))
			{
			idûg_varWid{cx,var};
			ovû_get{v;`s.attribute};
			cvûget_attributes{cx;var;id;cls;atx;0};
			zzûif (1Åb Ý bûtyx=2) if (1Åbbû((b/cv)Å<ov)^`func¨>©¡b/cv) bb/b/atx;
			zzûzz,if (1Åb Ý bû~b) if (1Åbbû((b/cv)Å<ov)©`null=>©¡b/cv) bb/b/atx;
			zz
			};
		};
	z
	}

attributesOfClass{vars;cls}:((<cf)Å¡<¡,>q_n¡{c_c¡{vars}})/¡<at Ý (at;cf)û(CLASSESÉcls)Ø¡(ATTRIBUTES;DEFAULTS)

ãã *** Underlying routines

has_default_value{cls;rr;vv}:
	{
	if (0=#rr) ûcls;
	atsûeditable_attributes{cls};
	(rr;vv)û(<rrÅats)/¡(rr;vv);
	if (0=#rr) ûcls;
	kûCLASSESÉcls;
	(s;w)û,¡kØCLASS_DEFAULTS;
	if (1ÅbûrrÅs)  ((sÉb/rr)#w)ûb/vv;
	if (1Åbû~b)    (s;w)û(s,b/rr;w,b/vv);
	(kØs.CLASS_DEFAULTS)û(<(sÅkØNULL_DEFAULTS)©`null¨Ø©¡w)/¡(s;w);
	(cx;var)ûg_data{idûreference_widget{cls}};
	ovûget_attributes{cx;var;id;cls;rr;0};
	(iû#rr) do propagate{cls;i#rr;iØov;iØvv};
	}

default_value_of{rr;cls}:
	{
	if (0=#rr) û();
	if (0=#rrû(rrÅattributes_of_class{cls})/rr) û();
	sfûget_class_defaults{cls};
	zû(#rr)Ò();
	if (1Åb Ý bûrrÅ0Øsf) (b/z)û(b/rr)Ø¡<sf;
	if (1Åb Ý bû~b) (b/z)ûof{b/rr;`s,reference_object{cls}};
	z
	}

Has_default_value{cls;rr;vv}:
	{
	if (0=#rr) ûcls;
	atsûeditable_attributes{cls};
	(rr;vv)û(<rrÅats)/¡(rr;vv);
	if (0=#rr) ûcls;
	kûCLASSESÉcls;
	jû(kØATTRIBUTES)Érr;
	dflûkØDEFAULTS;
	(rcx;rvar)ûg_data{riûreference_widget{cls}};
	(iû#j) do dfl[j[i]]û<if (`sym=©vûiØvv) 
		{
		vû''Òc_n{v};
		(vcx;vvar)ûÖv;
		if (`null=_nc{vcx;vvar})
			{
			print_alert{vcx;vvar;'electric attribute variable set to current default'};
			(%v)û();
			};
		ovû0Øget_attributes{rcx;rvar;ri;cls;i#rr;0};
		nvû%v;
		if (~ov½nv) (%v)ûov Ý if (~nv½()) ovûnv Ý propagate{cls;iØrr;ov;nv};
		set_electric_Has{v;ov};
		v
		}
	else if (`sym=©vûj[i]Ødfl) unset_electric_Has{v};
	(kØs.DEFAULTS)ûdfl;
	}

propagate{cls;at;ov;nv}:
	{
	if (0=#obsû(cls=g_varClass@1{SYMBOLS})/SYMBOLS) û();
	bû2=j#iØATTRIBUTE_TYPES Ý jû(iØATTRIBUTES)Éat Ý iûCLASSESÉcls;
	idsûg_varWid@1{obs};
	(kû#obs) do if (~atÅused{k#obs})
		{
		(cx;var)ûk#obs;
		idûk#ids;
		cvû0Øget_attributes{cx;var;id;cls;at;0};
		if (b)  if ((cv½ov)^`func¨©cv) set_attributes{cx;var;id;cls;,at;,<();0};
		if (~b)	if ((cv½ov)©`null=©cv) set_attributes{cx;var;id;cls;,at;,<nv;0};
		}
	}

default_value_Of{rr;cls}:
	{
	if (0=#rr) û();
	if (0=#rrû(rrÅattributes_of_class{cls})/rr) û();
	kûCLASSESÉcls;
	jû(kØATTRIBUTES)Érr;
	j#kØDEFAULTS
	}

ãã ***	Electrified attributes

uses{s;o}:
	{
	(cx;var;id;cls;r;v)ûhas_arguments{s;o};
	if (0=#vûØv) û();
	vûc_n@0{v};
	obûdoesNotUse{cx,var;rû,r};
	(iû#v) do
		{
		(ri;vi)ûi#¡(r;v);
		(vcx;vvar)ûÖvi;
		if (`null=_nc{vcx;vvar})
			{
			if (0=id) print_abort{cx;var;'variable not defined, electric attribute variable not defined'};
			(vcx%vvar)û0Øget_attributes{cx;var;id;cls;ri;1};
			print_alert{vcx;vvar;'electric attribute variable set to current value'};
			};
		if (viÅ0ØUSES)
			{
			(obv;rsv)ûviØUSES;
			if (1Åbûob=obv)
				{
				if (~riÅb/rsv)
					{
					obvûobv,ob;
					rsvûrsv,ri
					}
				}
			else
				{
				obvûobv,ob;
				rsvûrsv,ri
				};
			(viØUSES)û(obv;rsv);
			}
		else
			{
			s.USESû((0ØUSES),vi;(1ØUSES),<(,ob;,ri));
			set_electric_has{vi};
			};
		set{cx;var;id;cls;,ri;,<%vi;0};
		};
	ob
	}

doesNotUse{s;rr}:
	{
	obûq_n{c_c{s}};
	(uvs;uvr)ûUSES;
	if (0<#uvs)
		{
		(iû#uvs) do (iØuvr)û(<~(a=ob)^bÅrr)/¡(a;b)ûiØuvr;
		s.USESû(uvs;uvr);
		if (0Åboolû0<Ø#¡0Ø¡uvr)
			{
			unset_electric_has¡{(~bool)/uvs};
			(s.USES)û(<bool)/¡USES;
			};
		};
	ob
	}

free_from_use{sym}:
	{
	(a;b)ûUSES;
	cûdû();
	(iû#a) do
		{
		if (1Åkû(`class=1Øtup)©sym¨0ØtupûiØb)
			{
			cûc,i#a;
			dûd,<(<k)/¡tup;
			};
		};
	s.USESû(c;d);
	unset_electric_has¡{(~aÅc)/a};
	sym
	}

using{sym}:
	{
	(cx;var)ûc_c{sym};
	symûcxÖvar;
	if (~symÅ0ØUSES) (;)
	else
		{
		(r;v)ûsymØUSES;
		(r;v)û(<è(unique{r}/r)Ér)#¡(r;v);
		vû(Ú1,¢1Õr¨¢1÷r)Úv;
		rûunique{r}/r;
		(r;v)
		}
	}

used{o}:
	{
	(var;att)ûØ¡0 1Ø¡¡<1ØUSES;
	if (0<#var) s.unique{z}/zû(var=q_n{c_c{o}})/att
	}

usedBy{rr;o}:
	{
	(var;att)û0 1Ø¡¡<1ØUSES;
	bûvarÅ¡<q_n{c_c{o}};
	iû(ô>(<rr)Å¡b/¡att)É@1Û1;
	i#(Û¡0ØUSES),<()
	}

ãã ***	external utilities

canBe{var;cls}:	 	(verify_of_class{cls})¡{cx;var;cls} Ý (cx;var)ûc_c{var}
canHave{cls;atts}:	if (0=#atts) É0 else `null¨>©¡1Ø¡ofClass{atts;cls}

shells{}:		shell_objects{is_shell}
popups{}:		shell_objects{bIsPopup}
toplevels{}:		shell_objects{bIsTopLevel}
subClasses{x}:		if (0<#csû(Ø(<x)Å¡PROPER_SUPER)/CLASSES) (<¡cs),¡&¡{cs}
superClasses{x}:	(<x),if (0<#csû(CLASSESÉx)ØPROPER_SUPER) &¡{cs}
realClasses{}:		ontological_classes{1}
virtualClasses{}:	ontological_classes{2}
metaClasses{}:		ontological_classes{0}
realContainers{}:	(1=container_type@0{c})/cûclasses{}
virtualContainers{}:	(2=container_type@0{c})/cûclasses{}
primitives{}:		(0=container_type@0{c})/cûclasses{}
containers{}:		realContainers{},virtualContainers{}
bind{s}:		z Ý s.BINDINGû0 Ý zûis_object{s;class_of_symbol{s;1}} Ý s.BINDINGû1
boundTo{cls}:		if (0<#obsû(~SYMBOLSÅreference_objects{})/SYMBOLS) q_n{(cls=g_varClass@1{obs})/obs}
classes{}:		sym_sort{KNOWABLE/CLASSES}
attributes{c}:		if ((#CLASSES)>iûCLASSESÉc) sym_sort{iØATTRIBUTES}
properties{x}:		sym_sort{editable_attributes{class_of_symbol{x;0}}}
objects{}:		sym_sort{q_n{(~SYMBOLSÅreference_objects{})/SYMBOLS}}
beep{s}:		if (`null¨_nc{`s;`SERVER}) if (0<SERVER) bBeep{SERVER}
symbol{wid}:		if (0¨wid) g_data{wid}
widget{sym}:		if (`sym¨©sym) 0 else if (0<#sym) g_varWid{c_c{sym}} else 0
reset{}:		Øfree¡{shells{}}
Reset{}:		(<0<>#¡1Øz)/¡z Ý (1Øz)ûØ1Øz Ý zû_alsf{ØresetDefaults¡{classes{}}}
which{sf}:		(of¡{(<,r);obs}Å<v)/obs Ý obsûobjects{} Ý (r;v)û_alsf{sf}
desktop{}:		if (0½z Ý zûbVirtualGeometry{SERVER}) ¢1 ¢1 else z
here{}:			if (0½z Ý zûbVirtualScreen{SERVER}) ¢1 ¢1 else bVirtualGeometry{SERVER}Î¢1+z
this{}:			if (0¨zûg_focusWindow{}) cÖv Ý (c;v)ûg_data{z}
beHere{s}:		has{s;(`atsector;here{};`raise;1)}
there{x}:		1+bVirtualGeometry{SERVER}Âz
goThere{x}:		bSetVirtualScreen{there{x}}
natural{}:		Ý has¡{shells{};`naturalsize}
na{cx;var}:		(©cx%var)ØNA
refresh{}:		Ý has¡{o;`refresh} Ý oû(_flat{of¡{`class;o}}ÅrealClasses{})/o Ý oûobjects{}
eval{cx;var}:		if ((0¨__utd{cx,var})©1=G_evaluate{cx,var}) cx%var else Ý print_alert{cx;var;'is not evaluated'}
sym_sort{z}:		(èÎz)#z

warpPointer{w}: bWarpPointer{s.g_varWid{w}}

ãã ***	Inheritance hierarchy

classTree{}:		(`ur;,<classTree_rec{`ur})
classTree_rec{x}:	if (0<#zû(Ø(<x)Å¡PROPER_SUPER)/CLASSES) (z;&¡{z})

heritage{c;s}:>Ø(b/c),¡¡b/s Ý bû0<>#¡s

ãã ***  Scroll group presets

new_old{s;d;i;p;c;v}:
	{
	newûoldûif (`vars=_nc{c;v}) c%v;
		
		if ((i½())^p½()) 		newûd
	else	if (i½())			(pØnew)ûd
	else	if (`int=©i)			(i#,pØnew)ûd
	else	if (10=0Ødo (i#pØnew)ûd)	(pØnew)[,]ûd;

	(cÖnew;cÖold)
	}

vScroll{s;d;i;p;c;v}:d Ý scroll_group{s;d;i;p;c;v;`setrow`setfirstrow`vscrollwith}
hScroll{s;d;i;p;c;v}:d Ý scroll_group{s;d;i;p;c;v;`setcol`setfirstcol`hscrollwith}

scroll_group{s;d;i;p;c;v;atts}:
	{
	(it;fit;grp)ûatts;
	(new;old)ûnew_old{s;d;i;p;c;v};
	if (~(^/newÅold)^^/oldÅnew)
		{ 
		(jû#subû(~oldÅnew)/old) do has{j#sub;(grp;;it;0;fit;0)};
		(jû#addû(~newÅold)/new) do has{j#add;(grp;(new¨j#add)/new;it;1;fit;1)};
		(jû#updû(newÅold)/new) do has{j#upd;(grp;(new¨j#upd)/new)};
		};
	}

ãã ***	"free" subfunctions

free_if{cx;var;vars}:
	{
	if (0=#vars) 0 2Ò()
	else
		{
		symsûmatrify{c_v{cx;_flat{vars}}};
		if (~1Åbû0¨widget@1{syms}) 0 2Ò() else Øfree_instance¡{<@1b/syms;<cx,var}
		}
	}

free_instance{s;t}:
	{
	(cx;var)ûc_c{s};
	if ((cxÖvar)½`s.WM_SAVE_YOURSELF) print_abort{cx;var;'cannot be freed'};

	if (WS½cx,var) destroy_workspace{};

	if (~is_variable{cx;var}) 	û0 2Ò();
	if (0=idûwidget{s}) 		û0 2Ò();

	exstûSYMBOLS;
	if (0<#t)
		{
		(rcx;rvar)ûc_c{t};
		exstû(~exstÅ1 2Òrcx,rvar)/exst
		};
	if (~flagûclass_of_id{id}ÅrealClasses{})
		{
		exstû(~exstÅsymsû1 2Òcx,var)/exst;
		}
	else
		{
		(syms;clss)ûdestroy_object{id};
		(iû#syms) do unset_callback{0#i#syms;1#i#syms;i#clss};
		};

	widsûwidget@1{exst};
	(exst;wids)û(<wids¨0)/¡(exst;wids);
	if (0<#wids)
		{
		clssûclass_of_id¡{wids};
		(exst;wids;clss)û(<0<Ø#¡clss)/¡(exst;wids;clss);
		if (0<#wids)
			{
			clssûØclss;
			(exst;wids;clss)û(<(flag#2 1)=container_type@0{clss})/¡(exst;wids;clss);
			if (0<#wids)
				{
				(exst;wids;clss)û(<~exstÅreference_objects{})/¡(exst;wids;clss);
				if (0<#wids)
					{	
					(iû#exst) do normalize_container{i#exst;i#clss;syms;flag};
					};
				};
			};
		};

	print_alert{cx;var;'freed'};
	syms	
	}

normalize_container{sym;cls;syms;flag}:
	{
	(ncx;nvar)ûsym;
	oldûncx%nvar;
	newûremove_symbols{(ncx;old);syms};
	if (new½old) û();
	unset_callback{ncx;nvar;cls};
	(ncx%nvar)ûnew;
	if (flag) print_alert{ncx;nvar;(Îcls),' assignment'} else set_v_container{ncx;nvar;old;0};
	set_callback{ncx;nvar;cls;new};
	}

ãã *** 	Generate symbols

new_widget{s}:if (0¨idûwidget{s}) id else widget{bind{s}}

new_symbol{s;cls;flag}:
	{
		if (`sym¨©s) 			generate_symbol{_gsv{`cx};s}
	else 	if (~(2¦#s)^(1¦#Òs)^0=½s) 	generate_symbol{_gsv{`cx};s}
	else
		{
		(cx;var)ûc_c{s};
		ncû_nc{cx;var};
			if (ncÅ`deps `vars) 		cx,var Ý (if (flag) cx%var)
		else	if (nc¨`null)			print_abort{cx;var;'cannot bind a ',,Înc}
		else	if (()½cls)			cx,var Ý (cx%var)û()
		else 	if (~clsÅCLASSES)		print_abort{cx;var;(,Îcls),' is not a class'}
		else	if (~2½container_type{cls})	cx,var Ý (cx%var)û`s%reference_object{cls}
		else					cx,var Ý (cx%var)û()
		}
	}

generate_symbol{cx;val}:generate_symbol_prefixed{cx;val;}

generate_symbol_prefixed{cx;val;pfx}:
	{
	(cx;var)ûnext_variable_symbol{cx;pfx};
	(cx%var)ûval;
	print_alert{cx;var;'variable generated'};
	cx,var
	}

next_variable_symbol{cx;pfx}:
	{
	if (0=#pfx) pfxû0ØALPHA_NUM;
	alphaû,ØÂ¡pfx;
	globsû_nl{cx;`globs};
	varûif (0ÅbûalphaÅglobs) Î(bÉ0)#alpha
	else
		{
		pfxûpfx,' ';
		globsûÎglobs;
		mmû1Õ@1(globs[;0]=0#pfx)/globs;
		mmû(~mm½@1' ')/mm;
		mmû(^/@1 mmÅ' ',3ØALPHA_NUM)/mm;
		nnûif (0=#mm) 0 else
			{
			(rc;nn)û_fi{mm;1};
			if (~1Årc) 0 else 1+Ó/rc/nn
			};
		(0#pfx),1Õînn
		};
	cx,Âvar
	}

ãã ***	Recursively remove symbols from a container

remove_symbols{x;old}:
	{
	(cx;val)ûx;

		if (0<½val)	sÒval Ý valû&¡{(<<cx),¡<¡val;<old} Ý valû,val Ý sûÒval
	else	if (`sym¨©val)  val
	else 	if (1¦#Òval) 	(~matrify{c_v{cx;val}}Åold)/val
	else			sÒval Ý ((~b)/val)û` Ý valûb\b/val Ý bû~matrify{c_v{cx;val}}Åold Ý valû,val Ý sûÒval
	}

ãã ***	Variable classification

class_of_symbol{sym;flag}:
	{
	(cx;var)ûc_c{sym};
	if (~is_variable{cx;var}) û();
	if (0¨g_varWid{cx,var}) g_varClass{cx,var}
	else
		{
		if (~flag) s.QUIETû¢1 Ý qqûQUIET;
		zûif (~()½zûpick{cxÖvar;ARE}) z
		else case (©valûif (flag) cx%var else eval{cx;var})
			{
			`box;	{
					if (verify_variable{cx;var;`radio})	`radio
				else	if (verify_variable{cx;var;`check})	`check
				else	if (verify_variable{cx;var;`slot})	`slot
				else	if (verify_variable{cx;var;`layout})	`layout
				else	if (verify_variable{cx;var;`array})	`array
				else						`scalar
				};
			`func;	`button;
			`null;	`scalar;
			`char;	if (verify_variable{cx;var;`array}) `array else `scalar;

				if (2=#Òval)
					{
						if (verify_variable{cx;var;`layout})	`layout	
					else 	if (verify_variable{cx;var;`array})	`array
					else						`scalar
					}
				else if (1=#Òval)
					{
						if (verify_variable{cx;var;`table})	`table
					else	if (verify_variable{cx;var;`graph})	`graph
					else	if (verify_variable{cx;var;`layout})	`layout
					else 	if (verify_variable{cx;var;`array}) 	`array
					else 						`scalar
					}
				else `scalar

			};
		if (flag) print_alert{cx;var;'S will bind variable to ',Îz} else s.QUIETûqq;
		z
		}
	}

ãã ***	Reparenting

create_new_top{cx;var;id;wid}:
	{
	tidûg_topLevel{id};
	(y;x)ûg_y{tid},g_x{tid};
	tlistûg_tabList{tid};
	tlistû(tlistÅid,G_descendents{id})/tlist;
	s_parent{id;wid};
	uidûg_parent{id};
	s_data{uid;cx,var};
	(ev;cb)û(wid+1)Ø((`dismiss;call_dismiss);(`quit;call_quit));
	bAddCB{uid;ev;2Ùcb};
	s_windowName{uid;if (0<#titûg_varTitle{cx,var}) tit else variable_name{cx;var}};
	s_tabList{g_topLevel{id};tlist};
	bMoveTo{uid;x;y};
	uid
	}

destroy_old_top{tid}:
	{
	mûbMapped{tid};
	s_data{tid;0};
	bDestroy{tid};
	m
	}

rem_tab_list{id}:
	{
	cidsûid,_flat{G_descendents{id}};
	tidûg_topLevel{id};
	tlistûg_tabList{tid};
	bûtlistÅcids;
	s_tabList{tid;(~b)/tlist};
	b/tlist
	}

add_tab_list{id;tlist}:
	{
	tidûg_topLevel{id};
	olistûg_tabList{tid};
	olistû((~olistÅtlist)/olist),tlist;
	s_tabList{tid;olist};
	}

re_parent{cx;var;id;wid}:
	{
	if (wid¨pidûg_parent{id})
		{
		tlistûrem_tab_list{id};
		if (wsflagûWS½cx,var)
			{
			oftû0Ø1ØG_followertree{g_parent{g_varWid{cx,var}}};
			destroy_workspace{};
			};
		reset_null_title{cx;var};
		if (0¨pid) if (0¨g_parent{pid})
			{
			symûsymbol{pid};
			dflagûclass_of_id{id}ÅrealClasses{};
			clsûclass_of_symbol{sym;1};
			normalize_container{sym;cls;1 2Òcx,var;dflag};
			if (0=idûwidget{cx,var}) idûbe_of_class{cx;var;class_of_symbol{cx,var;0};SHELL};
			pidûg_parent{id};
			};
		if (flagû0=g_parent{pid}) tidûpid;
		if (zpflagû©/wid=0 ¢1) create_new_top{cx;var;id;wid} else s_parent{id;wid};
		set_null_title{cx;var};
		msgûif (~zpflag) Îq_n{g_data{wid}} else if (wid½0) 'top level window' else 'popup window';
		print_alert{cx;var;'variable reparented to ',msg};
		rmûif (flag) destroy_old_top{tid} else ¢1;
		if (wsflag) recreate_workspace{id;oft;rm};
		add_tab_list{id;tlist};
		};
	id
	}

re_parent_to_default{cx;var}:re_parent{cx;var;g_varWid{cx,var};SHELL}

ãã ***	Message preset

set_message_callback{}:		append_reference{`s;`MSG;0;<{preset_message};}

preset_message{s;d;i;p;c;v}:	if (~()½d) cx,var Ý if (0=#cx Ý (cx;var)û2Ùvariable_symbol{d}) preset_fail{c;v;`MSG;'must be the symbol of a possible variable'}

ãã ***	Workspace creation, destruction and re-creation

autows{x}:
	{
	if ((()½x)^(AUTOWS=1)^()½WS) ûz Ý s.AUTOWSû0 Ý zû(AUTOWS;WS);
	if ((~()½x)^(AUTOWS=0)^()½WS) (s.AUTOWS;s.WS)ûx;
	}

set_auto_workspace_callback{}:
	{
	append_reference{`s;`AUTOWS;0;<{preset_auto_workspace};};
	append_reference{`s;`AUTOWS;1;<{set_auto_workspace};};
	s.AUTOWSû1;
	}

preset_auto_workspace{s;d;i;p;c;v}:if ((d½0)©d½1) d else preset_fail{c;v;`AUTOWS;'not boolean'}

set_auto_workspace{s;d;i;p;c;v}:
	{
	if (d=1) set_workspace_callback{}
	else
		{
		unset_workspace_callback{};
		s.WSû();
		s_defaultLeader{0};
		}
	}

set_workspace_callback{}:
	{
	append_reference{`s;`WS;0;<{preset_workspace};};
	append_reference{`s;`WS;1;<{set_workspace};};
	}

unset_workspace_callback{}:
	{
	remove_reference{`s;`WS;0;<{preset_workspace}};
	remove_reference{`s;`WS;1;<{set_workspace}};
	}

preset_workspace{s;d;i;p;c;v}:
	{
	if (()½d) null_workspace{}
	else
		{
		(cx;var)û2Ùvariable_symbol{d};
		if (0=#cx) preset_fail{c;v;`WS;};
	
		if (~WS½cx,var)
			{
			if (~is_variable{cx;var}) 	preset_fail{cx;var;`WS;'not a variable'};
			if (0=G_ws{cx,var}) 		preset_fail{cx;var;`WS;'1¨0Ø`ws of variable'};
			if (0=idûg_varWid{cx,var}) 	preset_fail{cx;var;`WS;'variable not bound'};
			if (is_a{cx,var;OBJECT_CLASS}) 	preset_fail{cx;var;`WS;'reference object cannot be WS'};
			if (is_one_of{cx,var;REPORT_CLASSES}) 	preset_fail{cx;var;`WS;'a report object cannot be WS'};
			if (~zero_parent{id}) 		preset_fail{cx;var;`WS;'variable not a shell'};
			if (`s=cx) 			preset_fail{cx;var;`WS;'variables in s context cannot be used'};
			null_workspace{};
			};
		cx,var
		}
	}

set_workspace{s;d;i;p;c;v}:if (~()½d) recreate_workspace{g_varWid{d};s;¢1}

null_workspace{}:
	{
	if (AUTOWS=0) û();
	if (()½WS) û();
	if (0=jdûg_varWid{WS}) û();
	tjdûg_parent{jd};
	append_reference{`s;`WS;1;<{set_workspace};G_followertree{tjd}};
	flrsûG_followers{tjd};
	jflagûG_mapped{tjd};	
	ntjdûcreate_new_top{0#WS;1#WS;jd;SHELL};
	destroy_old_top{tjd};
	S_followers{ntjd;flrs};
	if (jflag) map{ntjd};
	}

remove_workspace_node{nws;sf}:
	{
	if (0=#sf) (;)
	else
		{
		if (~1Åbûnws=0Ø(l;r)ûsf) (l;&¡{nws;r})
		else
			{
			rrû(bÉ1)Ør;
			(l;r)û(<~b)/¡(l;r);
			if (0=#rr) (l;r) else (l,0Ørr;r,1Ørr)
			}
		}
	}

destroy_workspace{}:
	{
	if (AUTOWS=0) û();
	unset_workspace_callback{};
	s.WSû();
	s_defaultLeader{0};
	set_workspace_callback{};
	}

recreate_workspace{id;oft;rm}:
	{
	if (AUTOWS=0) û();
	(wcx;wvar)ûg_data{tidûg_topLevel{id}};
	mflagûif (rm=¢1) bMapped{tid} else rm;
	nwsûwcxÖwvar;
	trû		if 	(1<#0Ø(ows;sf)û2Ùoft) 	(,nws;,<remove_workspace_node{nws;oft})
		else 	if 	((0<#ows)^~nws½ows) 	(,nws;,<(ows,l;(<()),r)) Ý (l;r)ûremove_workspace_node{nws;0Øsf}
		else 					oft;
	destroy_workspace{};
	widûg_varWid{wcx,wvar};
	pidûg_parent{wid};
	if (~bIsTopLevel{pid})
		{
		pidûg_parent{re_parent{wcx;wvar;wid;0}};
		s_data{pid;wcx,wvar};
		};
	print_alert{wcx;wvar;'workspace will be created'};
	S_followertree{pid;tr};
	build_workspace{wcx;wvar;pid};
	gather_followers{wcx;wvar;pid;_flat{tr}};
	S_shellTitle{pid;shell_title{wcx;wvar}};
	if (mflag) map{pid};
	}

create_workspace{cx;var;pid}:
	{
	if (AUTOWS=0) û();
	build_workspace{cx;var;pid};
	gather_followers{cx;var;pid;};
	}

build_workspace{cx;var;pid}:
	{
	unset_workspace_callback{};
	s_defaultLeader{pid};
	s.WSûcx,var;
	set_workspace_callback{};
	}

gather_followers{cx;var;pid;flrs}:
	{
	if (0=#obsû(obs¨cxÖvar)/obsûobjects{}) û();
	if (0=#obsû(~obsÅflrs)/obs) û();
	if (0=#obsû(~is_a@0{obs;OBJECT_CLASS})/obs) û();
	if (0=#obsû(~is_one_of@0 1{obs;REPORT_CLASSES})/obs) û();
	if (0=#pidsû(pid¨pids)/pidsûg_parent@0{g_varWid@0{obs}}) û();
	if (0=#pidsû(0=g_parent@0{pids})/pids) û();
	S_windowGroup@0{pids;pid};
	}

ãã ***	Binding

is_object{sym;cls}:
	{
	shlûif (()½cls) SHELL else if ('_'¨1Ùc Ý cûÎcls Ý clsû''Òcls) SHELL else (¢1 0ÉSHELL)#0 ¢1 Ý clsûÂ1Õc;
	symûnew_symbol{sym;cls;0};
	if (()½cls) clsûclass_of_symbol{sym;1};
	(sym;pid)û,¡if (0=idûg_varWid{sym}) (sym;shl) else if (1=zero_parent{id}) (sym;shl) else (sym;g_parent{id});
	if (`int¨©pid) print_abort{;;'non-symbolic argument to is{}'};
	is_object_0{0#sym;1#sym;pid;cls;shl}
	}

is_object_0{cx;var;pid;cls;shl}:
	{
	if (((cxÖvar)½`s.WM_SAVE_YOURSELF)^~clsÅNON_WIDGETS) print_abort{cx;var;'cannot be bound to a `',,Îcls};

	dshlû,if (WS½cx,var) 0 else shl;
	if (pid=shl) pidûdshl;

	if (~clsÅrealClasses{})	
		print_abort{cx;var;(,Îcls),' is not a real class'};

	if ((clsÅ`graph `table)^~(©eval{cx;var})Å`sym `null)
		ûis_object{generate_symbol_prefixed{cx;var;(`graph `tableÉcls)#'gt'};cls};

	if (~verify_variable{cx;var;cls})
		print_abort{cx;var;'variable cannot be bound to ',Îcls};

	ctûcontainer_type{cls};

	if (0=idûg_varWid{cx,var})
		idûbe_of_class{cx;var;cls;pid}
	else if (cls¨oclsûclass_of_symbol{cx,var;1})
		{
		unset_callback{cx;var;ocls};
		zflagûzero_parent{id};
		if (zflag)
			{
			tidûg_parent{id};
			(ypos;xpos)ûg_y{tid},g_x{tid};
			oftûG_followertree{tid};
			};
		mflagûG_mapped{id};
		aflagû~¢1 ¢1 ¢1 ¢1½atvalûG_at{id};
		if ((1=ct)^1=container_type{ocls})
			{
			s.JUNKûqualify_symbols{cx;oldûeval{cx;var}};
			jidûbe_of_class{`s;`JUNK;ocls;dshl};
			destroy_object{id};
			pidûif zflag dshl else pid;
			idûbe_of_class{cx;var;cls;pid};
			(cx%var)ûold;
			destroy_object{jid};
			unset_callback{`s;`JUNK;ocls};
			}
		else
			{
			if (oclsÅrealClasses{}) destroy_object{id} else pidûdshl Ý free_instance{cx,var;};
			idûbe_of_class{cx;var;cls;pid};
			};
		if (aflag) S_at{id;atval};
		if (zflag)
			{
			tidûg_parent{id};
			bMoveTo{tid;xpos;ypos};
			S_followertree{tid;oft};
			};
		if (mflag) show_id{id};
		};

	if ((,dshl)½,pid) S_shellTitle{g_parent{id};shell_title{cx;var}};
	cxÖvar
	}

ãã ***	Object creation

be_of_class{cx;var;cls;par}:
	{
	vûcx%var;
	if (2=ctûcontainer_type{cls})
		{ 
		free_if{cx;var;v};
		if ((cxÖvar)Åqualify_symbols{cx;,v}) print_abort{cx;var;'circularity detected - object not bound'};
		};
	if (0=widûwidget{cx,var})
		{
		widûcreate_object{cls;par;cx;var;1};
		if (cx¨`s) print_alert{cx;var;'variable bound to ',Îcls}
		};
	if (0<#fnû(CLASSESÉcls)ØBE_FNS) fn¡{cx;var;cls;v;wid};
	set_callback{cx;var;cls;v};
	call_scv{cx,var;`s.is};
	wid
	}

ãã ***	Container be-functions

be_vgrid{cx;var;cls;nar;wid}:		be_grid_parent{cx;var;nar;wid;0}
be_hgrid{cx;var;cls;nar;wid}:		be_grid_parent{cx;var;nar;wid;1}
be_layout{cx;var;cls;nar;wid}:		be_layout_parent{cx;var;nar;wid;1}
be_pane{cx;var;cls;nar;wid}:		be_layout_parent{cx;var;nar;wid;0}
be_collapsible{cx;var;cls;nar;wid}:	be_layout_parent{cx;var;nar;wid;0}
be_notebook{cx;var;cls;nar;wid}:	be_notebook_parent{cx;var;nar;wid}
be_window{cx;var;cls;nar;wid}:		be_window_parent{cx;var;nar;wid}
be_table{cx;var;cls;vars;wid}:		be_v_container{cx;var;vars;wid;0#contains_of{cls}}
be_graph{cx;var;cls;vars;wid}:		be_v_container{cx;var;vars;wid;0#contains_of{cls}}

be_v_container{cx;var;vars;wid;cls}:	(iû#varsû,vars) do couple_object{cx;i#vars;cls;}

be_menu{cx;var;cls;vars;wid}:		()

ãã ***	Layout analysis and construction

be_window_parent{cx;var;nar;wid}:
	{
	if (0=#nar) û();
	(cx;cvar)ûc_v{cx;''Ònar};
	free_if_undefined{cx;var;cvar};
	re_parent{cx;cvar;be_child{cx;cvar;wid};wid};
	}

be_grid_parent{cx;var;nar;wid;grflag}:
	{
	if (0ÅÒnar) û();
	(rc;fnar)ûdo _flat{nar};
	if (0ÅÒfnar) û();
	if ((`sym¨©fnar)©rc¨0)
		{
		free_instance{cx,var;};
		print_abort{cx;var;'atoms of a ',(,Îg_varClass{cx,var}),' must be symbols'};
		};
	widsûwidget@1{c_v{cx;_flat{nar}}};
	sflagû(1¦#Ònar)^0=½nar;
	abflagûG_containerBuild{wid};
	apflagûG_containerPosition{wid};
	if (sflag^~abflag©apflag) (iû#narû,nar) do be_container_child{cx;var;i#nar;wid;¢1 ¢1;`yx;1}
	else
		{
		if (~abflag) if (sflag) narûÛ¡nar;
		narû(`null¨>©¡nar)/nar;
		if (0=#nar) û();
		hlûg_shadowThickness{wid};
		if (~abflag)
			{
			(fw;fh)ûgrflag÷(g_width;g_height);
			(fp;fq)ûgrflag÷(g_y;g_x);
			xsû0;
			yûhl;
			(iû#nar) do 
				{
				xûhl;
				ysûy;
				(jû#itmû,iØnar) do
					{
					cidûbe_container_child{cx;var;j#itm;wid;grflag÷y,x;`yx;1};
					xûx+fw¡{cid};
					ysûysÓfh¡{cid}+fp¡{cid};
					xsûxsÓfw¡{cid}+fq¡{cid};
					};
				yûys;
				};
			(ys;xs)ûgrflag÷hl+ys,xs;
			}
		else
			{
			print_alert{cx;var;'"autobuild" is on'};
			(ul;xt;yx)ûtrim_coordinates{>,where_widgets¡{wids}};
			(iû#nar) do if (0<#itmû,iØnar) (jû#itm) do be_container_child{cx;var;j#itm;wid;hl+(i;0 1)#yx;`yx;1};
			(ys;xs)ûxt+2«hl;
			if (zero_parent{wid}) S_yx{g_topLevel{wid};0Ó(2Ùul)-hl}
			};
		s_height{wid;ys};
		s_width{wid;xs};
		};
	
	}

be_layout_parent{cx;var;nar;wid;pflag}:
	{
	if (0ÅÒnar) û();
	(rc;fnar)ûdo _flat{nar};
	if (0ÅÒfnar) û();
	if ((`sym¨©fnar)©rc¨0)
		{
		free_instance{cx,var;};
		print_abort{cx;var;'atoms of a ',(,Îg_varClass{cx,var}),' must be symbols'};
		};
	widsûwidget@1{c_v{cx;_flat{nar}}};
	sflagû(1¦#Ònar)^0=½nar;
	abflagû(1=pflag)^G_containerBuild{wid};
	apflagûpflag¤G_containerPosition{wid};
	if (sflag^~abflag©apflag) (iû#narû,nar) do be_container_child{cx;var;i#nar;wid;¢1 ¢1 ¢1 ¢1;`at;0}
	else
		{
		if (~abflag) if (sflag) narûÛ¡nar;
		if ((2=#Ònar)^0<½nar) 	narûreduce_to_canonical{nar};
		if ((1¦#Ònar)^0<½nar) 	narû_flat¡{nar};
		if (0<½nar) 		narûarray_geometry{nar};
		if (0ÅÒnar) û();
		if ((~abflag)©2=#Ònar)
			{
			uû((É#u)=uÉu)/uû,nar;
			mûuÊ.=nar;
			rû(rmû©/@1 m)É@1 Û1;
			rsû+/@1 rm;
			cû(cmû©/@1Û0 2 1ô m)É@1 Û1;
			csû+/@1 cm;
			(iû#u) do be_container_child{cx;var;i#u;wid;r[i],c[i],rs[i],cs[i];`at;0};
			}
		else
			{
			print_alert{cx;var;'"autobuild" is on'};
			(ul;xt;yx)ûtrim_coordinates{>,where_widgets¡{wids}};
			yx[;0 2]ûsticky_grid{yx[;0];yx[;2];xt[0]};
			yx[;1 3]ûsticky_grid{yx[;1];yx[;3];xt[1]};
			(iû#narû,nar) do if (0<#itmû,iØnar) (jû#itm) do be_container_child{cx;var;j#itm;wid;i#yx;`at;0};
			if (zero_parent{wid}) S_yx{g_topLevel{wid};0Ó(2Ùul)-SHELL_TITLE_SPACE,0}
			};
		};
	}

be_notebook_parent{cx;var;nar;wid}:
{
	if (0ÅÒnar) û();
	(rc;fnar)ûdo _flat{nar};
	if (0ÅÒfnar) û();
	if ((`sym¨©fnar)©rc¨0)
	{
		free_instance{cx,var;};
		print_abort{cx;var;'atoms of a ',(,Îg_varClass{cx,var}),' must be symbols'};
	};
	narû_flat{nar};
	(iû#nar) do be_notebook_child{cx;var;i#nar;wid};
	widsûwidget@1{c_v{cx;nar}};
	bNotebookPermute{g_varWid{cx,var};wids};
}

be_child{cx;cvar;wid}:
	{
		if (0=idûg_varWid{cx,cvar}) 	g_varWid{be_child_undefined{pcx;pvar;cx;cvar;wid}} Ý (pcx;pvar)ûg_data{wid}
	else 	if (~idÅwid,G_ancestors{wid}) 	id
	else 					print_abort{cx;cvar;'circularity detected - object freed'} Ý free{cx,cvar}
	}

index_map{y;x}:if (~x½y) if (0<½y) &¡{y;<x} else if ((#z)=i Ý iûzÉx Ý zû,y) ¢1 else Û¡(Òy)Îi
pick_vec{y}:if (0<½y) if (0Åb Ý bû>,y½¡¢1) <(Òy)ÎbÉ0 else (kû#z Ý zû,y) do if (~()½r Ý rû&{>k#z}) û(<(Òy)Îk),r else Ù`pick
index_pick{y;x}:if (0=½y) (index_map{y;x};) else (i;p) Ý iûpØm Ý pûpick_vec{m} Ý mûindex_map{y;x}

safe_ip{cx;var;x0;x1}:
	{
	gûGf{1};
	valûcx%var;
	zû	if (0=rc Ý (rc;z)ûdo index_pick{val;x0}) 	z 
	else 	if (0=rc Ý (rc;z)ûdo index_pick{val;x1}) 	z 
	else 							print_abort{cx;var;'child symbol not found in container'};
	Gf{g};
	z
	}

be_child_undefined{pcx;pvar;cx;cvar;wid}:
	{
	(fn;s)û2ÙG_be{pcx,pvar};
	if (`null=©fn) is_object_0{cx;cvar;wid;class_of_symbol{cx,cvar;1};SHELL} 
	else q_n{apply{fn;(s;cxÖcvar;i;p;pcx;pvar)}} Ý (i;p)ûsafe_ip{pcx;pvar;cvar;cxÖcvar}
	}

be_container_child{cx;var;cvar;wid;ext;att;mf}:
	{
	if (cvar=`) û();
	(cx;cvar)ûc_v{cx;cvar};
	free_if_undefined{cx;var;cvar};
	cidûbe_child{cx;cvar;wid};
	idûre_parent{cx;cvar;cid;wid};
	if (~^/ext=¢1)
		{
		if (mf) if (~bBeenMapped{cid}) bMap{cid};
		if(~()½att) set_attributes{cx;cvar;id;g_varClass{cx,cvar};,att;,<ext;0};
		};
	id
	}

be_notebook_child{cx;var;cvar;wid}:
{
  be_container_child{cx;var;cvar;wid;;;0};
  (cx;cvar)ûc_v{cx;cvar};
  cwidûg_varWid{cx,cvar};
  if ("Untitled"½>g_notebookPageTitle{wid;cwid})
    {
      tû>`title of cx,cvar;
      if (validate_title{t})  s_notebookPageTitle{wid;cwid;t};
    }
}

free_if_undefined{cx;var;cvar}:
	{	
	if (is_variable{cx;cvar}) û();
	free_instance{cx,var;};
	print_abort{cx;var;'children of a container must be variables'};
	}

where_widgets{wid}:
	{
	if (0=wid) û¢1 ¢1 ¢1 ¢1;
	yûG_Y{wid};
	xûG_X{wid};
	ysûg_height{wid};
	xsûg_width{wid};
	if (~at_able{wid}) y,x,ys,xs else ((y,x)-g_shadowThickness{g_parent{wid}}),ys,xs
	}

trim_coordinates{yx}:
	{
	bû~yx½@1Û¢1 ¢1 ¢1 ¢1;
	if (~1Åb) û(0 0;¢1 ¢1;yx);
	yxûb/yx;
	ulûÄ/yx[;É2];
	yx[;É2]ûyx[;É2]-@1 ul;
	xtûÓ/yx[;É2]+yx[;2 3];
	yxûb\yx;
	((~b)/yx)û¢1;
	(ul;xt;yx)
	}

sticky_grid{a;b;c}:	ô((0,+\(ÓcßLAYOUT_CT)ÒLAYOUT_CT)èÓa-.5«LAYOUT_CT)~Ä.5+bßLAYOUT_CT

array_geometry{nar}:	if (1Åwû0<vû,Ø#¡nar) >,,¡(lcm{v}ßvûw/v)/¡w/nar

reduce_row{f;m}:
	{
	(iû#m) do
		(jû¢1ÙÒm) do
			((i;j)#m)ûcase (½nû(i;j)#m)
				{
				1;	matrify{n};
				2;	if (1 1½Ònû>n) n else <Ølcm_replicate¡{<@1 n};
					<&{1;>n}
				};
	if (f) m else Ølcm_replicate¡{<@1 m}
	}

lcm_replicate{b}:
	{
	((`null=Ø©¡b)/b)û<`;
	bûmatrify¡{b};
	cûØ0#¡Ò¡b;
	eûcÒ¡lcm{c}ßc;
	fûe/¡b;
	gûôØô¡f;
	hû(Ø1Ø¡Ò¡b)Ú@1 g;
	matrify¡{h}
	}

reduce_to_canonical{x}:
	{
	zûx;
	while (1)
		{
		zûôreduce_row{0;ôô¡reduce_row{0;xûz}};
		if (z½x) û(Òz)Ò_flat{z}
		};
	}

ãã ***	Built-in set callbacks

old_new{c;o;n}:
	{
	oldû(old¨`)/old Ý oldûunique{old}/oldû_flat{o};
	newû(new¨`)/new Ý newûunique{new}/newû_flat{n};
	ovarmûif (0<#old) matrify{c_v{c;old}} else 0 2Ò();
	nvarmûif (0<#new) matrify{c_v{c;new}} else 0 2Ò();
	oû(~ovarmÅnvarm)/ovarm;
	nû(~nvarmÅovarm)/nvarm;
	(o;n)
	}

set_menu{s;d;i;p;c;v}:	()

set_table{s;d;i;p;c;v}:	set_v_container{c;v;s;1}
set_graph{s;d;i;p;c;v}:	set_v_container{c;v;s;1}

set_v_container{cx;var;was;flag}:
	{
	wsûWS;
	newûcx%var;
	(ovarm;nvarm)ûold_new{cx;was;new};
	clsûg_varClass{cx,var};
	print_alert{cx;var;(Îcls),' assignment'};
	dlsû0#contains_of{cls};
	elsû`array;
	funûset_of_class{cls};	
	widûg_varWid{cx,var};
	mflagûG_mapped{wid};
	if (mflag) if (fflagû0=g_freeze{wid}) s_freeze{wid;1};
	ovarsûovarm[;0]Öovarm[;1];
	nvarsûnvarm[;0]Önvarm[;1];
	fvarsûfree_if{cx;var;nvars};
	if ((cx,var)Åfvars) print_abort{cx;var;'circularity detected - object freed'};
	recouple_object{cx;var;cls;wid};
	decouple_object¡{cx;ovars};
	(iû#nvars) do couple_object{cx;i#nvars;dls;};
	rpflagûif (flag) G_containerReparent{wid} else 0;
	rsflagûG_containerReshow{wid};
	if (rpflag)
		{
		cidsûÉ0;
		if (0<#els) (iû#ovars) do
			{
			(ocx;ovar)ûc_v{cx;i#ovars};
			cidsûcids,be_of_class{ocx;ovar;els;SHELL};
			};
		};
	restore_title¡{cx;cxÖovars};
	set_callback{cx;var;cls;new};
	if (mflag)
		{
		if (fflag) s_freeze{wid;0};
		if (rpflag^rsflag) show_id¡{cids};
		};
	if (0<#ws) if (0=#WS) s.WSûg_data{g_topLevel{wid}};
	trigger_workspace_tree{};
	}

set_grid{s;d;i;p;c;v}:set_atContainer{s;d;i;p;c;v}

set_atContainer{s;d;i;p;c;v}:
	{
	wsûWS;
	newûc%v;
	clsûg_varClass{c,v};
	(ovarm;nvarm)ûold_new{c;s;new};
	print_alert{c;v;(,Îcls),' assignment'};
	if (0<#nvarm) remove_v_children{c;nvarm};
	widûg_varWid{c,v};
	mflagûG_mapped{wid};
	pidûg_parent{wid};
	rpflagûG_containerReparent{wid};
	rsflagûG_containerReshow{wid};
	nsflagûG_containerNewshow{wid};
	if (0<#ovarm)
		{
		if (rpflag)
			{
			mflagsûbMapped@0{oidsûg_varWid@1{ovarm}};
			if (aflagûG_containerBuild{wid}^(1¦#Òs)^0=½s) yxûG_YX@0{oids}-@1 SHELL_TITLE_SPACE,0;
			}
		};
	if (mflag) if (fflagû0=g_freeze{wid}) s_freeze{wid;1};
	be_of_class{c;v;cls;pid};
	if (0<#ovarm)
		{
		if (~rpflag) free¡{<@1 ovarm}
		else
			{
			rpflagsûoids=g_varWid@1{ovarm};
			re_parent_to_default¡{rpflags/ovarm[;0];rpflags/ovarm[;1]};
			if (aflag) S_yx@0 1{oids;yx};
			if (rsflag) show_id¡{(mflags^rpflags)/oids};
			};
		};
	if (0<#nvarm)
		{
		nflagsûnsflag©bMapped@0{nidsûg_varWid@1{nvarm}};
		show_id¡{nflags/nids};
		};
	if (0<#ws) if (0=#WS) s.WSûg_data{g_topLevel{wid}};
	if (mflag) if (fflag) s_freeze{wid;0};
	trigger_workspace_tree{};
	}

set_notebook{s;d;i;p;c;v}:{
  (ovarm;nvarm)ûold_new{c;s;c%v};
  widûg_varWid{c,v};
  mflagûG_mapped{wid};
  if (mflag) if (fflagû0=g_freeze{wid}) s_freeze{wid;1};
  set_atContainer{s;d;i;p;c;v};
  if ((`notebook½g_varClass{wid})^(wid¨g_topLevel{wid}))
    (iû#nvarm) do 
      s_notebookPageTitle{wid;g_varWid{nvarm[i]};0Ø`title of nvarm[i]};
  if (mflag) if (fflag) s_freeze{wid;0};
}

set_window{s;d;i;p;c;v}:
	{
	wsûWS;
	newûc%v;
	clsûg_varClass{c,v};
	(ovarm;nvarm)û,¡old_new{c;s;new};
	print_alert{c;v;(,Îcls),' assignment'};
	if (0<#nvarm) remove_v_children{c;1 2Ònvarm};
	widûg_varWid{c,v};
	mflagûG_mapped{wid};
	pidûg_parent{wid};
	rpflagûG_containerReparent{wid};
	rsflagûG_containerReshow{wid};
	nsflagûG_containerNewshow{wid};
	if (0<#ovarm) if (rpflag) mflagsûbMapped{oidûg_varWid{ovarm}};
	if (mflag) if (fflagû0=g_freeze{wid}) s_freeze{wid;1};
	be_of_class{c;v;cls;pid};
	if (0<#ovarm)
		{
		if (~rpflag) free{ovarm}
		else
			{
			if (oid=g_varWid{ovarm}) re_parent_to_default{0#ovarm;1#ovarm};
			if (rsflag^mflags) show_id{oid};
			};
		};
	if (0<#nvarm) if (nflag Ý nflagûnsflag©bMapped{nidûg_varWid{nvarm}}) show_id{nid};
	if (0<#ws) if (0=#WS) s.WSûg_data{g_topLevel{wid}};
	if (mflag) if (fflag) s_freeze{wid;0};
	trigger_workspace_tree{};
	}

remove_v_children{cx;syms}:
	{
	if (1Åbû0¨wids Ý widsûwidget@1{syms})
		{
		pidsûg_parent@0{b/wids};
		clssûclass_of_id@0{pids};
		cû2=container_type @0{clss};
		(kû#nûm#b/É#b Ý mûc/É#c) do
			{
			(pcx;pvar)ûsymbol{m[k]#pids};
			(pcx%pvar)ûremove_symbols{(pcx;pcx%pvar);1 2Òn[k]#syms}
			}
		}
	}

ãã ***	Mapping -- map/unmap from top down

map{id}:		bMap{id}
unmap{id}:		bunMap{id}

showable{id}:		if (id=0) 0 else if (`sym¨©dûg_data{id}) 0 else if (`sym¨©cûg_varClass{d}) 0 else ~cÅNON_WIDGETS

hide_id{id}:		if (showable{id}) sub_hide_id{id}
sub_hide_id{id}:	unmap{1Ùzero_self{id}}

show_id{id}:		if (showable{id}) sub_show_id{id;1}
sub_show_id{id;flag}:	if (flag^bBeenMapped{id}) map¡{÷zero_self{id}} else show_id_recursively{id;flag}

show_id_recursively{id;flag}:
	{
	&¡{real_children_of{id};0};
	map¡{if (flag) ÷zero_self{id} else id};
	}

ã syncshow_id{id}:		if (showable{id}) sub_syncshow_id{id;1}
sub_syncshow_id{id;flag}:	if (flag^bBeenMapped{id}) bShowAndWaitForMap¡{÷zero_self{id}} else syncshow_id_recursively{id;flag}

syncshow_id_recursively{id;flag}:
	{
	&¡{real_children_of{id};0};
	bShowAndWaitForMap¡{if (flag) ÷zero_self{id} else id};
	}

ãã ***  Funny stuff

zero_self{id}:	if (0¨id) if (0=pidûg_parent{id}) id else if (0=g_parent{pid}) pid,id else id
zero_parent{id}:if (0=id) 0 else g_parent{id}=g_topLevel{id}

ãã ***	Widget create/destroy

create_object{cls;par;cx;var;scflag}:
	{
	if (()½par) parûSHELL;
	wsflagûif (par>0) 0 else if (0<#WS) 0 else if (0=G_ws{cx,var}) 0 else 1 Ý parû0;
	zûif (0<#funcûcreate_of_class{cls}) func¡{par} else print_abort{cx;var;'cannot create'};
	if (~clsÅNON_WIDGETS)
		{
		if (1¨container_type{cls}) bAddTab{g_topLevel{z};z};
		if (wsflag) if (cx¨`s) create_workspace{cx;var;g_parent{z}};
		s_hlColor{z;color_to_pixel{s.YELLOW}};
		};
	if (scflag) couple_object{cx;var;cls;z};
	z
	}

destroy_object{x}:
	{
	(sym;id)ûif (`sym=©x) (x;g_varWid{x}) else (g_data{x};x);
ã	if (©/is_a{sym;NON_WIDGETS})
	if (©/is_a{sym;OBJECT_CLASS})
		{
		bDestroy{id};
		clssûdecouple_object{sym[0];sym[1]};
		(1 2Òsym;,clss)
		}
	else
		{
		trûG_descendents{id};
		symsû>(<sym),g_data¡{tr};
		tidûg_topLevel{id};
		tidsûg_tabList{tid};
		s_tabList{tid;(~tidsÅid,tr)/tids};
		bDestroy{1Ùzero_self{id}};
		clssûdecouple_object@0 0{syms[;0];syms[;1]};
		(syms;clss)
		}
	}

ãã ***	Widget get/set

set{cx;var;id;cls;r;v;zf}:
	{
	if ((#r)>jûrÉ`class)
		{
		S_class{cx,var;clsûjØv};
		idûg_varWid{cx,var};
		(r;v)û(<j¨É#r)/¡(r;v);
		};
	(r;v)ûset_uses{cx;var;r;v};
	if (0=id) set_attributes{cx;var;0;`variable;r;v;zf}
	else
		{
		if (1ÅbûrÅzero_parent{id}/`x `y `yx) 	set_attributes{cx;var;g_topLevel{id};cls;b/r;b/v;zf};
		if (1Åbû~b)				set_attributes{cx;var;id;cls;b/r;b/v;zf};
		};
	}

get{cx;var;id;cls;r;zf}:get_attributes{cx;var;id;cls;r;zf}

set_uses{cx;var;r;v}:
	{
	if (0=#r) (r;v)
	else if (~©/bûINITIAL=m[;0] Ý mûÎr) (r;v)
	else
		{
		(s;w)û(Â1Õ@1 b/m;b/v);
		cû`null=>©¡w;
		if (1Åc) doesNotUse{cx,var;c/s};
		if (0Åc) uses{cx,var;(<~c)/¡(s;w)};
		(b/r)ûs;
		if (0Åc) (b/v)ûw Ý ((~c)/w)û%¡(~c)/w;
		(r;v)
		}
	}

set_attributes{cx;var;id;cls;rr;vv;zf}:
	{
	(funs;cnvs;iflags;eflags;dflts)ûsets_of{cx;var;cls;rr};
	(rr;vv)ûdefaults_of_class{cx;var;cls;rr;vv;dflts};
	hflagû`s¨cx;
	if (hflag) if (hflagûG_varHas{cx,var}) print_alert{;;(ÎcxÖvar),' has ('};
 	(iû#rr) do
		{
		(fun;cnv;iflag;eflag;dflt;r;v)ûiØ¡(funs;cnvs;iflags;eflags;dflts;rr;vv);
		if (()½v) vûdflt;
		if (0=#fun) print_error{cx;var;'not defined: ',(ÎcxÖvar),' has (`',(Îr),';...)'}
		else
			{
			if (~(0¨id)^0<iflag) apply{fun;(cx,var;cnv¡{v};cls)}
			else if (0<#widûaccess_id{cx;var;id;r;iflag;1;zf}) fun¡{wid;cnv¡{v}};
			if (hflag) print_alert{;;'`',(Îr),';',box{v},';'};
			}
		};
	if (hflag) print_alert{;;');'};
	}

get_attributes{cx;var;id;cls;rr;zf}:
	{
	(rr;vv)û,¡if (0<½rr) _alsf{rr} else (rr;(#rr)Ò<());
	zû(#rr)Ù();
	if (©/bûINITIAL=m[;0] Ý mûÎrr)
		{
		(rr;vv)û(<~b)/¡(rr;vv);
		(b/z)ûusedBy{Â1Õ@1 b/m;cx,var};
		};
 	(funs;cnvs;iflags;eflags)û4Ùgets_of{cx;var;cls;rr};
	(iû#kû(~b)/É#b) do
		{
		(fun;cnv;iflag;eflag;r;v)ûiØ¡(funs;cnvs;iflags;eflags;rr;vv);
		z[k[i]]û<if (0=#fun) print_error{cx;var;'not defined: `',(Îr),' of `',ÎcxÖvar}
		else
			{
			if (0<iflag)
				{
				if (0<#widûaccess_id{cx;var;id;r;iflag;0;zf}) cnv¡{apply{fun;(wid;v)}}
				}
			else
				{
				if (~()½var) cnv¡{apply{fun;(cx,var;v;cls)}}
				}
			}
		};
	z
	}

defaults_of_class{cx;var;cls;r;v;w}:
	{
	(rr;ww)û(CLASSESÉcls)ØCLASS_DEFAULTS;
	if (0=#rr) 	û(r;v);
	(rr;ww)û(<rrÅr)/¡(rr;ww);
	if (0=#rr) 	û(r;v);
	if (~1ÅbûrÅrr) 	û(r;v);
	(rr;ww)û(<rrÉb/r)#¡(rr;ww);
	((rÉrr)#w)û(rrÉb/r)#ww;
	(b/v)û(bû(>v½¡<())^~>w½¡<())/w;
	(r;v)
	}

access_id{cx;var;id;r;iflag;wflag;zflag}:
	{
	if (iflag¤1) ûid;
	zûif (0=pidûg_parent{id}) id
	else if (0=gpidûg_parent{pid})
		{
		case (iflag)
			{
			2;	pid;
			3;	if (~G_iconic{pid}) pid;
			4;	if (G_iconic{pid}) pid
			}
		};
	if ((0<#z)©0=wflag) z
	else if (1=zflag) if (~(cx,var)Åreference_objects{}) print_error{cx;var;'cannot access `',(,Îr),' of object'}
	}
	
ãã ***	couple and decouple variable/widget pairs

decouple_object{cx;var}:
	{
	(cx;var)ûc_v{cx;var};
	bû~SYMBOLS½@1 cx,var;
	s.SYMBOLSûb/SYMBOLS;
	clsûg_varClass{cx,var};
	if (~clsÅNON_WIDGETS) reset_null_title{cx;var};
	s_varClass{cx,var;};
	cls
	}

recouple_object{cx;var;cls;wid}:define_object{cx;var;cls;wid;1}
couple_object{cx;var;cls;wid}:define_object{cx;var;cls;wid;0}

define_object{cx;var;cls;wid;rcflag}:
	{
	(cx;var)ûc_v{cx;var};
	if (flagû~(cx,var)ÅSYMBOLS) s.SYMBOLSûSYMBOLS,cx,var;
	s_varClass{cx,var;cls};
	if (0=#wid) widûg_varWid{cx,var};
	if (wflagû0¨wid) link_variable_to_widget{cx;var;wid};
	if (~clsÅNON_WIDGETS) set_null_title{cx;var};
	drsûif (flag) set_class_defaults{cx;var;wid;cls};
	if (~rcflag) set_global_defaults{cx;var;wid;cls;drs};
	if (flag) restore_yourself{cx;var};
	trigger_workspace_tree{};
	}

set_class_defaults{cx;var;wid;cls}:
	{
	(rr;vv)ûget_class_defaults{cls};
	ssû(CLASSESÉ`variable)ØATTRIBUTES;
	ssû(ss¨`title)/ss;
	if (1ÅkûssÅrr)
		{
		ssûk/ss;
		dvûget_attributes{`s;`VARIABLE;;`variable;ss;0};
		ovûget_attributes{cx;var;wid;cls;ss;0};
		ssû(~>dv½¡ov)/ss;
		(rr;vv)û(<~rrÅss)/¡(rr;vv)
		};
	if (0<#rr) rr Ý set_attributes{cx;var;wid;cls;rr;vv;0}
	}

set_global_defaults{cx;var;wid;cls;srs}:
	{
	if (~©/bû0<>#¡dfs Ý dfsûidxØDEFAULTS Ý idxûCLASSESÉcls) û();
	dfsûb/dfs;
	(trs;tys;wdg;gfs;gft;cgs)û(<b)/¡idxØ¡(ATTRIBUTES;ATTRIBUTE_TYPES;WIDGETABLE;INTERNAL_GETS;GETS;CONVERTER);
	if (~©/bû(~trsÅused{cx,var})^~trsÅsrs) û();
	(trs;tys;gfs;gft;win;cgs)û(<b)/¡(trs;tys;gfs;gft;wdg;cgs);
	(b/gfs)û(bû0=>#¡gfs)/gft;
	wbû«win;
	jjûÉ#trs;
	argsûif (0¨wid) wb#(cx,var;wid) else if (0Åwb) (#jj)Ò<cx,var Ý jjû(~wb)/jj;
	if (0<#jj)
		{
		(trs;dfs;tys;gfs;win;cgs)û(<jj)#¡(trs;dfs;tys;gfs;win;cgs);
		cgsûcgs#CONVERTER_GETS;
		(iû#trs Ý cvsû()) do cvs[,]û<get_null{cx;var;cls;iØargs;i#trs;i#win;iØgfs;iØcgs};
		ovsû_get¡{>dfs;`s.attribute};
		ctyû>©¡cvs;
		otyû>©¡ovs;
		if (1Åbû(tys=2)^(`func¨cty)^(cvs=ovs)©`null=cty) set_attributes{cx;var;wid;cls;b/trs;(+/b)Ù();0};
		if (1Åbû(~b)^(cvs=ovs)©(`null=cty)©`null=oty) 	 set_attributes{cx;var;wid;cls;b/trs;(+/b)Ù();0};
		}
	}

get_null{cx;var;cls;arg;r;wi;gf;cg}:
	{
	if (`func=©gf) if (0<#argûaccess_id{cx;var;arg;r;wi;0;0}) cg¡{apply{gf;(arg;1;cls)}}
	}

set_null{cx;var;cls;arg;r;wi;gf;sf;df}:
	{
	if (`func=©sf)
		if (0<#argûaccess_id{cx;var;arg;r;wi;0;0})
			if ((2Ùdf)½2Ùif (`func=©gf) apply{gf;(arg;;cls)}) apply{sf;(arg;;cls)};
	}

call_scv{cv;sym}:Ý if (~()½0Ø(fun;s)û2Ù_get{c,v;sym} Ý (c;v)ûcv) apply{fun;(s;c;v)}

link_variable_to_widget{cx;var;wid}:
	{
	s_varWid{cx,var;wid};
	s_data{wid;cx,var};
	if (0¨pidûg_parent{wid}) if (0=g_parent{pid}) s_data{pid;cx,var};
	}

ãF reset_null_title sets the title to null if the title is set to Îvar or ÎcxÖvar.
ãF used when reparenting tablefields removed from a table, for example.
reset_null_title{cx;var}:
        {
	tûg_varTitle{cx,var};
	if ( (t½Îvar) © t½ÎcxÖvar ) s_varTitle{cx,var;}
        }

set_null_title{cx;var}:if (()½namûg_varTitle{cx,var}) S_varTitle{cx,var;variable_name{cx;var}}

restore_title{d;var}:
	{
	if (d=c Ý (c;v)ûÖvar) 
		{
		if (c¨`) if (g_varTitle{c,v}½Îv) s_varTitle{c,v;variable_name{c;v}}
		} 
	else 
		{
		if (c=`) if (g_varTitle{c,v}½ÎcÖv) s_varTitle{c,v;variable_name{c;v}}
		};
	}

ãã ***	preset callbacks

preset_fail{cx;var;cls;msg}:		print_abort{cx;var;'û refused -- ', if (0<#msg) msg else 'would not be a ',,Îcls}

preset_variable{s;d;i;p;c;v}:		preset_object{s;d;i;p;c;v;verify_variable;0 0}
preset_radio{s;d;i;p;c;v}:		preset_object{s;d;i;p;c;v;verify_slotfiller;1 0}
preset_slotfiller{s;d;i;p;c;v}:		preset_object{c;d;i;p;c;v;verify_slotfiller;0 0}
preset_v_container{s;d;i;p;c;v}:	preset_object{c;d;i;p;c;v;verify_v_container;0 1}
preset_container{s;d;i;p;c;v}:		preset_object{c;d;i;p;c;v;verify_container;0 1}
preset_grid{s;d;i;p;c;v}:		preset_object{c;d;i;p;c;v;verify_grid;0 1}
preset_window{s;d;i;p;c;v}:		preset_object{c;d;i;p;c;v;verify_window;0 1}

preset_object{c;d;i;p;cx;var;vfn;flags}:
	{
	if (()½clsûg_varClass{cx,var}) ûd;
	newûoldûcx%var;

		if ((i½())^p½()) 		newûd
	else	if ((i½())^0=0#flags)		(pØnew)ûd
	else	if (0=0#flags)
		{
			if 	(`int=©i)			(i#,pØnew)ûd
		else	if 	(10=0Ødo (i#pØnew)ûd)		(pØnew)[,]ûd;
		}
	else
		{
			if 	(0=#d)				ûd;
			if	(d½1) if ((#k)>jû(Økû1Øold)É1)	((1,j)Ønew)û0;

			if 	(i½()) 				(pØnew)ûd
		else 	if	(`int=©i)			(i#,pØnew)ûd
		else	if 	(10=0Ødo (i#pØnew)ûd)		(pØnew)[,]ûd;
		};

	zûif (new½old) d
	else
		{
		s.JUNKû	if (0=1#flags) new else qualify_symbols{cx;new};
		(pcx;pvar)û`s`JUNK;
		if (0=vfn{pcx;pvar;cls}) preset_fail{cx;var;cls;} else d
		};
	z
	}

ãã ***	Verification -- v_data{} is external

verify_variable{cx;var;cls}:
	{
	fnûverify_of_class{cls};
	if (`func¨©fn) 1 else fn¡{cx;var;cls}
	}

verify_data{cx;var;cls}:
	{
	(rc;rs)ûdo v_data{reference_widget{cls};cx,var};
	if (rc¨0) verify_failure{cx;var;rs} else rs
	}

verify_failure{cx;var;rs}:0 Ý print_error{cx;var;rs}

verify_children{cx;var;vals}:
	{
	(rc;rs)û	if 	(0=#pû_flat{vals}) 			(1;)
		else 	if	(~p½unique{p}/p) 			(0;'object contains duplicate symbol')
		else 	if 	(0Å_nc@0{`;p}Å`vars `deps) 		(0;'symbol is not a variable')
		else							(1;) Ý %¡p;

	if (rc=1) 1 else verify_failure{cx;var;rs}
	}

verify_slotfiller{cx;var;cls}:
	{
		if (0=verify_data{cx;var;cls}) 				0
	else 	if (0=#symsû0Øvalsûcx%var) 				1
	else 								^/unique{syms}
	}

verify_menu{cx;var;cls}:verify_slotfiller{cx;var;cls}

verify_not_reference{vars}:~©/NON_WIDGETSÅØg_varClass¡{vars}

verify_window{cx;var;cls}:
	{
		if (0=verify_container{cx;var;cls})			0
	else	(1¦#val)^1¦#Òval Ý valûcx%var
	}

verify_container{cx;var;cls}:
	{
		if (0=verify_data{cx;var;cls})				0
	else	if (()½valsûcx%var)					1
	else	if (0=is_symbolic{vals})				0
	else	if (~^/is_variable@0{cx;vars} Ý varsû_flat{vals})	0
	else								verify_not_reference{cxÖvars}
	}

verify_grid{cx;var;cls}:if (1<#Òcx%var)	0 else verify_container{cx;var;cls}

verify_v_container{cx;var;cls}:
	{
		if (0=is_symbolic{valsûcx%var})				0
	else	if (()½vals)						1
	else	if (0=verify_children{cx;var;qualify_symbols{cx;vals}})	0
	else 	if (0=verify_data{cx;var;cls})				0
	else	if (~^/is_variable@0{cx;vars} Ý varsû_flat{vals})	0
	else								verify_not_reference{cxÖvars}
	}

ãã ***	Internal S utilities

trigger{}:Ý s.SYMBOLS[]ûSYMBOLS

bOut_sdipcv{s;d;i;p;c;v}:bOut{cÖv;d}

out_function{s}:
	{
	case (©zûg_varOutFunc{s})
		{
		`null;	(out_default;);
		`func;	2Ùz;
			(bOut_sdipcv;z)
		}
	}

class_of_id{x}:
	{
		if (0=#x) 		`real
	else 	if (0=x) 		`real
	else 	if (0=#sûg_data{x}) 	`real
	else	if (0=g_parent{x})	`real
	else 	if (0=#cûg_varClass{s}) `real
	else				c
	}

inherited_attributes{id;sf}:
	{
	if (1Åbû0=Ø#¡1Øsf) (b/1Øsf)ûG_cb¡{id;b/0Øsf};
	if (~1Åbû0=Ø#¡1Øsf) sf else if (is_shell{pid} Ý pidûg_parent{id}) sf else &{pid;sf}
	}

container_type{x}:	(CLASSESÉx)#CONTAINER
at_type{x}:		(CLASSESÉx)#AT_TYPE
reference_object{x}:	(CLASSESÉx)#REFERENCE_OBJECTS

primitives_in{id}:	if (0<#chûG_Descendents{id}) ((clÅontological_classes{1})^~clÅcontainers{})/ch Ý clûg_varClass@0{ch}

create_of_class{x}:	(CLASSESÉx)ØCLASS_FNS
space_of_class{x}:	(CLASSESÉx)ØSPACE_FNS
verify_of_class{x}:	(CLASSESÉx)ØVERIFY_FNS
set_of_class{x}:	(CLASSESÉx)ØSET_FNS
contains_of{x}:		(CLASSESÉx)ØCONTAINS
attributes_of_class{x}:	(CLASSESÉx)ØATTRIBUTES

proper_flat_super{x}:	,(CLASSESÉx)ØPROPER_SUPER
proper_flat_sub{x}:	,(CLASSESÉx)ØPROPER_SUB
flat_super{x}:		,(CLASSESÉx)ØSUPER
flat_sub{x}:		,(CLASSESÉx)ØSUB

get_class_defaults{x}:	get_class_defs{x;CLASS_DEFAULTS}
get_class_defaults_0{x}:get_class_defs{x;CLASS_DEFAULTS_0}
get_class_defs{x;y}:	,¡(CLASSESÉx)Øy

object_attributes{}:	(CLASSESÉ`variable)ØATTRIBUTES

is_shell{pid}:		bIsTopLevel{pid}©bIsPopup{pid}
shell_objects{f}:	(f@0{g_parent@0{g_varWid@0{obs}}})/obsûobjects{}
ontological_classes{n}:	sym_sort{(n=ONTOLOGY)/CLASSES}
children_of{wid}:	(wid=Øg_parent¡{ids})/idsûg_varWid@1{SYMBOLS}
is_real_container{wid}:	1=container_type{class_of_id{wid}}
real_children_of{wid}:	if (is_real_container{wid}) (wid=Øg_parent¡{ids})/idsûg_varWid@1{SYMBOLS}
siblings_of{cx;var}:	pcxÖ_flat{pcx%pvar} Ý (pcx;pvar)ûg_data{g_parent{g_varWid{cx,var}}}
at_able{wid}:		at_type{class_of_id{g_parent{wid}}}
reference_objects{}:	ô`s~((REFERENCE_OBJECTS¨`)/REFERENCE_OBJECTS),`WM_SAVE_YOURSELF
stolen_classes{}:	((0<Ø#¡PRESET_FNS)©0<Ø#¡SET_FNS)/CLASSES
contained_by{cl}:	if (1Åbû>©/¡CONTAINSÅ¡<cl) (bÉ1)ØCLASSES
is_subclass_of{c;cc}:	1ÅccÅflat_super{c}
proper_subclasses{x}:	(Ø(<x)Å¡PROPER_SUPER)/CLASSES
proper_superclasses{x}:	proper_flat_super{x}
editable_attributes{x}:	xable_attributes{x;1}
visible_attributes{x}:	xable_attributes{x;0}
xable_attributes{x;y}:	(unique{a}^y¤e)/a Ý eûiØEDITABLE Ý aûiØATTRIBUTES Ý iûCLASSESÉx
is_container{x}:	0¨container_type{class_of_id{x}}
is_a{x;y}:		yÅflat_super{g_varClass{x}}
is_one_of{x;y}:         ©/,>is_a¡{x;<y}

index_of_attribute{c;r}:
	{
		if ((#jØATTRIBUTES)>kû((jûCLASSESÉc)ØATTRIBUTES)Ér) 	(j;k)
	else 	if ((#0ØATTRIBUTES)>kû(0ØATTRIBUTES)Ér) 		(0;k)
	else 	print_abort{;;(,Îc),' attribute-set does not include ','`',Îr}
	}

internal_get_of{cls;r}:	internal_fun_of{cls;r;INTERNAL_GETS}
internal_set_of{cls;r}:	internal_fun_of{cls;r;INTERNAL_SETS}
internal_fun_of{c;r;fs}:(j#iØfs;default_of¡{j#iØDEFAULTS}) Ý jû(iØATTRIBUTES)Ér Ý iûCLASSESÉif (0<#c) c else `variable
sets_of{cx;var;c;r}:	funs_of{cx;var;c;r;SETS;CONVERTER_SETS}
gets_of{cx;var;c;r}:	funs_of{cx;var;c;r;GETS;CONVERTER_GETS}

funs_of{cx;var;c;r;fs;cnvs}:
	{
	if (1Åbû(#at)=jû(atû(iûCLASSESÉc)ØATTRIBUTES)Ér) print_error{cx;var;'unknown attributes: ',Ø'`',¡Î¡b/r};
 	(j#(iØfs),<();(j#(iØCONVERTER),0)#Øcnvs;j#(iØWIDGETABLE),1;j#(iØEDITABLE),0;default_of¡{j#(iØDEFAULTS),<()})
	}

indices_of_atts{c;r}:	(i;j) Ý jû(iØATTRIBUTES)Ér Ý iûCLASSESÉc

atts_of_atts{c;r;x}:
	{
	(i;j)ûindices_of_atts{c;r};
	if (^/bûj<#zûiØx) j#z else print_abort{;c;'unknown attribute(s): ',Ø'`',¡Î¡(~b)/r}
	}

default_of{x}:if (`sym=©x) if (`null¨_nc{c;v} Ý (c;v)ûc_c{x}) c%v

ãã ***	variable name

ãF variable_name returns ÎcxÖvar, unless variable is parented to another var in same context, in which case
ãF just Îvar is returned.
variable_name{cx;var}:
	{
	if (0¨widûg_varWid{cx,var}) if (~zero_parent{wid}) if (cx½0Ø1Ùg_data{g_parent{wid}}) cxû` else if (cx½`) cxû`.;
	(if (`¨cx),(Îcx),if (`.¨cx) '.'),Îvar
	}

variable_title{cx;var}:	(,Îcx),'.',,Îvar
shell_title{cx;var}:	if (~WS½cx,var) variable_name{cx;var} else if (0=#zû0Ø1Ù._argv) WSNAME else z
variable_symbol{x}:	if ((`sym=©x)^(1¦#Òx)^(2¦#x)^0<#x) c_c{x}

is_variable{cx;var}:
	{
	if (`sym¨©var) 0
	else if (`½1Ø(cx;var)ûc_v{cx;var}) 1
	else z Ý if ((BINDING=0)^0=zû_nc{cx;var}Å`vars `deps) print_error{cx;var;'symbol is not a variable'}
	}

is_symbolic{x}:
	{
	if (0=½x) (©x)Å`sym `null 
	else 
		{
		if (fû0=_gsv `Gf) `Gf _ssv 1;
		(rc;z)ûdo _flat{x};
		if (f) `Gf _ssv 0;
		if (0¨rc) 0 else (©z)Å`sym `null
		}
	}

qualify_symbols{cx;val}:
	{
	case (©val)
		{
		`sym;	if (0=½val) cxÖval else &¡{cx;val};
		`box;	&¡{cx;val};
			val
		}
	}

structure_match{a;b}:
	{
		if ((½a)¨½b)	0
	else 	if ((#Òa)¨#Òb) 	0
	else 	if (~(Òa)½Òb) 	0
	else 	if ((©a)¨©b)	0
	else	if (0=½a)	1
	else			^/Ø&¡{,a;,b}
	}

ãã ***	Reference-object of class functions

reference_widget{cl}:
	{
	iûCLASSESÉcl;
	rflagû~clÅNON_WIDGETS;
	widûi#REFERENCE_WIDGETS;
	if (0=wid)
		{
		varûi#REFERENCE_OBJECTS;
		widûif (~dflagû1=i#ONTOLOGY)
			{
			if (0=#sclûcontained_by{cl}) print_abort{;cl;'virtual container class not defined'};
			g_varWid{`s,0#_flat{`s%1Øg_data{&{scl}}}}
			}
		else
			{
			widûcreate_object{cl;0;`s;var;1};
			if (2=i#CONTAINER)
				{
				cnû,iØCONTAINS;
				svû,`s%var;
				(jû#cn) do couple_object{`s;j#sv;j#cn;};
				};
			if (~rflag)
				{
				map{wid};
				unmap{wid};
				};
			wid
			};
		(i#s.REFERENCE_WIDGETS)ûwid;
		if (~rflag)
			{
			if (1=+/0<REFERENCE_WIDGETS)
				{
				rrû(CLASSESÉ`print)ØATTRIBUTES;
				vvûget_attributes{`s;i#REFERENCE_OBJECTS;wid;cl;rr;0};
				s.PRINT_DEFAULTSû(rr;vv);
				}
			};
		if (dflag)
			{
			jûif (0¤REFERENCE_LEADER) REFERENCE_LEADER else s.REFERENCE_LEADERûi;
			S_windowGroup{g_parent{wid};g_parent{j#REFERENCE_WIDGETS}};
			};
		};
	wid
	}

ãã ***	Font and color converters

color{x}:		if (`int=©x) pixel_to_color{x} else color_to_pixel{x}
font{x}:		if (`int=©x) id_to_font{x} else font_to_id{x}

isColor{x}:		bAllocColor{SERVER;x}
freeColor{x}:		bFreeColor{SERVER;x}

color_to_pixel{x}:
	{
	case (©x)
		{
		`char;	pixel_value{SERVER;(x¨' ')/x};
		`sym;	pixel_value{SERVER;,Î0#,x};
			x
		}
	}

color_to_default{x}:	if (`null=©x) DEFAULT_COLOR else color_to_pixel{x}
font_to_default{x}:	if (`null=©x) DEFAULT_FONT else font_to_id{x}
justify_to_symbol{x}:	if (`char¨©x) x else unique{z}/zû('lrbt'É,x)#`left `right `bottom `top `none

pixel_to_color{x}:	if (`int¨©x) x else h_c_exact{bgetColorString{SERVER;x}}

pixel_value{s;x}:	bgetPixelValue{s;x}

color_to_sharpton{x}:	if (tÅ`char `sym Ý tû©x) if ('#'½''Ò1Ùx Ý if (`sym=t) xû,Îx) x else ch{Âx}
sharpton_to_color{x}:	h_c_exact{x}

font_to_id{x}:		if (`int=©x) x else if (~()½x) bgetFontID{SERVER;if (`sym=©x) ,Îx else (x¨' ')/x}
id_to_font{x}:		if (`char=©x) x else if (~()½x) if (0¨x) bgetFontString{SERVER;x}

symbol_to_boolean{x}:	if (`sym¨©x) x else (<x)Å(`on;`true)

symbol_to_false{x}:	if ((<zû''Òx)Å(1;0)) z else if (()½x) 0 else (<x)Å(`on;`true)
symbol_to_true{x}:	if ((<zû''Òx)Å(1;0)) z else if (()½x) 1 else ~(<x)Å(`off;`false)

null_to_one{x}:		null_to_value{x;1}
null_to_zero{x}:	null_to_value{x;0}
null_to_ten{x}:		null_to_value{x;10}
null_to_neg_one{x}:	null_to_value{x;¢1}
null_to_char{x}:	null_to_value{x;''}
null_to_value{x;y}:	if (()½x) y else x

null_to_zero_inf{x}:	if (Inf¨zûnull_to_value{x;0}) z else ¢1+2*31

ãfilter_print{x}:	if (`sym¨©x) x else (zÅQ_justify{})/zûfilter_style{x}
ãfilter_report{x}:	if (`sym¨©x) x else filter_style{x}

ãfilter_style{x}:	(z¨`)/zûbreportFilterStyle{x}

colors_to_pixels{x}:
	{
	case (©x)
		{
		`char;	>pixel_value¡{SERVER;(x¨¡' ')/¡xû<@1x};
		`sym;	>pixel_value¡{SERVER;Î¡x};
		`box;	>pixel_value¡{SERVER;x};
			x
		}
	}

pixels_to_colors{x}:
	{
		if (`int¨©x) x 
	else 	if (^/t=`sym Ý tû>©¡zûh_c_exact¡{bgetColorString¡{SERVER;x}}) 	>z
	else 	if (^/t=`char) 							>(Ó/>#¡z)Ù¡z
	else 									z
	}

char_to_int{x}:		if (0=#x) 0 else 0#1Ù,`int©x
int_to_char{x}:		if (x=0) '' else `char©0#1Ù,x

sym_to_char{x}:		if (`sym=©x) ,Îx else x

ãã ***	Pseudo-attributes

S_recursively{var;x}:			has¡{var,G_Descendents{g_varWid{var}};<x}

ãG_windowSbFg{wid}:			g_windowVsbFg{wid}
ãS_windowSbFg{wid;x}:		 	s_windowVsbFg{wid;v} Ý s_windowHsbFg{wid;h} Ý (v;h)û2Òx
G_windowSbBg{wid}:			g_windowVsbBg{wid}
S_windowSbBg{wid;x}:		 	s_windowVsbBg{wid;v} Ý s_windowHsbBg{wid;h} Ý (v;h)û2Òx

S_windowSbSize{wid;x}:			S_Null{wid;x;s_windowSbSize;`scrollsize}

ãG_arraySbFg{wid}:			g_arrayVsbFg{wid}
ãS_arraySbFg{wid;x}:			s_arrayVsbFg{wid;v} Ý s_arrayHsbFg{wid;h} Ý (v;h)û2Òx
G_arraySbBg{wid}:			g_arrayVsbBg{wid}
S_arraySbBg{wid;x}:			s_arrayVsbBg{wid;v} Ý s_arrayHsbBg{wid;h} Ý (v;h)û2Òx

G_arraySbSize{wid}:			g_arrayVsbSize{wid},g_arrayHsbSize{wid}

S_arrayVsbSize{wid;x}:			S_Null{wid;x;s_arrayVsbSize;`vscrollsize}
S_arrayHsbSize{wid;x}:			S_Null{wid;x;s_arrayHsbSize;`hscrollsize}
S_arraySbSize{wid;x}:			S_arrayVsbSize{wid;v} Ý S_arrayHsbSize{wid;h} Ý (v;h)û2Òx

S_leftTo{var;x}:			var _set (`s.leftTo;x) Ý if (~()½x) xûc_c{x}
S_rightTo{var;x}:			var _set (`s.rightTo;x) Ý if (~()½x) xûc_c{x}
S_upTo{var;x}:				var _set (`s.upTo;x) Ý if (~()½x) xûc_c{x}
S_downTo{var;x}:			var _set (`s.downTo;x) Ý if (~()½x) xûc_c{x}

G_leftTo{var}:				var _get `s.leftTo
G_rightTo{var}:				var _get `s.rightTo
G_upTo{var}:				var _get `s.upTo
G_downTo{var}:				var _get `s.downTo

S_colorBgString{wid;x}:			s_colorBgString{wid;if (()½x) 0#COLOR_SHARPTONS else x}
S_colorFgString{wid;x}:			s_colorFgString{wid;if (()½x) 1#COLOR_SHARPTONS else x}

G_varBg{var}:				if (~()½zûg_varBg{var}) z else g_defaultBg{SERVER}
G_varTitleColor{var}:			if (~()½zûg_varTitleColor{var}) z else g_defaultFg{SERVER}
G_varTitleFont{var}:			if (~()½zûg_varTitleFont{var}) z else font_to_id{'kaplgallant'}

G_varPBg{var}:				G_parentAtt{var;g_varBg;g_varBg}
G_varPTitleColor{var}:			G_parentAtt{var;g_varTitleColor;g_varTitleColor}
G_varPTitleFont{var}:			G_parentAtt{var;g_varTitleFont;g_varTitleFont}
G_varPFgFunc{var}:			G_parentAtt{var;G_varFgFunc;G_varFgFunc}
G_varPBgFunc{var}:			G_parentAtt{var;G_varBgFunc;G_varBgFunc}
G_varPFontFunc{var}:			G_parentAtt{var;G_varFontFunc;G_varFontFunc}

G_parentAtt{var;g;G}:			if (~()½z Ý zûg{var}) z else if (0¨idûg_varWid{var}) G{G_Parent{id}}

S_varPBg{var;x}:			s_varBg{var;x}
S_varPTitleColor{var;x}:		s_varTitleColor{var;x}
S_varPTitleFont{var;x}:			s_varTitleFont{var;x}
S_varPFgFunc{var;x}:			if (()½x) s_varFgFunc{var;} else S_varFgFunc{var;x}
S_varPBgFunc{var;x}:			if (()½x) s_varBgFunc{var;} else S_varBgFunc{var;x}
S_varPFontFunc{var;x}:			if (()½x) s_varFontFunc{var;} else S_varFontFunc{var;x}
S_varTitleFont{var;x}:			s_varTitleFont{var; if (()½x) font_to_id{'kaplgallant'} else x}

S_arrayCycleInterval{wid;x}:		S_Null{wid;x;s_arrayCycleInterval;`cycle}
S_slotCycleInterval{wid;x}:		S_Null{wid;x;s_slotCycleInterval;`cycle}
S_scalarCycleInterval{wid;x}:		S_Null{wid;x;s_scalarCycleInterval;`cycle}
S_pageBlinkRate{wid;x}:			S_Null{wid;x;s_pageBlinkRate;`blinkrate}
S_labelMargin{wid;x}:			S_Null{wid;x;s_labelMargin;`margin}
S_buttonMargin{wid;x}:			S_Null{wid;x;s_buttonMargin;`margin}
S_hlThickness{wid;x}:			S_Null{wid;x;s_hlThickness;`hlthickness}
S_shadowThickness{wid;x}:		S_Null{wid;x;s_shadowThickness;`shadowthickness}
S_shadowStyle{wid;x}:			S_Null{wid;x;s_shadowStyle;`shadowstyle}

S_scalarValueShadowThickness{wid;x}:	S_Null{wid;x;s_scalarValueShadowThickness;`valueshadowthickness}

S_slotHlThickness{wid;x}:		S_Null{wid;x;s_slotHlThickness;`hlthickness}
S_slotShadowThickness{wid;x}:		S_Null{wid;x;s_slotShadowThickness;`shadowthickness}

S_actionHlThickness{wid;x}:		S_Null{wid;x;s_actionHlThickness;`hlthickness}
S_actionButtonShadowThickness{wid;x}:	S_Null{wid;x;s_actionButtonShadowThickness;`buttonshadowthickness}

S_checkHlThickness{wid;x}:		S_Null{wid;x;s_checkHlThickness;`hlthickness}

S_radioHlThickness{wid;x}:		S_Null{wid;x;s_radioHlThickness;`hlthickness}

S_scaleMajorTickSize{wid;x}:		S_Null{wid;x;s_scaleMajorTickSize;`majorticksize}
S_scaleMinorTickSize{wid;x}:		S_Null{wid;x;s_scaleMinorTickSize;`minorticksize}
S_scaleMinorTickCt{wid;x}:		S_Null{wid;x;s_scaleMinorTickCt;`minortickcount}

S_graphBarWidth{wid;x}:			S_Null{wid;x;s_graphBarWidth;`barwidth}
S_graphXmajorTickSize{wid;x}:		S_Null{wid;x;s_graphXmajorTickSize;`xmajorticksize}
S_graphXXmajorTickSize{wid;x}:		S_Null{wid;x;s_graphXXmajorTickSize;`Xmajorticksize}
S_graphYmajorTickSize{wid;x}:		S_Null{wid;x;s_graphYmajorTickSize;`ymajorticksize}
S_graphYYmajorTickSize{wid;x}:		S_Null{wid;x;s_graphYYmajorTickSize;`Ymajorticksize}
S_graphXminorTickSize{wid;x}:		S_Null{wid;x;s_graphXminorTickSize;`xminorticksize}
S_graphXXminorTickSize{wid;x}:		S_Null{wid;x;s_graphXXminorTickSize;`Xminorticksize}
S_graphYminorTickSize{wid;x}:		S_Null{wid;x;s_graphYminorTickSize;`yminorticksize}
S_graphYYminorTickSize{wid;x}:		S_Null{wid;x;s_graphYYminorTickSize;`Yminorticksize}
S_graphLegendHlThickness{wid;x}:	S_Null{wid;x;s_graphLegendHlThickness;`legendhlthickness}
S_graphLegendShadowThickness{wid;x}:	S_Null{wid;x;s_graphLegendShadowThickness;`legendshadowthickness}

S_notebookBindingWidth{wid;x}:		S_Null{wid;x;s_notebookBindingWidth;`bindingwidth}
S_notebookFrameThickness{wid;x}:	S_Null{wid;x;s_notebookFrameThickness;`framethickness}
S_notebookMarginHeight{wid;x}:		S_Null{wid;x;s_notebookMarginHeight;`marginheight}
S_notebookMarginWidth{wid;x}:		S_Null{wid;x;s_notebookMarginWidth;`marginwidth}
S_notebookBorderHeight{wid;x}:		S_Null{wid;x;s_notebookBorderHeight;`borderheight}
S_notebookBorderWidth{wid;x}:		S_Null{wid;x;s_notebookBorderWidth;`borderwidth}
S_notebookBackpages{wid;x}:		S_Null{wid;x;s_notebookBackpages;`backpages}
S_notebookBackpageThickness{wid;x}:	S_Null{wid;x;s_notebookBackpageThickness;`backpagethickness}

S_reportDisclaimerRuleWidth{wid;x}:	S_Null{wid;x;s_reportDisclaimerRuleWidth;`disclaimerrulewidth}
S_reportHeaderOffset{wid;x}:		S_Null{wid;x;s_reportHeaderOffset;`headeroffset}
S_reportFooterOffset{wid;x}:		S_Null{wid;x;s_reportFooterOffset;`footeroffset}
S_reportPageFrameLineWidth{wid;x}:	S_Null{wid;x;s_reportPageFrameLineWidth;`framelinewidth}
S_reportPageFrameOffset{wid;x}:		S_Null{wid;x;s_reportPageFrameOffset;`frameoffset}
S_reportPageNumberOffset{wid;x}:	S_Null{wid;x;s_reportPageNumberOffset;`pagenumberoffset}

S_reportParagraphLeading{wid;x}:	S_Null{wid;x;s_reportParagraphLeading;`leading}
S_reportParagraphLineWidth{wid;x}:	S_Null{wid;x;s_reportParagraphLineWidth;`linewidth}
S_reportParagraphOrphanRows{wid;x}:	S_Null{wid;x;s_reportParagraphOrphanRows;`orphanrows}
S_reportParagraphWidowRows{wid;x}:	S_Null{wid;x;s_reportParagraphWidowRows;`widowrows}

S_reportRuleRuleWidth{wid;x}:		S_Null{wid;x;s_reportRuleRuleWidth;`rulewidth}

S_tableColumnPageSpan{wid;x}:		S_Null{wid;x;s_tableColumnPageSpan;`columnpagespan}
S_tableRowPageSpan{wid;x}:		S_Null{wid;x;s_tableRowPageSpan;`rowpagespan}
S_tableFixedReportColumns{wid;x}:	S_Null{wid;x;s_tableFixedReportColumns;`fixedreportcolumns}
S_tableFrameLineWidth{wid;x}:		S_Null{wid;x;s_tableFrameLineWidth;`framelinewidth}
S_tableFrameOffset{wid;x}:		S_Null{wid;x;s_tableFrameOffset;`frameoffset}
S_tableNewspaperColumn{wid;x}:		S_Null{wid;x;s_tableNewspaperColumn;`newspapercolumn}
S_tableReportHeadingOffset{wid;x}:	S_Null{wid;x;s_tableReportHeadingOffset;`reportheadingoffset}
S_tableReportTotalLeading{wid;x}:	S_Null{wid;x;s_tableReportTotalLeading;`reporttotalleading}

S_treeVerticalSpace{wid;x}:		S_Null{wid;x;s_treeVerticalSpace;`verticalspace}
S_treeHorizontalSpace{wid;x}:		S_Null{wid;x;s_treeHorizontalSpace;`horizontalspace}

G_Null{wid;x;r}:if (~()½x) x else G_Null_ref{wid;g_varClass{g_data{wid}};r}
G_Null_ref{wid;c;r}:(jØkØGETS)¡{reference_widget{c}} Ý jû(kØATTRIBUTES)Ér Ý kûCLASSESÉc

S_Null{wid;x;fn;r}:if (~()½x) fn{wid;x} else S_Null_ref{wid;g_varClass{g_data{wid}};r}
S_Null_ref{wid;c;r}:if (wid¨ridûreference_widget{c}) (jØkØSETS)¡{wid;(jØkØGETS)¡{rid}} Ý jû(kØATTRIBUTES)Ér Ý kûCLASSESÉc

G_varPageTitle{wid}:{
  if((~`int½©wid)©(0½wid)) û();
  pidûg_parent{wid};
  if (0=pid) û();
  if (~`notebook½g_varClass{g_data{pid}}) û();
  if(pid=g_topLevel{pid}) û(); 
  g_notebookPageTitle{pid;wid}
}

validate_title{t}: { (`char½©t) © ((>©¡t)½(#t)Ò`char) }

S_varPageTitle{wid;x}:{
  notsetû" -- `pagetitle cannot be set";
  notchildmsgû"variable not child of `notebook",notset;
  (cx;var)ûg_data{wid};
  if((~`int½©wid)©(0½wid)) ûprint_error{cx;var;notchildmsg};
  pidûg_parent{wid};
  if (~validate_title{x}) ûprint_error{cx;var;"pagetitle argument of incompatible type",notset};
  if ("Untitled"½x) ûprint_error{cx;var;"argument 'Untitled' not allowed",notset};
  if (0=pid) ûprint_error{cx;var;notchildmsg};
  if (~`notebook½g_varClass{g_data{pid}}) ûprint_error{cx;var;notchildmsg};
  if(pid=g_topLevel{pid}) ûprint_error{cx;var;notchildmsg};
  s_notebookPageTitle{pid;wid;x};
}

G_varPageSelection{wid}:{
  if((~`int½©wid)©(0½wid)) û();
  pidûg_parent{wid};
  if (0=pid) û();
  if (~`notebook½g_varClass{g_data{pid}}) û();
  if(pid=g_topLevel{pid}) û(); 
  g_notebookPageSelection{pid;wid}
}

S_varPageSelection{wid;x}:{
  notsetû" -- `pageselection cannot be set";
  notchildmsgû"variable not child of `notebook",notset;
  (cx;var)ûg_data{wid};
  if((~`int½©wid)©(0½wid)) ûprint_error{cx;var;notchildmsg};
  pidûg_parent{wid};
  if (0=pid) ûprint_error{cx;var;notchildmsg};
  if (~`notebook½g_varClass{g_data{pid}}) ûprint_error{cx;var;notchildmsg};
  if(pid=g_topLevel{pid}) ûprint_error{cx;var;notchildmsg};
  s_notebookPageSelection{pid;wid;x};
}


ãã  Pixel positioning and extent

G_X{wid}:		G_abs_pos{wid;<{g_x}}
G_Y{wid}:		G_abs_pos{wid;<{g_y}}

G_YX{wid}:		G_Y{wid},G_X{wid}

G_abs_pos{wid;func}:	if (0=wid) 0 else func¡{wid}+&{g_parent{wid};func}

G_y_pos{wid}:		G_pos{wid;<{g_y}}
G_x_pos{wid}:		G_pos{wid;<{g_x}}

S_y_pos{wid;x}:		S_pos{wid;<{s_y};x}
S_x_pos{wid;x}:		S_pos{wid;<{s_x};x}

G_pos{wid;func}:	func¡{if (zero_parent{wid}) g_topLevel{wid} else wid}
S_pos{wid;func;x}:	if (~()½x) func¡{if (zero_parent{wid}) g_topLevel{wid} else wid Ý pos_warn{wid};x}

pos_warn{id}:		if (at_able{id}) print_alert{id;;'`yx in a layout is unstable'}

G_yx{wid}:		G_y_pos{wid},G_x_pos{wid}
S_yx{wid;x}:		if (~()½x) bMoveTo{if (zero_parent{wid}) g_topLevel{wid} else wid;1#x;0#x} Ý xû2Ùx

S_ys{wid;x}:		S_Extent{wid;x;<{s_height}}
S_xs{wid;x}:		S_Extent{wid;x;<{s_width}}

G_yxs{wid}:		g_height{wid},g_width{wid}				
S_yxs{wid;x}:		S_Extent{wid;x;<{bResize}}

G_extent{wid}:		G_yx{wid},G_yxs{wid}
S_extent{wid;x}:	if (~()½x) S_yxs{wid;2Õx},S_yx{wid;2Ùx} Ý xû4Ùx

S_Extent{wid;x;fn}:
	{
	if (()½x) û();
	if (~bBeenMapped{wid}) S_realize{wid;1};
	case (_valence{fn})
		{
		2;	fn¡{wid;x};
		3;	fn¡{wid;xs;ys} Ý  (ys;xs)û2Òx;
		}
	}

S_yxsPixeled{wid;x}:	if (0<#x) bResize{wid;xs;ys} Ý (ys;xs)û2Òx

S_ysPixeled{wid;x}:	if (~()½x) s_height{wid;x}
S_xsPixeled{wid;x}:	if (~()½x) s_width{wid;x}

ãã  Selection

S_request{wid;x}:	bRequestPrimary{wid}

ãã  Miscellaneous

S_textNumVisibleRows{wid;x}:	if (~()½x) s_textNumVisibleRows{wid;x}
S_textNumVisibleCols{wid;x}:	if (~()½x) s_textNumVisibleCols{wid;x}

S_vectorSize{wid;x}:		s_numVisibleRows{wid;g_numVisibleRows{wid}}		

S_iconName{wid;x}:		if (~()½x) s_iconName{wid;x}

S_refresh{wid;x}:		if (~x½0) bRefresh{wid}

G_state{s}:			state_has{cx;var;1} Ý (cx;var)ûs
G_stateSelf{s}:			state_has{cx;var;0} Ý (cx;var)ûs

S_sensitive{wid;x}:		s_sensitive¡{wid,if (is_real_container{wid}) G_descendents{wid};x}
S_freeze{wid;x}:		s_freeze¡{wid,if (is_real_container{wid}) G_descendents{wid};x}

G_atSector{tid}:
	{
		if (¢1 ¢1½rc Ý rcûdesktop{}) 			¢1 ¢1 
	else 	if ((0=ÒÒz)^0=1Ùz Ý zûg_virtualScreen{tid}) 	here{} 
	else 							,ôrcÎ¢1+z
	}

S_atSector{tid;x}:
	{
	if (()½x) û();	
	if (¢1 ¢1½rc Ý rcûdesktop{}) print_error{;;'desktop not supported'} 
	else s_virtualScreen{tid;z} Ý zûif (x½`here) bVirtualScreen{SERVER} else 1+rcÂô2!,x
	}

S_fullscreen{tid;x}:		if ((~x½0)^(~x½())) S_yxs{tid;SCREEN-SHELL_BORDER_SPACE+SHELL_TITLE_SPACE,0} Ý S_yx{tid;0 0}
G_fullscreen{tid}:		(G_yx{tid},G_yxs{tid})½0 0,SCREEN-SHELL_BORDER_SPACE+SHELL_TITLE_SPACE,0

G_is{var}:			_get{var;`s.is}
S_is{var;x}:			_set{var;(`s.is;x)}

G_layoutStructure{wid}:		G_position_properties{wid;G_at}
S_layoutStructure{wid;x}:	S_position_properties{wid;x;S_at}

G_gridStructure{wid}:		G_position_properties{wid;G_extent}
S_gridStructure{wid;x}:		S_position_properties{wid;x;S_extent}

G_layoutConstraints{wid}:	G_position_properties{wid;G_resize}
S_layoutConstraints{wid;x}:	S_position_properties{wid;x;S_resize}

S_layoutMargin{wid;x}:		S_Null{wid;x;s_layoutMargin;`margin}

G_position_properties{wid;fn}:	(v;fn¡{g_varWid@0{v}}) Ý vûcxÖunique{v}/vû_flat{cx%var} Ý (cx;var)ûg_data{wid}

S_position_properties{wid;x;fn}:
	{
	if (0=#x) û();
	if (0=#v Ý (v;z)û(<vÅcxÖcx%var)/¡(v;z) Ý (cx;var)ûg_data{wid} Ý (v;z)ûx) û();
	fn¡{g_varWid@0{v};z};
	}

G_fKeys{id}:			inherited_attributes{id;(`f1 `f2 `f3 `f4 `f5 `f6 `f7 `f8 `f9 `f10 `f11 `f12;12Ù())}
G_arrowKeys{id}:		inherited_attributes{id;(`arrowleft `arrowright `arrowup `arrowdown;4Ù())}

G_containerReparent{wid}:	if (~()½zûof_widget{`reparent;wid}) z else AUTOREPARENT
S_containerReparent{wid;x}:	widget_has{wid;`reparent;x}

G_containerReshow{wid}:		if (~()½zûof_widget{`reshow;wid}) z else AUTORESHOW
S_containerReshow{wid;x}:	widget_has{wid;`reshow;x}

G_containerNewshow{wid}:	if (~()½zûof_widget{`newshow;wid}) z else AUTONEWSHOW
S_containerNewshow{wid;x}:	widget_has{wid;`newshow;x}

G_containerPosition{wid}:	if (~()½zûof_widget{`position;wid}) z else AUTOPOSITION
S_containerPosition{wid;x}:	widget_has{wid;`position;x}

G_containerBuild{wid}:		if (~()½zûof_widget{`build;wid}) z else AUTOBUILD
S_containerBuild{wid;x}:	widget_has{wid;`build;x}

G_arraySelected{wid}:		g_arraySelectRow{wid},g_arraySelectCol{wid}
S_arraySelected{wid;x}:		s_arraySelectRow{wid;0#x},s_arraySelectCol{wid;1#x} Ý xû2Ùx Ý if (x½()) xû¢1 ¢1

G_viewSelected{wid}:            g_arraySelectRow{wid},¢1
S_viewSelected{wid;x}:          s_arraySelectRow{wid;0#x} Ý xû2Ùx Ý if (x½()) xû¢1 ¢1

G_viewSelectCol{wid}:           ¢1
S_viewSelectCol{wid;x}:{}

G_viewSelectBg{wid}:           0
S_viewSelectBg{wid;x}:{}

G_viewSeparatorInterval{wid}:           0
S_viewSeparatorInterval{wid;x}:{}

G_slotSelected{wid}:		if (¢1<zûg_slotSelected{wid}) z#,0Øcx%var Ý (cx;var)ûg_data{wid}
S_slotSelected{wid;x}:		if (0<#vûcx%var Ý (cx;var)ûg_data{wid}) s_slotSelected{wid;if (0=#x) ¢1 else (0Øv)Éx}

G_boxSelected{wid}:		if (¢1<zûg_boxSelected{wid}) z#,0Øcx%var Ý (cx;var)ûg_data{wid}
S_boxSelected{wid;x}:		if (0<#vûcx%var Ý (cx;var)ûg_data{wid}) s_boxSelected{wid;if (0=#x) ¢1 else (0Øv)Éx}

G_pageColorTable{wid}:		pixel_to_color@0{g_pageColorTable{wid}}
S_pageColorTable{wid;x}:	s_pageColorTable{wid;m} Ý if (2>#Òmûcolor_to_pixel@0{x}) mû((Ä.5«#m),2)Òm

G_graphSelected{wid}:		if (0<zûg_graphSelected{wid}) cxÖvar Ý (cx;var)ûg_data{z}

G_protected{var}:
	{
	(cx;var)ûvar;
	if (`func=©zûG_varRoFunc{cx,var})
		{
		(fn;cd)û2Ùz;
		zûÉ0;
		(iû#cx%var) do zûz,apply{fn;(cd;cx%var;i;;cx;var)};
		};
	if (`func=©zzûG_varRoFunc{pvarûg_data{g_parent{g_varWid{cx,var}}}})
		{
		(pcx;pvar)ûpvar;
		(fn;cd)û2Ùzz;
		zzûapply{fn;(cd;pcx%pvar;;;pcx;pvar)}
		};
	z©zz
	}

S_numVisibleRows{wid;x}:
	{
	(cx;var)ûg_data{wid};
	if (0=#x) xû5Ä#cx%var;
	s_numVisibleRows{wid;x};
	}

S_numVisibleCols{wid;x}:
	{
	if (0=#x)
		{
		(cx;var)ûg_data{wid};
		xûif (1¦(#shpûÒval)-`char=©valûcx%var) 1 else 2Ä1#shp;
		};
	s_numVisibleCols{wid;x};
	}

S_tableComputeBreaks{wid;val}: { s_tableComputeBreaks{wid}; }

G_iconic{tid}:		bIsTopLevel{tid}

S_iconic{tid;x}:
	{
	if (x½bIsTopLevel{tid}) û();
	stûg_windowName{tid};
	(cx;var)ûg_data{tid};
	if ((x=0)^WS½cx,var) print_error{cx;var;'workspace may not be a popup window'}
	else
		{
		widûg_varWid{cx,var};
		mflagûbMapped{tid};
		flrsûG_followers{tid};
		lidûg_windowGroup{tid};
		widûre_parent{cx;var;wid;¢1+x};
		ntidûg_parent{wid};
		s_windowName{ntid;st};
		S_followers{ntid;flrs};
		S_windowGroup{ntid;lid};
		if (mflag) map{ntid};
		};
	}

G_scrollWithV{wid}:	_get{g_data{wid};`s.vscrollwith}
S_scrollWithV{wid;x}:	_set{g_data{wid};(`s.vscrollwith;x)}

G_scrollWithH{wid}:	_get{g_data{wid};`s.hscrollwith}
S_scrollWithH{wid;x}:	_set{g_data{wid};(`s.hscrollwith;x)}

G_be{var}:		_get{var;`s.be}
S_be{var;x}:		_set{var;(`s.be;x)}

G_varNa{var}:		if (~()½zû_get{var;`na}) z else na{0#var;1#var}
S_varNa{var;x}:		_set{var;(`na;x)}

G_script{var}:		if (~()½zû_get{var;`s.script}) z else AUTOSCRIPT
S_script{var;x}:	_set{var;(`s.script;x)}

G_evaluate{var}:	if (~()½zû_get{var;`s.evaluate}) z else AUTOEVALUATE
S_evaluate{var;x}:	_set{var;(`s.evaluate;x)}

G_respace{var}:		if (~()½zû_get{var;`s.respace}) z else AUTORESPACE
S_respace{var;x}:	reset_out_func{var} Ý _set{var;(`s.respace;x)}

G_literal{var}:		if (~()½zû_get{var;`s.literal}) z else AUTOLITERAL
S_literal{var;x}:	reset_out_func{var} Ý _set{var;(`s.literal;x)}

G_varBlank{var}:	if (~()½zû_get{var;`s.blank}) z else AUTOBLANK
S_varBlank{var;x}:	reset_out_func{var} Ý _set{var;(`s.blank;x)}

G_varDoc{var}:		if (~()½zû_get{var;`s.doc}) z else AUTODOC
S_varDoc{var;x}:	_set{var;(`s.doc;x)}

G_varHas{var}:		if (~()½zû_get{var;`s.has}) z else AUTOHAS
S_varHas{var;x}:	_set{var;(`s.has;x)}

G_varExecute{var}:	if (~()½zû_get{var;`s.execute}) z else AUTOEXECUTE
S_varExecute{var;x}:	_set{var;(`s.execute;x)}

G_varCopy{var}:		if (~()½zû_get{var;`s.copy}) z else AUTOCOPY
S_varCopy{var;x}:	_set{var;(`s.copy;x)}

G_ws{var}:		if (~()½zû_get{var;`s.ws}) z else AUTOWS
S_ws{var;x}:		_set{var;(`s.ws;x)}

G_printable{var}:	if (~()½zû_get{var;`s.printable}) z else AUTOPRINTABLE
S_printable{var;x}:	_set{var;(`s.printable;x)}

G_no_op{y}:		()
S_no_op{y;x}:		()

G_ancestors{wid}:	1ÕG_self_ancestors{wid}
G_self_ancestors{wid}:	if (0=pidûg_parent{wid}) É0 else wid,&{pid}

G_descendents{wid}:	if (is_container{wid}) if (0<#cidsûchildren_of{wid}) cids,Ø&¡{cids}

G_familytree{wid}:	(q_n{g_data{wid}};,<G_familytree_rec{wid})
G_familytree_rec{wid}:	if (is_container{wid}) if (0<#cidsûchildren_of{wid}) (q_n@1{g_data@0{cids}};&¡{cids})

G_tableField{wid}:	if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) if ((¢1<c)^c<#t Ý cûg_arraySelectCol{wid}) c#t
S_tableField{wid;x}:	if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) s_arraySelectCol{wid;if (0<#x) tÉx else ¢1}

G_tableSelected{wid}:	if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) (r;if ((¢1<c)^c<#t Ý (r;c)ûG_arraySelected{wid}) c#t)
S_tableSelected{wid;x}: if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) S_arraySelected{wid;r,if (0<#c) tÉc else 0} Ý (r;c)û2Ùx

G_tableFirstField{wid}:	if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) c#t Ý cûg_arrayFirstCol{wid}
S_tableFirstField{wid;x}:if (0<#tû,cx%var Ý (cx;var)ûg_data{wid}) s_arrayFirstCol{wid;if (0<#x) tÉx else 0}

G_mapped{wid}:		bMapped{wid}
S_mapped{wid;x}:	if (x½0) unmap{wid} else map{wid}

G_show{wid}:		bMapped{1Ùzero_self{wid}}
S_show{wid;x}:		if (x½0) sub_hide_id{wid} else sub_show_id{wid;1}
S_syncshow{wid;x}:	if (x½0) sub_hide_id{wid} else sub_syncshow_id{wid;1}

G_hide{wid}:		~bMapped{1Ùzero_self{wid}}
S_hide{wid;x}:		if (x½0) sub_show_id{wid;1} else sub_hide_id{wid}

S_realize{wid;x}:	if (~x½0) sub_show_id{wid;0}

G_class{var}:		class_of_symbol{var;0}
S_class{var;x}:		if (0=#x) free{var} else is_object{var;x}

G_def{var}:		(1+zÉ':')Õzû_def{var}
S_def{var;x}:		if (`char=©x) â(Îcx),'.',(Îvar),':',x Ý (cx;var)ûvar

G_bound{var}:		g_varWid{var}¨0

S_focus{wid;x}:		bTraverseFocus{wid}

G_focus{wid}:
	{
	tidûg_topLevel{wid};
	zûif (0¨zûg_focus{tid}) if (g_parent{wid}=tid) z else if (zÅG_descendents{wid}) z;
	if (0<#z) q_n{g_data{z}}
	}

S_naturalSize{wid;x}:	if (~x½0) bNaturalSize{wid}

S_raise{wid;x}:		bRaise{1Ùzero_self{wid}}
S_lower{wid;x}:		bLower{1Ùzero_self{wid}}

G_Children{wid}:	if (0<#zûg_data@0{{children_of{wid}}}) q_n{z}
G_Ancestors{wid}:	if (0<#zûg_data@0{{G_ancestors{wid}}}) q_n{z}
G_Descendents{wid}:	if (0<#zûg_data@0{{G_descendents{wid}}}) q_n{z}

G_extents{tid}:		G_Extents{tid;}

G_Extents{tid;k}:
	{
	idûg_varWid{g_data{tid}};
	if (0=#chûprimitives_in{id}) û(;);
	ciûg_varWid@0{ch};
	rûG_YX¡{ci};
	if (k½()) rûr,¡G_yxs¡{ci};
	(ch;r)
	}

G_Parent{wid}:		if (0<#zûg_data{g_parent{wid}}) q_n{z}
G_shell{wid}:		q_n{g_data{g_topLevel{wid}}}

S_Children{wid;x}:	(pcx%pvar)ûx Ý (pcx;pvar)ûg_data{wid}

G_server{x}:		bServer{x}
G_window{x}:		bWindow{x}
G_display{x}:		bDisplay{x}

G_settings{sym;r}:
	{
	(cx;var)ûc_c{sym};
	if (0=#clsûg_varClass{cx,var}) û();
	if (0=idûg_varWid{cx,var}) û();
	(r;v)ûstate_of_object{cx;var;cls;id;r};
	(`class;<cls),¡(<`null¨Ø©¡v)/¡(r;v)
	}

ãã ***	Print routines

G_printFile{wid}:		if (~()½zû_get{g_data{wid};`s.printFile}) z else g_printFile{}
G_printDefaultFont{wid}:	if (~()½zû_get{g_data{wid};`s.printDefaultFont}) z else g_printDefaultFont{}
G_printPageOrientation{wid}:	if (~()½zû_get{g_data{wid};`s.printPageOrientation}) z else g_printPageOrientation{}
G_printPagesize{wid}:		if (~()½zû_get{g_data{wid};`s.printPagesize}) z else g_printPagesize{}
G_printMode{wid}:		if (~()½zû_get{g_data{wid};`s.printMode}) z else g_printMode{}
G_printOutputMode{wid}:		if (~()½zû_get{g_data{wid};`s.printOutputMode}) z else g_printOutputMode{}
G_printLeftMargin{wid}:		if (~()½zû_get{g_data{wid};`s.printLeftMargin}) z else g_printLeftMargin{}
G_printRightMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printRightMargin}) z else g_printRightMargin{}
G_printTopMargin{wid}:		if (~()½zû_get{g_data{wid};`s.printTopMargin}) z else g_printTopMargin{}
G_printBottomMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printBottomMargin}) z else g_printBottomMargin{}
G_printDisclaimerFile{wid}:	if (~()½zû_get{g_data{wid};`s.printDisclaimerFile}) z else g_printDisclaimerFile{}
G_printDisclaimerFont{wid}:	if (~()½zû_get{g_data{wid};`s.printDisclaimerFont}) z else g_printDisclaimerFont{}
G_printDisclaimerStyle{wid}:	if (~()½zû_get{g_data{wid};`s.printDisclaimerStyle}) z else g_printDisclaimerStyle{}
G_printDisOrientation{wid}:	if (~()½zû_get{g_data{wid};`s.printDisOrientation}) z else g_printDisOrientation{}
G_printDisLeftMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printDisLeftMargin}) z else g_printDisLeftMargin{}
G_printDisRightMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printDisRightMargin}) z else g_printDisRightMargin{}
G_printDisTopMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printDisTopMargin}) z else g_printDisTopMargin{}
G_printDisBottomMargin{wid}:	if (~()½zû_get{g_data{wid};`s.printDisBottomMargin}) z else g_printDisBottomMargin{}
G_printDisRuleWidth{wid}:	if (~()½zû_get{g_data{wid};`s.printDisRuleWidth}) z else g_printDisRuleWidth{}
G_printPageStyle{wid}:		if (~()½zû_get{g_data{wid};`s.printPageStyle}) z else g_printPageStyle{}

S_printFile{wid;x}:		_set{g_data{wid};(`s.printFile;x)}
S_printDefaultFont{wid;x}:	_set{g_data{wid};(`s.printDefaultFont;x)}
S_printPageOrientation{wid;x}:	_set{g_data{wid};(`s.printPageOrientation;x)}
S_printPagesize{wid;x}:		_set{g_data{wid};(`s.printPagesize;x)}
S_printMode{wid;x}:		_set{g_data{wid};(`s.printMode;x)}
S_printOutputMode{wid;x}:	_set{g_data{wid};(`s.printOutputMode;x)}
S_printLeftMargin{wid;x}:	_set{g_data{wid};(`s.printLeftMargin;x)}
S_printRightMargin{wid;x}:	_set{g_data{wid};(`s.printRightMargin;x)}
S_printTopMargin{wid;x}:	_set{g_data{wid};(`s.printTopMargin;x)}
S_printBottomMargin{wid;x}:	_set{g_data{wid};(`s.printBottomMargin;x)}
S_printDisclaimerFile{wid;x}:	_set{g_data{wid};(`s.printDisclaimerFile;x)}
S_printDisclaimerFont{wid;x}:	_set{g_data{wid};(`s.printDisclaimerFont;x)}
S_printDisclaimerStyle{wid;x}:	_set{g_data{wid};(`s.printDisclaimerStyle;x)}
S_printDisOrientation{wid;x}:	_set{g_data{wid};(`s.printDisOrientation;x)}
S_printDisLeftMargin{wid;x}:	_set{g_data{wid};(`s.printDisLeftMargin;x)}
S_printDisRightMargin{wid;x}:	_set{g_data{wid};(`s.printDisRightMargin;x)}
S_printDisTopMargin{wid;x}:	_set{g_data{wid};(`s.printDisTopMargin;x)}
S_printDisBottomMargin{wid;x}:	_set{g_data{wid};(`s.printDisBottomMargin;x)}
S_printDisRuleWidth{wid;x}:	_set{g_data{wid};(`s.printDisRuleWidth;x)}
S_printPageStyle{wid;x}:	_set{g_data{wid};(`s.printPageStyle;x)}

S_print{wid;x}:
	{
	(v;vv;pf)ûglobalize_print{wid;x;`print};
	bprint{wid};
	localize_print{v;vv;pf};
	}

globalize_print{wid;x;cls}:
	{
	varûg_data{wid};
	iûCLASSESÉcls;
	igfûiØINTERNAL_GETS;
	bû`func=>©¡igf;
	igfûb/igf;
	isfûb/iØINTERNAL_SETS;
	rûb/iØATTRIBUTES;
	gfûb/iØGETS;
	vûvvû(#gf)Ù();
	jûÉ0;
	(kû#v) do
		{
		(kØv)û(kØgf)¡{wid};
		(kØvv)û(kØigf)¡{};
		if (~(kØv)½kØvv) (kØisf)¡{kØv};
		};
	(v;vv;isf)
	}

localize_print{v;vv;isf}:(kû#v) do if (~(kØv)½kØvv) (kØisf)¡{kØvv}


ãã Report Attributes -- PrintText Handlers

S_fieldBreakText{wid;val}:{
  ptwidsûC_APrintTextVec{val};
  s_fieldBreakText{wid;val;ptwids};
}

S_tableGrandTotalText{wid;val}:{
  ptwidsûC_APrintText{val};
  s_tableGrandTotalText{wid;val;ptwids};
}

C_APrintText{arg}:{
  zwidûc_APrintText{};
  if(0¨rc Ý (rc;pta)ûdo _alsf arg) ûzwid;
  (syms;vals)ûpta;
  (iû#syms) do ((s.PT_ATTRSÉsyms[i])Øs.PT_SETS)¡{zwid;iØvals};
  zwid
}

ith_item{idx;form;val}:{
  if (`scalar½form) { if (0=#val) 0 else (idxÄ¢1+#val)Øval }
  else if (`null½©val) ""
  else if ((©val)Å`box`sym) (idxÄ¢1+#val)Øval
  else val
}

C_APrintTextVec{arg}:{
  if(0¨rc Ý (rc;pta)ûdo _alsf arg) û,C_APrintText{()};
  (syms;vals)ûpta;
  howmanyû0;
  formsû(#syms)Ò`;
  (iû#syms) do howmanyûhowmanyÓ(
    if((`scalar½forms[i]ûs.PT_FORMS[s.PT_ATTRSÉsyms[i]])©(©valûiØvals)Å`box`sym`null) #val else 1);
  zwidsûhowmanyÒ0;
  (jûhowmany) do {
    zwids[j]ûc_APrintText{};
    (iû#syms) do ((s.PT_ATTRSÉsyms[i])Øs.PT_SETS)¡{zwids[j];ith_item{j;forms[i];iØvals}}
  };
  zwids
}

S_reportPrint{wid;val}: { s_reportPrint{wid}; }
S_reportCancel{wid;val}: { s_reportCancel{wid}; }


ãã ***	"at" routines

G_vrow{wid}:	0#G_at{wid}
G_vcol{wid}:	1#G_at{wid}
G_vrows{wid}:	2#G_at{wid}
G_vcols{wid}:	3#G_at{wid}

S_vrow{wid;y}:	S_at{wid;y,¢1 ¢1 ¢1}	
S_vcol{wid;y}:	S_at{wid;¢1,y,¢1 ¢1}	
S_vrows{wid;y}:	S_at{wid;¢1 ¢1,y,¢1}	
S_vcols{wid;y}:	S_at{wid;¢1 ¢1 ¢1,y}	

S_at{wid;x}:
	{
	if (~at_able{wid}) ûprint_error{wid;;'parent is not a layout, `at not set'};
	if (~x½¢1 ¢1 ¢1 ¢1)
		{
		if (()½x) xû0 0 1 1 else if (¢1Åxû4Ùx) (b/x)û(bûx=¢1)/G_at{wid} else x[b/2 3]û(bûx[2 3]=0)/1 1;
		bPositionChild{wid;0#x;1#x;2#x;3#x;g_resizeOptions{wid}};
		};
	}

G_at{wid}:
	{
	if (~at_able{wid}) ¢1 ¢1 ¢1 ¢1
	else g_layoutRow{wid},g_layoutCol{wid},g_layoutVspan{wid},g_layoutHspan{wid}
	}

G_l{wid}:'l'ÅG_resize{wid}
G_r{wid}:'r'ÅG_resize{wid}
G_t{wid}:'t'ÅG_resize{wid}
G_b{wid}:'b'ÅG_resize{wid}
G_h{wid}:'h'ÅG_resize{wid}
G_w{wid}:'w'ÅG_resize{wid}
G_H{wid}:'H'ÅG_resize{wid}
G_W{wid}:'W'ÅG_resize{wid}

S_l{wid;x}:S_Resize{wid;x;'l'}
S_r{wid;x}:S_Resize{wid;x;'r'}
S_t{wid;x}:S_Resize{wid;x;'t'}
S_b{wid;x}:S_Resize{wid;x;'b'}
S_h{wid;x}:S_Resize{wid;x;'h'}
S_w{wid;x}:S_Resize{wid;x;'w'}
S_H{wid;x}:S_Resize{wid;x;'H'}
S_W{wid;x}:S_Resize{wid;x;'W'}

S_Resize{wid;x;y}:S_resize{wid;if (x½1) G_resize{wid},y else (t¨y)/tûG_resize{wid}}

G_resize{wid}:G_resize_core{wid;1}

top_resize{wid}:(2Õ÷,((2+#RESIZE)Ò2)Î,g_resizeOptions{wid})/RESIZE
bot_resize{x}:''Ò1Ù`int©+/(RESIZEÉx)#(2*2+É#RESIZE),0

G_resize_core{wid;acc}:
	{
	oûtop_resize{wid};
	sfûget_class_defaults{class_of_id{wid}};
	if (~acc) o else if (~`resizeÅ0Øsf) o else if (~o½`resizeØsf) o
	}

S_resize{wid;c}:S_resize_core{wid;c;~'.'Åc}

S_resize_core{wid;c;acc}:
	{
	cûcase (©c)
		{
		`null; 		if (~`resizeÅ0Øsfûget_class_defaults{class_of_id{wid}}) ''
			else 	if (`null=©cû`resizeØsf) 				''
			else 								c;
		`char;	if (0=#c) '' else if (~acc) c else unique{c}/cûc,top_resize{wid}
		};
	s_resizeOptions{wid;bot_resize{c}};
	}

ãã ***	Shell controls

S_shellIconData{wid;x}:
	{
	if (0=wid) ûprint_error{;;'unknown object'};
	if (()½x) û();
	xûif (0<½x) (1Øx;0Øx;2Øx) Ý xû3Ùx else (c;r;,2Â@1((r«d),8)Òxû(cû`int©8«dûÓcß8)Ù@1 x) Ý (r;c)ûÒxûmatrify{x};
	s_shellIconData{wid;x}
	}

S_shellTitle{wid;x}:
	{
	if (0=wid) ûprint_error{;;'unknown object'};
	s_windowName{wid;,if (x½'') x else if (()½x) shell_title{cx;var} Ý (cx;var)ûg_data{wid} else if (`char=©x) x else Îx}
	}

S_shellResizeable{wid;x}:
	{
	if (1=bBeenMapped{wid}) ûprint_error{wid;;'object has been mapped -- `resizeable setting ignored'};
	s_shellResizeable{wid;x}
	}

S_shellFooter{wid;x}:
	{
	if (1=bBeenMapped{wid}) ûprint_error{wid;;'object has been mapped -- `foot setting ignored'};
	s_shellFooter{wid;x}
	}

S_shellHeader{wid;x}:
	{
	if (1=bBeenMapped{wid}) ûprint_error{wid;;'object has been mapped -- `head setting ignored'};
	s_shellHeader{wid;x}
	}

S_leftFooter{wid;x}:
	{
	if (0=g_shellFooter{wid}) ûprint_error{wid;;'`foot is off -- leftfooter setting ignored'};
	s_shellLeftFooter{wid;x}
	}

S_rightFooter{wid;x}:
	{
	if (0=g_shellFooter{wid}) ûprint_error{wid;;'`foot is off -- rightfooter setting ignored'};
	s_shellRightFooter{wid;x}
	}

S_shellWSPresence{wid;x}:{
        if (~^/`char=,>©¡x) ûprint_error{wid;;'`presence incorrect -- setting ignored'};
	s_shellWorkspacePresence{wid;x}
	}

G_shellWSPresence{wid}:{g_shellWorkspacePresence{wid}}


ãã ***	Tab controls

G_tabFrom{wid}:		if (widÅxûg_tabList{g_topLevel{wid}}) q_n{g_data{((xÉwid)#¢1÷É#x)#x}}
S_tabFrom{wid;x}:	if (~()½x) s_metaTab{g_varWid{c_v{0#g_data{wid};x}};wid}

G_tabTo{wid}:		if (0<#xûg_metaTab{wid}) if (0<#xû(x¨0)/x) q_n{g_data{x}}
S_tabTo{wid;x}:		if (~()½x) s_metaTab{wid;g_varWid{c_v{0#g_data{wid};x}}}

G_tabList{tid}:		if (0<#xûg_tabList{tid}) if (0<#xû(x¨0)/x) q_n{g_data@0{x}}

S_tabList{tid;x}:
	{
	if (x½()) s_tabList{tid;É0}
	else
		{
		if (x½`) xûnatural_tab_order{tid};
		s_tabList{tid;(z¨0)/zûg_varWid@1{c_v{0#g_data{tid};x}}};
		};
	}

natural_tab_order{id}:(è>1Øq)#0ØqûG_Extents{if (is_shell{id}) id else g_parent{id};0}

G_arrowList{tid}:
	{
	if (()½dûG_Descendents{g_varWid{g_data{tid}}}) û0 3Ò();
	mû0 3Ò();
	m[,]ûarrow_matrix{d;`s.leftTo;`left};
	m[,]ûarrow_matrix{d;`s.rightTo;`right};
	m[,]ûarrow_matrix{d;`s.upTo;`up};
	m[,]ûarrow_matrix{d;`s.downTo;`down};
	nûnatural_arrow_order{tid};
	if (~(Òm)½Òn) m else if ((^/mÅn)^^/nÅm) ` else m
	}

arrow_matrix{d;dir;sdir}:
	{
	zûd _get¡dir;
	if (()½zû(bû`null¨>©¡z)/z) û0 3Ò();
	ô(b/d),sdir~Øq_n¡{z}
	}

S_arrowList{tid;x}:
	{
	if (()½dûG_Descendents{g_varWid{g_data{tid}}}) û();
	if (x½()) xû0 3Ò()
	else
		{
		if (x½`) xûnatural_arrow_order{tid};
		if (0<#x) x[;0 2]ûq_n@¢1{c_c@0{x[;0 2]}};
		};
	(iû#d) do
		{
		d[i] _set (`s.leftTo;if ((#x)>jûx[;0 1]Éd[i],`left) x[j;2]);
		d[i] _set (`s.rightTo;if ((#x)>jûx[;0 1]Éd[i],`right) x[j;2]);
		d[i] _set (`s.upTo;if ((#x)>jûx[;0 1]Éd[i],`up) x[j;2]);
		d[i] _set (`s.downTo;if ((#x)>jûx[;0 1]Éd[i],`down) x[j;2]);
		};
	}

natural_arrow_order{tid}:
	{
	zû0 3Ò();
	if (0<#s Ý (s;e)ûG_Extents{tid;0})
		{
		eû>e;
		lû÷@1 rû¢2!((èe),0)#s;
		uû÷@1 dû¢2!((è÷@1 e),0)#s;
		z[,]ûôl[;0],`left~l[;1];
		z[,]ûôr[;0],`right~r[;1];
		z[,]ûôu[;0],`up~u[;1];
		z[,]ûôd[;0],`down~d[;1];
		};
	z
	}

ãã ***	Leader/follower controls

G_leader{wid}:		if (0<#zûg_windowGroup{wid}) if (0¨z) if (wid¨z) q_n{g_data{z}}

S_leader{wid;x}:
	{
	if (0=wid) ûprint_error{;;'unknown object'};
	(fcx;fvar)ûg_data{wid};
	if (`s=fcx) û();
	if ((0=#x)^0=#WS) s_windowGroup{wid;g_defaultLeader{}}
	else
		{
		if (0=#x) xûWS;
		(cx;var)ûc_c{x};
		if ((cx,var)½fcx,fvar) s_windowGroup{wid;0}
		else if (is_variable{cx;var})
			{
			if (0=xwidûg_varWid{cx,var}) 	ûprint_error{cx;var;'leader variable not bound'};
			if (is_a{cx,var;OBJECT_CLASS})	ûprint_error{cx;var;'reference object cannot lead'};
			if (is_one_of{cx,var;REPORT_CLASSES})	ûprint_error{cx;var;'report object cannot lead'};
			pxwidûg_parent{xwid};
			if (0<g_parent{pxwid}) 		ûprint_error{cx;var;'leader not a shell'};
			S_windowGroup{wid;pxwid};
			}
		}
	}

S_windowGroup{wid;x}:
	{
	if (~x½wid) if (is_shell{wid})
		{
		if (~1½s_windowGroup{wid;x})	ûprint_error{wid;;'cannot create a leader-follower cycle'};
		trigger_workspace_tree{};
		}
	}

G_followers{wid}:if (is_shell{wid}) if (0<#zûg_followers{wid}) if (0<#zû(0<Ø#¡z)/zûg_data¡{z}) q_n{>z}

S_followers{wid;x}:
	{
	if (0=wid) ûprint_error{;;'unknown object'};
	(cx;var)ûg_data{wid};
	flsûG_followers{wid};
	nflsûif (0<#x) q_n{c_v{cx;x}};
	if (0<#nfls) nflsû(~is_a@0{nfls;OBJECT_CLASS})/nfls;
	if (0<#nfls) nflsû(~is_one_of@0 1{nfls;REPORT_CLASSES})/nfls;
	if (1Åbû~flsÅnfls) S_leader¡{g_parent¡{g_varWid¡{b/fls}};<if (0<#WS) (0#WS)Ö1#WS};
	if (1Åbû~nflsÅfls) S_leader¡{g_parent¡{g_varWid@0{b/nfls}};cxÖvar};
	}

G_followertree{wid}:	(q_n{g_data{wid}};,<G_followertree_rec{wid})
G_followertree_rec{wid}:if (0<#flsûG_followers{wid}) (fls;&¡{g_parent@0{g_varWid@0{fls}}})

S_followertree{wid;x}:
	{
	if (0=wid) ûprint_error{;;'unknown object'};
	(syms;vals)û,¡2Ùx;
	pidsûg_parent@0{g_varWid@0{syms}};
	S_followers¡{pids;0Ø¡2Ù¡vals};
	if (1Åbû0<Ø#¡vals) &¡{b/pids;b/vals};
	}

ãã ***	Get and set event callbacks

G_cb{id;r}:			if (0<#fnû0Ø(fn;cd)û2ÙbGetCB{id;r}) fn,<cd
G_cb_func{id;r}:		if (0<#fnû0Ø(fn;cd)û2ÙbGetCB{id;r}) if (~internal{fn}) fn,<cd
G_cb_bool{id;r}:		if (0=#fnû0Ø(fn;cd)û2ÙbGetCB{id;r}) 0 else if (internal{fn}) 1 else fn,<cd
G_report_cb{id;r}:              if (0<#fnû0Ø(fn;cd)û2ÙbGetReportCB{id;r}) fn,<cd

S_report_cb{id;ev;ar}:          bAddReportCB{id;ev;if (`func=©0Ø(fn;cd)û2Ùar) fn,<cd}
S_cb{id;ev;ar}:			bAddCB{id;ev;if (`func=©0Ø(fn;cd)û2Ùar) fn,<cd}
S_cb_func{id;ev;ar;fn}:		S_cb{id;ev;cb_arg{id;ar;fn}}
S_cb_bool{id;ev;ar;fn;cd}:	S_cb{id;ev;if (ar½0) (;) else if (ar½1) cb_arg{id;cd;fn} else cb_arg{id;ar;fn}}
cb_arg{id;ar;fn}:		if (`func=©ar) ar else if (`func=©fn) (fn;(g_varClass{g_data{id}};id;ar))

G_clear{id}:			G_cb{id;`selectionclear}
G_notify{id}:			G_cb{id;`selectionnotify}

G_2up{id}:			G_cb{id;`button2up}
G_2down{id}:			G_cb{id;`button2down}
G_3up{id}:			G_cb{id;`button3up}
G_3down{id}:			G_cb{id;`button3down}

G_selectField{id}:		G_cb{id;`columnselection}
G_select{id}:			G_cb{id;`selection}
G_validate{id}:			G_cb{id;`activate}
G_key{id}:			G_cb{id;`keypress}
G_f1{id}:			G_cb{id;`f1}
G_f2{id}:			G_cb{id;`f2}
G_f3{id}:			G_cb{id;`f3}
G_f4{id}:			G_cb{id;`f4}
G_f5{id}:			G_cb{id;`f5}
G_f6{id}:			G_cb{id;`f6}
G_f7{id}:			G_cb{id;`f7}
G_f8{id}:			G_cb{id;`f8}
G_f9{id}:			G_cb{id;`f9}
G_f10{id}:			G_cb{id;`f10}
G_f11{id}:			G_cb{id;`f11}
G_f12{id}:			G_cb{id;`f12}

G_setRow{id}:			G_cb_bool{id;`setrow}
G_setCol{id}:			G_cb_bool{id;`setcol}
G_setFirstRow{id}:		G_cb_bool{id;`firstrowchange}
G_setFirstCol{id}:		G_cb_bool{id;`firstcolumnchange}

G_arrowLeft{id}:		G_cb_bool{id;`shiftLeft}
G_arrowRight{id}:		G_cb_bool{id;`shiftRight}
G_arrowUp{id}:			G_cb_bool{id;`shiftUp}
G_arrowDown{id}:		G_cb_bool{id;`shiftDown}

G_traceRefer{id}:		G_cb{id;`tracereference}
G_traceReferPoint{id}:		G_cb{id;`traceptreference}
G_graphRefer{id}:		G_cb{id;`graphreference}

G_reportPageBreak{id}:        	G_report_cb{id;`pagebreak}
G_reportComputeSize{id}:      	G_report_cb{id;`computesize}
G_reportComputePageBreak{id}:	G_report_cb{id;`computepagebreak}

G_scalarIncrement{id}:          G_cb{id;`increment}
G_scalarDecrement{id}:          G_cb{id;`decrement}
G_scalarRefer{id}:		G_cb{id;`reference}

G_slotIncrement{id}:            G_cb{id;`increment}
G_slotDecrement{id}:            G_cb{id;`decrement}
G_slotRefer{id}:		G_cb{id;`reference}

G_treeRefer{id}:		G_cb{id;`reference}

G_graphAddTrace{id}:		G_cb_func{id;`addtrace}
G_graphAddTextTrace{id}:	G_cb_func{id;`addtexttrace}
G_graphCopyTextTrace{id}:	G_cb_func{id;`copytexttrace}
G_traceAddPoint{id}:		G_cb_func{id;`addpoint}
G_traceTextActivate{id}:	G_cb_func{id;`addtexttrace}
G_graphCopyTrace{id}:		G_cb_func{id;`copytrace}

G_refer{id}:			G_cb_bool{id;`reference}
G_delete{id}:			G_cb_bool{id;`deleterow}
G_deleteTrace{id}:		G_cb_bool{id;`deletetrace}
G_rband{id}:			G_cb_bool{id;`rband}
G_insertabove{id}:		G_cb_bool{id;`insertabove}
G_insertbelow{id}:		G_cb_bool{id;`insertbelow}
G_exit{tid}:			G_cb_bool{tid;bIsTopLevel{tid}#`dismiss `quit}
G_save{id}:			G_cb_bool{id;`save}

G_matrixSelectRow{id}:		G_cb_bool{id;`rowselection}
G_matrixSelectCol{id}:		G_cb_bool{id;`columnselection}
G_matrixSelectCorner{id}:	G_cb_bool{id;`labelselection}

G_shellIconized{id}:		G_cb{id;`iconized}
G_shellDeiconized{id}:		G_cb{id;`deiconized}
G_shellInCurrentWS{id}:		G_cb{id;`incurrentworkspace}
G_shellOutOfCurrentWS{id}:	G_cb{id;`outofcurrentworkspace}

G_notebookPageChangeCB{id}:	G_cb{id;`pagechange}

G_editBeginCB{id}:		G_cb{id;`editbegin}
G_editEndCB{id}:		G_cb{id;`editend}

G_fieldColumnResizeCB{id}:	G_cb{id;`columnresizecb}

S_shellIconized{id;x}:		S_cb{id;`iconized;x}
S_shellDeiconized{id;x}:	S_cb{id;`deiconized;x}
S_shellInCurrentWS{id;x}:	S_cb{id;`incurrentworkspace;x}
S_shellOutOfCurrentWS{id;x}:	S_cb{id;`outofcurrentworkspace;x}

S_scalarIncrement{id;x}:        S_cb{id;`increment;x}
S_scalarDecrement{id;x}:        S_cb{id;`decrement;x}
S_scalarRefer{id;x}:		S_cb{id;`reference;x}

S_slotIncrement{id;x}:          S_cb{id;`increment;x}
S_slotDecrement{id;x}:          S_cb{id;`decrement;x}
S_slotRefer{id;x}:		S_cb{id;`reference;x}

S_treeRefer{id;x}:		S_cb{id;`reference;x}

S_clear{id;x}:			S_cb{id;`selectionclear;x}
S_notify{id;x}:			S_cb{id;`selectionnotify;x}

S_2up{id;x}:			S_cb{id;`button2up;x}
S_2down{id;x}:			S_cb{id;`button2down;x}
S_3up{id;x}:			S_cb{id;`button3up;x}
S_3down{id;x}:			S_cb{id;`button3down;x}

S_select{id;x}:			S_cb{id;`selection;x}
S_selectField{id;x}:		S_cb{id;`columnselection;x}
S_validate{id;x}:		S_cb{id;`activate;x}
S_key{id;x}:			S_cb{id;`keypress;x}
S_f1{id;x}:			S_cb{id;`f1;x}
S_f2{id;x}:			S_cb{id;`f2;x}
S_f3{id;x}:			S_cb{id;`f3;x}
S_f4{id;x}:			S_cb{id;`f4;x}
S_f5{id;x}:			S_cb{id;`f5;x}
S_f6{id;x}:			S_cb{id;`f6;x}
S_f7{id;x}:			S_cb{id;`f7;x}
S_f8{id;x}:			S_cb{id;`f8;x}
S_f9{id;x}:			S_cb{id;`f9;x}
S_f10{id;x}:			S_cb{id;`f10;x}
S_f11{id;x}:			S_cb{id;`f11;x}
S_f12{id;x}:			S_cb{id;`f12;x}

S_notebookPageChangeCB{id;x}:	S_cb{id;`pagechange;x}

S_arrowLeft{id;x}:		S_cb_bool{id;`shiftLeft;x;call_arrowKey;`leftTo}
S_arrowRight{id;x}:		S_cb_bool{id;`shiftRight;x;call_arrowKey;`rightTo}
S_arrowUp{id;x}:		S_cb_bool{id;`shiftUp;x;call_arrowKey;`upTo}
S_arrowDown{id;x}:		S_cb_bool{id;`shiftDown;x;call_arrowKey;`downTo}

S_traceRefer{id;x}:		S_cb{id;`tracereference;x}
S_traceReferPoint{id;x}:	S_cb{id;`traceptreference;x}
S_graphRefer{id;x}:		S_cb{id;`graphreference;x}
S_reportPageStatus{id;x}:	S_cb{id;`reportpagestatus;x}

S_editBeginCB{id;x}:		S_cb{id;`editbegin;x}
S_editEndCB{id;x}:		S_cb{id;`editend;x}

S_fieldColumnResizeCB{id;x}:	S_cb{id;`columnresizecb;x}

S_reportPageBreak{id;x}:        S_report_cb{id;`pagebreak; x}
S_reportComputeSize{id;x}:      S_report_cb{id;`computesize; x}
S_reportComputePageBreak{id;x}: S_report_cb{id;`computepagebreak; x}

S_graphAddTrace{id;x}:		S_cb_func{id;`addtrace;x;call_graphAddTrace}
S_graphAddTextTrace{id;x}:	S_cb_func{id;`addtexttrace;x;call_graphAddTextTrace}
S_graphCopyTextTrace{id;x}:	S_cb_func{id;`copytexttrace;x;call_graphCopyTextTrace}
S_traceAddPoint{id;x}:		S_cb_func{id;`addpoint;x;call_traceAddPoint}
S_traceTextActivate{id;x}:	S_cb_func{id;`textactivate;x;call_traceTextActivate}
S_graphCopyTrace{id;x}:		S_cb_func{id;`copytrace;x;call_graphCopyTrace}

S_refer{id;x}:			S_cb_bool{id;`reference;x;call_refer;}
S_delete{id;x}:			S_cb_bool{id;`deleterow;x;call_delete;}
S_deleteTrace{id;x}:		S_cb_bool{id;`deletetrace;x;call_delete;}
S_rband{id;x}:			S_cb_bool{id;`rband;x;call_rband;}
S_insertbelow{id;x}:		S_cb_bool{id;`insertbelow;x;call_insert;1}
S_insertabove{id;x}:		S_cb_bool{id;`insertabove;x;call_insert;0}
S_exit{tid;x}:			S_cb_bool{tid;i#`dismiss `quit;x;iØ(call_dismiss;call_quit);} Ý iûbIsTopLevel{tid}
S_save{id;x}:			S_cb_bool{id;`save;x;call_save;}

S_matrixSelectCol{id;x}:	S_cb_bool{id;`columnselection;x;call_matrixSelectCol;}
S_matrixSelectRow{id;x}:	S_cb_bool{id;`rowselection;x;call_matrixSelectRow;}
S_matrixSelectCorner{id;x}:	S_cb_bool{id;`labelselection;x;call_matrixSelectCorner;}

S_setRow{id;x}:			S_cb_bool{id;`setrow;x;call_setScroll;`vscrollwith`row}
S_setCol{id;x}:			S_cb_bool{id;`setcol;x;call_setScroll;`hscrollwith`col}
S_setFirstRow{id;x}:		S_cb_bool{id;`firstrowchange;x;call_setScroll;`vscrollwith`firstrow}
S_setFirstCol{id;x}:		S_cb_bool{id;`firstcolumnchange;x;call_setScroll;`hscrollwith`firstcol}

ãã ***	Application interface to default event callbacks

call{var;r}:
	{
	(fn;cd)ûrØEVENT_CALLBACKS;
	(cx;var)ûc_c{var};
	widûg_varWid{cx,var};
	clsûg_varClass{cx,var};
	fn¡{(cls;wid;cd);cx;var};
	}

ãã ***	Default event callbacks

call_setScroll{s;c;v}:
	{
	(cls;wid;x)ûs;
	(satt;ratt)ûx;
	dirû'v'=1ÙÎsatt;
	if (()½grpûcÖ_get{c,v;`sÖsatt}) û();
	if (()½grpûG_bound@0{grp}/grp) û();
	gclsûG_class@0{grp};
	uclsûunique{gcls}/gcls;
	sfû(ucls;Å1Ø¡ofClass@0{ratt;ucls});
	valû(0Ø0ØofClass{ratt;cls})¡{wid};
	(iû#grp) do if (`func=©fnûgcls[i]Øsf)
		{
		gidûg_varWid{i#grp};
		scroll_cb{gid;dir;0};
		fn¡{gid;val};
		scroll_cb{gid;dir;1};
		};
	}

scroll_cb{id;dir;x}:
	{
	if (dir) S_setFirstRow{id;x} else S_setFirstCol{id;x};
	if (dir) S_setRow{id;x} else S_setCol{id;x};
	}

call_arrowKey{s;c;v}:if (~()½aûG_focus{1Øs}) if (~()½bûa _get `sÖ2Øs) if (0<wûg_varWid{b}) S_focus{w;}

call_rband{s;c;v}:if (~0Å2Õrbûg_pageRubberBand{widûg_varWid{c,v}}) s_pageBoxes{wid;g_pageBoxes{wid},rb}

call_refer{s;c;v}:call_indexor{s;c;v;`row;`index}
call_matrixSelectRow{s;c;v}:call_indexor{s;c;v;`row;`rowindex}
call_matrixSelectCol{s;c;v}:call_indexor{s;c;v;`col;`colindex}
call_matrixSelectCorner{s;c;v}:(c,v) has (`cornerindex;if (0=#iû0Øof{,`cornerindex;c,v}) 1 else ~i)

call_indexor{s;c;v;a;r}:
	{
	(idx;k)ûof{r,a;c,v};
	idxûif (~kÅidx) (nÙidx),k,nÕidx Ý nûidxèk else (idx¨k)/idx;
	(c,v) has (r;idx);
	}

call_save{s;c;v}:
	{
	(jnk;wid;jnk)û3Ùs;
	(c%v)ûg_textBuffer{wid};
	}

call_exit{s;c;v}:
	{
	iûbIsTopLevel{g_topLevel{g_varWid{c,v}}};
	fnûiØ(call_dismiss;call_quit);
	fn¡{s;c;v};
	}

call_quit{s;c;v}:	if (0<#EXIT) _exit{EXIT} else free{c,v}
call_dismiss{s;c;v}:	hide{c,v}

call_graphAddTrace{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	(tcx;tvar)ûgenerate_symbol{c;matrify{g_graphCoordinate{wid}}};
	(c%v)û(c%v),Âvariable_name{tcx;tvar};
	}

call_graphAddTextTrace{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	(tcx;tvar)ûgenerate_symbol{c;matrify{g_graphCoordinate{wid}}};
	S_freeze{wid; 1};
	(c%v)û(c%v),Âvariable_name{tcx;tvar};
	twidûg_varWid{Âvariable_name{tcx;tvar}};
	S_varTitle{tcx,tvar;g_traceText{twid}};
	S_traceStyleFunc{twid; `text};
	S_freeze{wid; 0};
	}

call_graphCopyTrace{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	cidûg_varWid{G_graphSelected{wid}};
	(tcx;tvar)ûgenerate_symbol{c;g_traceCoordinate{cid}};
	(c%v)û(c%v),Âvariable_name{tcx;tvar};
	}

call_graphCopyTextTrace{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	selûG_graphSelected{wid};
	cidûg_varWid{sel};
	(cx;var)ûg_data{cid};
	(tcx;tvar)ûgenerate_symbol{c;matrify{g_graphCoordinate{wid}}};
	S_freeze{wid; 1};
	(c%v)û(c%v),Âvariable_name{tcx;tvar};
	twidûg_varWid{Âvariable_name{tcx;tvar}};
	S_traceStyleFunc{twid; `text};
	S_varTitle{tcx,tvar;G_varTitle{cx,var}};
	s_varTitleColor{tcx,tvar;g_varTitleColor{cx,var}};
	s_varTitleFont{tcx,tvar;g_varTitleFont{cx,var}};
	S_freeze{wid; 0};
	}

call_traceAddPoint{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	(c%v)[,]ûif (1=#shpûÒc%v Ý zû,g_graphCoordinate{g_parent{wid}}) 1#z else (0#z),(¢1+1#shp)Ò1#z
	}

call_traceTextActivate{s;c;v}:
	{
	if (0=#s) û();
	(jnk;wid;jnk)û3Ùs;
	s_varTitle{c,v;g_traceText{wid}};
	}


call_delete{s;c;v}:
	{
	(cls;wid;jnk)û3Ùs;
	if (()½wid) widûg_varWid{c,v};
	if (()½cls) clsûg_varClass{c,v};
	valûc%v;
	case (flat_super{cls})
		{
		`array;	if (0¤rowû0Øget_attributes{c;v;wid;cls;`row;0}) if (0<#val) (c%v)ûdelete_vector{c;v;val;row};
		`table;	{
			if (0¤rowû0Øget_attributes{c;v;wid;cls;`row;0}) (iû#valû,val) do
				{
				if (i=0) rowsûequal_items{c;v;c%¡val;`delete};
				(vcx;vvar)ûc_v{c;i#val};
				if (0<rvû#vvalûvcx%vvar) if (rows=rv) (vcx%vvar)ûdelete_vector{vcx;vvar;vval;row};
				};
			};
		`graph;	if (0<#trûG_graphSelected{wid}) free_instance{tr;};
		`slot;	if (~()½selû0Øget_attributes{c;v;wid;cls;`selected;0}) if (0<#0Øval) (c%v)ûdelete_slot{c;v;val;sel}
		}
	}

call_insert{s;c;v}:
	{
	(cls;wid;dir)û3Ùs;
	if (()½wid) widûg_varWid{c,v};
	if (()½cls) clsûg_varClass{c,v};
	if (()½dir) dirû1;
	valûc%v;
	copûG_varCopy{c,v};
	case (flat_super{cls})
		{
		`array;	{
			rowû0Øget_attributes{c;v;wid;cls;`row;0};
			(c%v)ûinsert_vector{c;v;val;row;dir;if (cop) row#val else G_varNa{c,v}};
			};
		`table;	{
			rowû0Øget_attributes{c;v;wid;cls;`row;0};
			(iû#valû,val) do
				{
				if (i=0) rsûequal_items{c;v;c%¡val;`insert};
				(vcx;vvar)ûc_v{c;i#val};
				if (rs=#vvalûvcx%vvar) (vcx%vvar)ûinsert_vector{vcx;vvar;vval;row;dir;if (cop) row#vval else G_varNa{vcx,vvar}};
				}
			};
		`slot;	{
			selû0Øget_attributes{c;v;wid;cls;`selected;0};
			(c%v)ûinsert_slot{c;v;val;sel;dir;if (cop) selØval else G_varNa{c,v}};
			}
		}
	}

io_type_{c;v;f}:if (`func¨©fn Ý fnû0Ø2Ùf{c,v}) 0 else (0#Ö_name{fn})ÅIO
io_type{c;v}:if (0<#z Ý zû_get{c,v;`s.io}) z else if (io_type_{c;v;g_varOutFunc}) z else if (io_type_{c;v;g_varInFunc}) z

equal_items{cx;var;vals;op}:if (^/n=0#nû,Ø#¡vals) 0#n else print_abort{cx;var;'fields of different length -- no ',Îop}

insert_vector{c;v;val;row;dir;fil}:(mÙval),fil,nÕval Ý insert_io{c;v;m;n} Ý mû(#val)Än Ý nûrow+dir©0=#val

insert_slot{c;v;val;sel;dir;fil}:
	{
	if (~()½sel) (mÙ¡val),¡insert_new_slot{0Øval;fil},¡nÕ¡val Ý insert_io{c;v;m;n} Ý mû(#0Øval)Än Ý nûdir+(0Øval)Ésel
	else if (0=#0Øval) insert_new_slot{;fil}
	else val
	}

insert_new_slot{s;f}:(if (()½s) `_ else Â(1+0ÓÓ/+/@1 '_'=(^/@1 kÅ'_ ')/kûÎs)Ò'_';if (f½<()) f else <f)
insert_io{c;v;m;n}:if (~()½a Ý aûio_type{c;v}) _set{c,v;(`s.io;(mÙa),(<()),nÕa)}

delete_vector{c;v;val;row}:b/val Ý delete_io{c;v;b} Ý bû(rowÒ1),0,((#val)-row+1)Ò1
delete_slot{c;v;val;sel}:(<b)/¡val Ý delete_io{c;v;b} Ý bûsel¨0Øval
delete_io{c;v;b}:if (0<#a Ý aûio_type{c;v}) _set{c,v;(`s.io;b/a)}

ãã ***	S Interface to A+ assignment callbacks

S_set{var;x}:		_scb{var;2Ùx}
G_set{var}:		_gcb{var}
S_preset{var;x}:	_spcb{var;2Ùx}
G_preset{var}:		_gpcb{var}
S_varDoneFunc{var;x}:	s_varDoneFunc{var;if (~(x½())©x½(;)) 2Ùx}
G_varDoneFunc{var}:	g_varDoneFunc{var}

ãã ***	system attribute functions

call_default_out{x;d}:
	{
	case (©kûg_varOutFunc{x})
		{
		`box `sym `char; 	_sfmt{k;d};
		`func;			f¡{s;d;;;c;v} Ý (f;s)ûk Ý (c;v)ûx;
					''	
		}
	}

call_default_in{x;d}:
	{
	case (©kûg_varInFunc{x})
		{
		`func;		f¡{s;d;;;c;v} Ý (f;s)ûk Ý (c;v)ûx;
				()	
		}
	}

convert_if{x;cfn}:		if (`sym=©x) cfn@0{x} else if (`char=©x) cfn@1{x} else x
if_convert{x;cfn}:		if (`int=©x) cfn@0{x} else x

ret_geo_client{s;d;i;p;c;v}:	if (`sym=©s) ¢1+(`,0Øc%v)És else s
ret_client{s;d;i;p;c;v}:	s
ret_data{s;d;i;p;c;v}:		d

in_default{s;d;i;p;c;v}:
	{
	(bl;na)û(G_varBlank{c,v};G_varNa{c,v});
	if ((,d)½(#d)Ùbl) na
	else if ((`char=©s)^2=#Òs) in_lookup{s;d;i;p;c;v;na}
	else
		{
		(rc;z)ûdo in_default_exec{if (~()½s) ret_scalar_client{s;d;i;p;c;v};d;i;p;c;v};
		if (rc=0) z else print_error{c;v;z,' - edit value'}
		}
	}

in_lookup{s;d;i;p;c;v;na}:	if ((#s)=iûsÉ(1ÕÒs)Ùd) na else i
out_lookup{s;d;i;p;c;v;bl}:	if ((d<0)©d>#s) bl else d#s

in_default_exec{s;d;i;p;c;v}:
	{
	if (G_literal{c,v}) >execute{'<',d}
	else case (typû©i#valûpØc%v)
		{
		`int `float;	if (^/d=' ') (`int `floatÉtyp)Ø(0;0.0) else in_numeric{d;c;v};
		`char;		if (1¦#Òval) d else (1#Òval)Ùd;
				if (^/d=' ') typØNA else execute{d}	
		}
	}

in_numeric{d;c;v}:if (1=G_varExecute{c,v}) execute{d} else _sfi{d}

out_default{s;d;i;p;c;v}:
	{
	(bl;na)û(G_varBlank{c,v};G_varNa{c,v});
	zû	if ((~bl½())^d½na) 		bl
	else 	if ((`char=©s)^2=#Òs) 		out_lookup{s;d;i;p;c;v;if (()½bl) '' else bl}
	else 					out_default_exec{if (~()½s) ret_scalar_client{s;d;i;p;c;v};d;i;p;c;v};

	if (1=G_respace{c,v}) if (g_varCw{c,v}<#z) S_varCw{c,v;#z};
	z
	}

out_default_exec{s;d;i;p;c;v}:
	{
	if (¢1=½d) dû<{d};
	zû,if (G_literal{c,v}) 					box{d}
	else case (©d)
		{
		`int `float;	{
					if (0<#Òd) 		box{d}
				else 	if (0=#s) 		1Õîd
				else 	if ((©s)Å`char `sym)	_sfmt{s;d}
				else	if (1Å`int `float=©s)	sîd
				else 				box{d}
				};
		`char;		if (1¦#Òd) d else box{d};
				box{d}
		};
	z
	}
	
ret_slot_label{s;d;i;p;c;v}:
	{
	if (()½s) Îp else case (©zûslot_index{s;d;i;p;c;v;1})
		{
		`null;		Îp;
		`sym;		Îz;
		`char;		z;
		`int `float;	îz;
				box{z}
		}
	}

ret_flat_scalar_client{s;d;i;p;c;v}:_flat{ret_scalar_client{if (0=½s) <s else s;d;i;p;c;v}}

ret_scalar_client{s;d;i;p;c;v}:
	{
		if (0=#s) 		s
	else	if (0=#Òs)		s
	else	if ((1¦#Òs)^`char=©s) 	s
	else	if (~p½())		slot_index{s;d;i;p;c;v;0}
	else				array_index{i;arrayify{s;#Òc%v}}
	}

ret_matrix_client{s;d;i;p;c;v}:
	{
	if (0=#s) ûs;
	(a;r;c)û3Òif (0=½s) <s else s;
	if (i½(;) Ý iû2Ùif (0=½i) <i else i) if (0=½a) a else 0Ø1Ùa else matrix_index{i;if (()½1Øi) r else c}
	}

matrix_index{i;s}:			if (~()½s) array_index{i;if (`char¨©s) s else if (2=#Òs) <@1 s else <s}

ret_matrix_label{s;d;i;p;c;v}:		case (©zûret_matrix_client{s;d;i;p;c;v}) {`sym;Îz;z}

ret_page_client{s;d;i;p;c;v}:		if (0=#s) s else if ((~()½i)^0=½i Ý kûÒc%v) i#,kÒs else if ((Òs)½k) s else i#kÒs

array_index{i;s}:			if (0=#s) s else >(Û¡(Òs)|Øi)#s

slot_index{s;d;i;p;c;v;q}:		if (1=_issf{s}) slot_pick{s;d;i;p;c;v;q} else slot_from{s;d;i;p;c;v;q}
slot_pick{s;d;i;p;c;v;q}:		if (pÅ0Øs) pØs else if (q) p

slot_from{s;d;i;p;c;v;q}:
	{
	rû0Øc%v;
	jûrÉp;
	sû,if (2=#Òs) <@1 s else if ((`char=©s)^1¦#Òs) <,s else s;
	if (q^j¦#s) p else ((#s)|j)Øs
	}

ret_matrix_space{s;d;i;p;c;v}:		if (s½¢1) xûmatrix_spacing{c;v} else (1Ùs),(1#Òc%v)Ò(1<#s)Õs

ret_trace_linecolor{s;d;i;p;c;v}:	((0=#s)Ø(ret_trace_within;ret_trace_across))¡{s;d;i;p;c;v;LINEPIXELS;`white}
ret_trace_fillcolor{s;d;i;p;c;v}:	((0=#s)Ø(ret_trace_within;ret_trace_across))¡{s;d;i;p;c;v;FILLPIXELS;`white}
ret_trace_symbol{s;d;i;p;c;v}:		((0=#s)Ø(ret_trace_within;ret_trace_across))¡{s;d;i;p;c;v;TRACESYMBOLS;`cross}

non_text_siblings{cx;var}:		(~Ø(<1 2)½¡Ò¡%¡cvars)/cvarsûsiblings_of{cx;var}
ret_trace_linestyle{s;d;i;p;c;v}:	ret_trace_within{s;d;i;p;c;v;(1¨#non_text_siblings{c;v})/LINESTYLES;`solid}

ret_trace_across{s;d;i;p;c;v;glo;dfl}:
	{
	cvarsûnon_text_siblings{c;v};
	if (1=#cvars) ret_trace_within{s;d;i;p;c;v;glo;dfl}
	else ((#s)|0ÓcvarsÉcÖv)#,sûif (0<#glo) glo else dfl
	}

ret_trace_within{s;d;i;p;c;v;glo;dfl}:
	{
	if (0=#s) sû,if (0<#glo) glo else dfl;
	if ((1¦#Òs)^`char=©s) sûÂs;
	jûif ((;)½i Ý iû2Ùi) 0 else if (()½1Øi) (#s)|0Øi else if (()½0Øi) (#s)|0Ó¢1+1Øi else  (#s)|0Øi;
	j#,s
	}

ret_trace_client{s;d;i;p;c;v}:	if (0<#s) (if (0=#i) 0 else (#s)|0Ó¢1+Øi)#,s

ret_trace_legend{s;d;i;p;c;v}:
	{
	if (s½()) variable_name{c;v},(if (2=#Òd),':',1Õî¢1+Øi)
	else if (s½'') s
	else
		{
		zûif (1=#Òd) s
		else
			{
			funû(«½s)Ø(#;Ø);
			laûif (~(1¦#Òs)^`char=©s) if (0=#i) 0 else (#s)|0Ó¢1+Øi;
			raûif (0<#Òs) s else ,s;
			fun¡{la;ra}
			};
		if (`sym=©z) Îz else z
		}
	}

geo_compute{s;d;i;p;c;v}:
	{
		if (0=#s) 			(#0Ød)Ò1 
	else 	if ((¢2½s)©s½`horizontal) 	#0Øc%v 
	else 					s!(Én),(0Ós-s|nû#0Ød)Ò¢1 Ý if (s½`vertical) sû¢1
	}

G_fieldReportAttrs{wid;f;g}:		if (0<#zûg{wid}) z else f{wid}
S_fieldReportAttrs{wid;x;f;g}:		{case (©x){`null;{f{wid;};g{wid;};};`func;{g{wid;2Ùx}};{g{wid;};f{wid;x};};};}

G_fieldBreakFont{wid}:			G_fieldReportAttrs{wid;g_fieldBreakFont;g_fieldBreakFontFunc}
G_fieldBreakLeading{wid}:		G_fieldReportAttrs{wid;g_fieldBreakLeading;g_fieldBreakLeadingFunc}
G_fieldBreakOffset{wid}:		G_fieldReportAttrs{wid;g_fieldBreakOffset;g_fieldBreakOffsetFunc}
G_fieldBreakStyle{wid}:			G_fieldReportAttrs{wid;g_fieldBreakStyle;g_fieldBreakStyleFunc}
G_fieldFgGrayScale{wid}:		G_fieldReportAttrs{wid;g_fieldFgGrayScale;g_fieldFgGrayScaleFunc}
G_fieldBgGrayScale{wid}:		G_fieldReportAttrs{wid;g_fieldBgGrayScale;g_fieldBgGrayScaleFunc}
G_fieldBreakFgGrayScale{wid}:		G_fieldReportAttrs{wid;g_fieldBreakFgGrayScale;g_fieldBreakFgGrayScaleFunc}
G_fieldBreakBgGrayScale{wid}:		G_fieldReportAttrs{wid;g_fieldBreakBgGrayScale;g_fieldBreakBgGrayScaleFunc}
G_fieldReportFont{wid}:			G_fieldReportAttrs{wid;g_fieldReportFont;g_fieldReportFontFunc}
G_fieldStyle{wid}:			G_fieldReportAttrs{wid;g_fieldStyle;g_fieldStyleFunc}
S_fieldBreakFont{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakFont;s_fieldBreakFontFunc}
S_fieldBreakLeading{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakLeading;s_fieldBreakLeadingFunc}
S_fieldBreakOffset{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakOffset;s_fieldBreakOffsetFunc}
S_fieldBreakStyle{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakStyle;s_fieldBreakStyleFunc}
S_fieldFgGrayScale{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldFgGrayScale;s_fieldFgGrayScaleFunc}
S_fieldBgGrayScale{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBgGrayScale;s_fieldBgGrayScaleFunc}
S_fieldBreakFgGrayScale{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakFgGrayScale;s_fieldBreakFgGrayScaleFunc}
S_fieldBreakBgGrayScale{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldBreakBgGrayScale;s_fieldBreakBgGrayScaleFunc}
S_fieldReportFont{wid;x}:		S_fieldReportAttrs{wid;x;s_fieldReportFont;s_fieldReportFontFunc}
S_fieldStyle{wid;x}:			S_fieldReportAttrs{wid;x;s_fieldStyle;s_fieldStyleFunc}

G_cycleColors{wid;f;g}:			if (0<#zûg{wid}) z else f{wid}
S_cycleColors{wid;x;f;g}:		{case (©x){`null;{f{wid;};g{wid;};};`func;{g{wid;2Ùx}};{g{wid;};f{wid;x};};};}

G_arrayCycleColors{wid}:		G_cycleColors{wid;g_arrayCycleColors;g_arrayCycleFunc}
G_fieldCycleColors{wid}:		G_cycleColors{wid;g_fieldCycleColors;g_fieldCycleFunc}
G_slotCycleColors{wid}:			G_cycleColors{wid;g_slotCycleColors;g_slotCycleFunc}
G_scalarCycleColors{wid}:		G_cycleColors{wid;g_scalarCycleColors;g_scalarCycleFunc}

S_arrayCycleColors{wid;x}:		S_cycleColors{wid;x;s_arrayCycleColors;s_arrayCycleFunc}
S_fieldCycleColors{wid;x}:		S_cycleColors{wid;x;s_fieldCycleColors;s_fieldCycleFunc}
S_slotCycleColors{wid;x}:		S_cycleColors{wid;x;s_slotCycleColors;s_slotCycleFunc}
S_scalarCycleColors{wid;x}:		S_cycleColors{wid;x;s_scalarCycleColors;s_scalarCycleFunc}

G_fieldCycleInterval{wid}:		g_arrayCycleInterval{g_parent{wid}}
S_fieldCycleInterval{wid;x}:		S_arrayCycleInterval{g_parent{wid};x}

G_varOutFunc{var;x}:			if (()½x) G_func_flagged{var;`out;1} else call_default_out{var;x}
G_varInFunc{var;x}:			if (()½x) G_func{var;`in} else call_default_in{var;x}

G_varFgFunc{var}:			G_varDefaultedFunc{var;`fg;1#COLORS;pixel_to_color}
G_varBgFunc{var}:			G_varDefaultedFunc{var;`bg;0#COLORS;pixel_to_color}
G_varFontFunc{var}:			G_varDefaultedFunc{var;`font;FONT;id_to_font}
G_varTitleColorFunc{var}:		G_varDefaultedFunc{var;`labelfg;1#COLORS;pixel_to_color}
G_varTitleFontFunc{var}:		G_varDefaultedFunc{var;`labelfont;FONT;id_to_font}
G_varGeoFunc{var}:			G_func{var;`geometry}
G_varRoFunc{var}:			if (()½zûG_func{var;`protect}) 0 else z
G_varTitleFunc{var}:			G_func{var;`label}
G_varTitle{var}:			G_cons{var;`title}

G_varReportFontFunc{var}:		G_func{var;`reportfont}
G_varReportStyleFunc{var}:		G_func{var;`reportstyle}

G_matrixColSpaceFunc{wid}:		G_func{wid;`colspace}	
G_matrixTitleFontFunc{var}:		if (~()½zûG_varTitleFontFunc{var}) z else G_varFontFunc{var}

G_traceLineStyleFunc{wid}:		G_func{wid;`linestyle}
G_traceLineColorFunc{wid}:		G_func{wid;`linecolor}
G_traceFillColorFunc{wid}:		G_func{wid;`fillcolor}
G_traceLegendFunc{wid}:			G_func{wid;`legend}
G_traceLineWidthFunc{wid}:		G_func{wid;`linewidth}
G_traceStyleFunc{wid}:			G_func{wid;`style}
G_traceSymbolFunc{wid}:			G_func{wid;`symbol}
G_traceYYaxisFunc{wid}:			G_func{wid;`yaxis}
G_traceXaxisFunc{wid}:			G_func{wid;`xaxis}
G_traceSymbolSizeFunc{wid}:		G_func{wid;`symbolsize}
G_traceGradientFunc{wid}:		G_func{wid;`gradient}

G_graphXlabelFunc{wid}:			G_func{wid;`xlabel}
G_graphXXlabelFunc{wid}:		G_func{wid;`Xlabel}
G_graphYlabelFunc{wid}:			G_func{wid;`ylabel}
G_graphYYlabelFunc{wid}:		G_func{wid;`Ylabel}
G_graphXsubLabelFunc{wid}:		G_func{wid;`xsublabel}
G_graphXXsubLabelFunc{wid}:		G_func{wid;`Xsublabel}

G_pageIndexFunc{wid}:			if (~0½zûG_func{wid;`color}) z
G_pageBoldFunc{wid}:			G_func{wid;`bold}
G_pageBlinkFunc{wid}:			G_func{wid;`blink}
G_pageUnderlineFunc{wid}:		G_func{wid;`underline}

G_varEw{var}:				EDITSPACE½g_varEw{var}

G_graphXlabelFormatFunc{wid}:		G_func{wid;`xlabelout}
G_graphXXlabelFormatFunc{wid}:		G_func{wid;`Xlabelout}
G_graphYlabelFormatFunc{wid}:		G_func{wid;`ylabelout}
G_graphYYlabelFormatFunc{wid}:		G_func{wid;`Ylabelout}
G_graphXsubLabelFormatFunc{wid}:	G_func{wid;`xsublabelout}
G_graphXXsubLabelFormatFunc{wid}:	G_func{wid;`Xsublabelout}

G_scaleLabelOut{wid}:			G_func{wid;`labelout}

G_varDefaultedFunc{var;r;d;f}:		if (()½zûG_func{var;r}) d else if_convert{z;f}

G_cons{var;r}:
	{
	(cx;var)ûvar;
	(gf;df)ûinternal_get_of{class_of_symbol{cx,var;0};r};
	if (()½zûgf¡{cx,var}) >df else z
	}

G_func{u;r}:G_func_flagged{u;r;0}

G_func_flagged{u;r;flag}:
	{
	(cx;var)ûc_c{if (`sym=©u) u else g_data{u}};
	(gf;df)ûinternal_get_of{class_of_symbol{cx,var;0};r};
	(fn;cd)û2Ùif (1Å`func `null=©zûgf¡{u}) z else <z;

	zûif (~fn½()) 
			if (`func¨©fn) 		fn 
		else 	if (internal{fn}) 	cd 
		else 	if (~flag) 		fn,<cd
		else 	if (~(0#Ö_name{fn})ÅIO) fn,<cd 
		else 				fn,<_get{cx,var;`s.io};

	if (z½()) >df else z
	}

S_traceLineColorFunc{wid;x}:		S_func{wid;`linecolor;x;ret_trace_linecolor;0;0;}
S_traceFillColorFunc{wid;x}:		S_func{wid;`fillcolor;x;ret_trace_fillcolor;0;0;}
S_traceLineStyleFunc{wid;x}:		S_func{wid;`linestyle;x;ret_trace_linestyle;0;0;}
S_traceSymbolFunc{wid;x}:		S_func{wid;`symbol;x;ret_trace_symbol;0;0;}
S_traceLegendFunc{wid;x}:		S_func{wid;`legend;x;ret_trace_legend;0;0;}
S_traceLineWidthFunc{wid;x}:		S_func{wid;`linewidth;x;ret_trace_client;0;0;}
S_traceStyleFunc{wid;x}:		S_func{wid;`style;x;ret_trace_client;0;0;}
S_traceYYaxisFunc{wid;x}:		S_func{wid;`yaxis;x;ret_trace_client;0;0;}
S_traceXaxisFunc{wid;x}:		S_func{wid;`xaxis;x;ret_trace_client;0;0;}
S_traceSymbolSizeFunc{wid;x}:		S_func{wid;`symbolsize;x;ret_trace_client;0;0;}
S_traceGradientFunc{wid;x}:		S_func{wid;`gradient;x;ret_trace_client;0;0;}
S_graphXlabelFunc{wid;x}:		S_func{wid;`xlabel;x;ret_client;0;0;}
S_graphXXlabelFunc{wid;x}:		S_func{wid;`Xlabel;x;ret_client;0;0;}
S_graphYlabelFunc{wid;x}:		S_func{wid;`ylabel;x;ret_client;0;0;}
S_graphYYlabelFunc{wid;x}:		S_func{wid;`Ylabel;x;ret_client;0;0;}
S_graphXsubLabelFunc{wid;x}:		S_func{wid;`xsublabel;x;ret_client;0;0;}
S_graphXXsubLabelFunc{wid;x}:		S_func{wid;`Xsublabel;x;ret_client;0;0;}
S_pageIndexFunc{wid;x}:			S_func{wid;`color;if (()½x) 0 else x;ret_page_client;0;0;}
S_pageBoldFunc{wid;x}:			S_func{wid;`bold;x;ret_page_client;0;0;}
S_pageBlinkFunc{wid;x}:			S_func{wid;`blink;x;ret_page_client;0;0;}
S_pageUnderlineFunc{wid;x}:		S_func{wid;`underline;x;ret_page_client;0;0;}
S_matrixColSpaceFunc{wid;x}:		S_func{wid;`colspace;x;ret_matrix_space;0;0;}

S_graphXlabelFormatFunc{wid;x}:		S_func{wid;`xlabelout;G_Null{wid;x;`xlabelout};out_default;0;1;}
S_graphXXlabelFormatFunc{wid;x}:	S_func{wid;`Xlabelout;G_Null{wid;x;`Xlabelout};out_default;0;1;}
S_graphYlabelFormatFunc{wid;x}:		S_func{wid;`ylabelout;G_Null{wid;x;`ylabelout};out_default;0;1;}
S_graphYYlabelFormatFunc{wid;x}:	S_func{wid;`Ylabelout;G_Null{wid;x;`Ylabelout};out_default;0;1;}
S_graphXsubLabelFormatFunc{wid;x}:	S_func{wid;`xsublabelout;G_Null{wid;x;`xsublabelout};out_default;0;1;}
S_graphXXsubLabelFormatFunc{wid;x}:	S_func{wid;`Xsublabelout;G_Null{wid;x;`Xsublabelout};out_default;0;1;}

S_scaleLabelOut{wid;x}:			S_func{wid;`labelout;G_Null{wid;x;`labelout};out_default;0;1;}

S_varRoFunc{var;x}:			S_func{var;`protect;x;ret_scalar_client;1;2;}
S_varFontFunc{var;x}:			S_func{var;`font;convert_if{x;font_to_id};ret_scalar_client;1;2;}
S_varFgFunc{var;x}:			S_func{var;`fg;convert_if{x;color_to_pixel};ret_scalar_client;1;2;}
S_varBgFunc{var;x}:			S_func{var;`bg;convert_if{x;color_to_pixel};ret_scalar_client;1;2;}

S_varReportFontFunc{var;x}:		S_func{var;`reportfont;x;ret_scalar_client;0;2;}
S_varReportStyleFunc{var;x}:		S_func{var;`reportstyle;x;ret_flat_scalar_client;0;0;}

S_varTitleColorFunc{var;x}: 		S_indexed_func{var;`labelfg;convert_if{x;color_to_pixel};`matrix;(ret_matrix_client;ret_scalar_client);0;1;0;0}
S_varTitleFontFunc{var;x}: 		S_indexed_func{var;`labelfont;convert_if{x;font_to_id};`matrix;(ret_matrix_client;ret_scalar_client);0;1;0;0}
S_varInFunc{var;x}: 			S_indexed_func{var;`in;x;;in_default;0;0;0;0}
S_varTitleFunc{var;x}: 			S_indexed_func{var;`label;x;`matrix;(ret_matrix_label;ret_slot_label);0;0;0;1}
S_varOutFunc{var;x}: 			S_indexed_func{var;`out;x;;out_default;1;0;1;1}

reset_out_func{var}:			S_indexed_func{var;`out;G_varOutFunc{var;};;out_default;0;0;1;1}

S_varGeoFunc{var;x}:
	{
	(fn;cd)û	if 	(`func=©x) 	2Ùx
		else 	if 	(`null=©x) 	(geo_compute;x)
		else 	if 	(0<#Òx) 	(ret_geo_client;x)
		else 				(geo_compute;x);
	s_varGeoFunc{var;fn,<cd};
	}

S_varTitle{var;x}:
	{
	(cx;var)ûvar;
	if (flagû()½x) xûvariable_name{cx;var};
	if (0=#Òx) xû,x;
	clsûS_cons{cx,var;`title;x};
	if (is_subclass_of{cls;`tableField `array}) adjust_width{cx;var;cls};
	if (flag) if (0¨widûg_varWid{cx,var}) S_shellTitle{g_parent{wid};x};
	}

S_indexed_func{var;r;x;clss;fns;aflag;nflag;sflag;mflag}:
	{
	(cx;var)ûvar;
	clsûclass_of_symbol{cx,var;0};
	if (¢1=½fns) fnsû<{fns};
	fnûif (0=#cls) (¢1+#fns)Ø,fns else (clssÉcls)Ø,fns;
	S_func{cx,var;r;x;fn;nflag;sflag;cls};
	if (mflag) if (is_subclass_of{cls;`matrix}) adjust_matrix_width{cx;var};
	if (aflag) adjust_width{cx;var;cls};
	cls
	}

S_func{u;r;x;func;nflag;sflag;cls}:
	{
	(cx;var)ûif (`sym=©u) u else c_c{g_data{u}};
	clsûif (0<#cls) cls else class_of_symbol{cx,var;0};
	sfû0Øinternal_set_of{cls;r};
	if (1=sflag) (sflag;x)ûinternal_out_required{cx,var;x};
	if (1=sflag) sflagû~default_out_required{cx,var};
	if (2=sflag) sflagû(`int=©x)^0=#Òx;
	if (3=sflag) sflagû(`sym=©x)^1¦#Òx;
	argûif (1=sflag) x else if (0<#fn Ý (fn;cd)û2Ùif (`func=©x) x else if (~(()½x)^nflag) (func;x)) fn,<cd;
	sf¡{u;arg};
	cls
	}

default_out_required{v}:G_respace{v}©G_literal{v}©~()½G_varBlank{v}

default_out_used{v}:case (©g_varOutFunc{v}) {`func;1;`null;¢1;0}

internal_out_required{v;x}:
	{
		if ((`char=©x)^1=#Òx) 		(1;x)
	else 	if ((`sym=©x)^0=#Òx)		(1;x)
	else	if ((`sym;`int)½©¡x)		(1;x)
	else 	if (1Å`int `floatÅ©x) 		(1;x)
	else 	if (`func¨©x)			(0;x)
	else	if (~(0#Ö_name{0#2Ùx})ÅIO) 	(0;x)
	else					(0;2Ù1Ùx) Ý v _set (`s.io;1Ø2Ùx)
	}

S_cons{var;r;x}:
	{
	(cx;var)ûvar;
	clsûclass_of_symbol{cx,var;0};
	(sf;df)ûinternal_set_of{cls;r};
	if (()½x) xû>df;
	if (~()½xûif (`sym=©x) Îx else x) sf¡{cx,var;x};
	cls
	}

eval_space{cx;var}:if (0=G_evaluate{cx,var}) (0;) else (1;cx%var)

matrix_spacing{cx;var}:
	{
	(fn;cd)ûout_function{cx,var};
	(gn;dd)û2Ùg_varTitleFunc{cx,var};
	flagû0<#gn;
	if (0=rc Ý (rc;val)ûeval_space{cx;var}) ûDATASPACE;
	zûif (flag) 0#¢1ÙÒapply{gn;(dd;;(;);;cx;var)} else if (0=#val) ¢1 else ¢1+#î#val;
	(iû#jûÉ1#Òval) do
		{
		dû(;kûi#j)#val;
		twûif (flag) 0#¢1ÙÒapply{gn;(dd;;(;k);;cx;var)} else Ó(1+k)ß26;
		zûz,if (~((©val)Å`float `int `char)^(cd½())^internal{fn}) twÓ#,apply{fn;(cd;0#1Ù,1Ùd;(0;k);;cx;var)}
		else if (WP=0) twÓDATASPACE
		else twÓ`int©0#0 1Îw_p{if ((WP=¢1)©WP¦#d) d else WPÙd}
		};
	`int©z
	}

S_varCw{var;x}:
	{
	(cx;var)ûvar;
	if (()½x) xûcompute_width{cx;var;class_of_symbol{cx,var;0}};
	if (¢1½x) xûg_varCw{cx,var}Ócompute_width{cx;var;class_of_symbol{cx,var;0}};
	s_varCw{cx,var;x};
	if (g_varEw{cx,var}¤0) s_varEw{cx,var;AUTOEDITSPACE#x,EDITSPACE};
	}

S_varEw{var;x}:			s_varEw{var;if (0½x) g_varCw{var} else EDITSPACE} Ý if (0=#x) xûAUTOEDITSPACE

adjust_width{cx;var;cls}:	if (0¤cwûg_varCw{cx,var}Ócompute_width{cx;var;cls}) S_varCw{cx,var;cw}
compute_width{cx;var;cls}:	if (0=#cls) ¢1 else if (0=#fnûspace_of_class{cls}) ¢1 else 1Ófn¡{cx;var}
adjust_matrix_width{cx;var}:	if (0¨widûg_varWid{cx,var}) if (¢1½G_matrixColSpaceFunc{wid}) S_matrixColSpaceFunc{wid;¢1}

slot_width{cx;var}:
	{
	(fn;cd)ûout_function{cx,var};
	if (0=rc Ý (rc;d)ûeval_space{cx;var}) ûDATASPACE;
	(syms;vals)û,¡d;
	zûDATASPACE;
	(iû#syms) do if (0=½valûiØvals) zûzÓ#,apply{fn;(cd;val;;i#syms;cx;var)};
	z
	}

scalar_width{cx;var}:
	{
	(fn;cd)ûout_function{cx,var};
	if (0=rc Ý (rc;d)ûeval_space{cx;var}) ûDATASPACE;
	typû©d;
	if (~(0<½d)^(typÅ`float `int)^(cd½())^internal{fn}) #,apply{fn;(cd;d;;;cx;var)}
	else if (WP=0) DATASPACE
	else `int©0#0 1Îw_p{d}
	}

title_width{cx;var}:
	{
	case (½titûg_varTitle{cx,var})
		{
		0;	1Ó0#¢1ÙÒtit;
		1;	1ÓÓ/Ø#¡tit
		}
	}

tableField_width{cx;var}:virtualObject_width{cx;var;title_width{cx;var}}
graphTrace_width{cx;var}:virtualObject_width{cx;var;0}

virtualObject_width{cx;var;tw}:
	{
	(fn;cd)ûout_function{cx,var};
	if (0=rc Ý (rc;d)ûeval_space{cx;var}) ûDATASPACE;
	typû©d;
	rdû#Òd;
	twÓif (`char=typ) #,apply{fn;(cd;if (rd=1) d else ,1Ùd;rdÒ<0;;cx;var)}
	else if (~(typÅ`float `int)^(cd½())^internal{fn}) #,apply{fn;(cd;0#1Ù,1Ùd;(#Òd)Ò<0;;cx;var)}
	else if (WP=0) DATASPACE
	else `int©0#0 1Îw_p{if ((WP=¢1)©WP¦#d) d else WPÙd}
	}

array_width{cx;var}:
	{
	(fn;cd)ûout_function{cx,var};
	if (0=rc Ý (rc;d)ûeval_space{cx;var}) ûDATASPACE;
	typû©d;
	rdû#Òd;
	twûtitle_width{cx;var};
	if (`char=typ) twÓ#,apply{fn;(cd;if (rd=1) d else ,1Ùd;rdÒ<0;;cx;var)}
	else if (~(typÅ`float `int)^(cd½())^internal{fn}) (if (rd<2) tw else 0)Ó#,apply{fn;(cd;0#1Ù,1Ùd;rdÒ<0;;cx;var)}
	else if (WP=0) (if (rd<2) tw else 0)ÓDATASPACE
	else if (rd<2) twÓ`int©0#0 1Îw_p{if ((WP=¢1)©WP¦#d) d else WPÙd}
	else `int©0#0 1Îw_p{if ((WP=¢1)©WP¦«/Òd) d else d[ÉWP|#d]}
	}

matrix_width{cx;var}:
	{
	(fn;cd)ûout_function{cx,var};
	if (0=rc Ý (rc;d)ûeval_space{cx;var}) ûDATASPACE;
	typû©d;
	if (`char=typ) #,apply{fn;(cd;,1Ùd;(0;0);;cx;var)}
	else if (~(typÅ`float `int `char)^(cd½())^internal{fn}) #,apply{fn;(cd;0#1Ù,1Ùd;(0;0);;cx;var)}
	else if (WP=0) {if (¢1<wûg_varCw{cx,var}) w else DATASPACE}
	else `int©0#0 1Îw_p{if ((WP=¢1)©WP¦«/Òd) d else d[ÉWP|#d]}
	}

ã ***	Parent access

ofParent{r;o}:
	{
	(cx;var)ûc_c{o};
	if (0=widûg_varWid{cx,var}) 		print_abort{cx;var;'unknown object'};
	if (0=pidûg_parent{wid}) 		print_abort{cx;var;'has no parent'};
	if ((cx;var)½(pcx;pvar)ûg_data{pid}) 	(pid;pcx;pvar)û(id;cx;var);
	zûget_attributes{pcx;pvar;pid;g_varClass{pcx,pvar};r;1};
	z
	}

parentHas{o;sfal}:
	{
	(cx;var)ûc_c{o};
	if (0=widûg_varWid{cx,var}) 		print_abort{cx;var;'unknown object'};
	if (0=pidûg_parent{wid}) 		print_abort{cx;var;'has no parent'};
	if ((cx;var)½(pcx;pvar)ûg_data{pid}) 	(pid;pcx;pvar)û(id;cx;var);
	(r;v)û_alsf{sfal};
	set_attributes{pcx;pvar;pid;g_varClass{pcx,pvar};r;v;1};
	pcxÖpvar
	}

ãã ***	defined attributes

ofClass{r;cls}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	iûCLASSESÉcls;
	rrûiØATTRIBUTES;
	ggûiØGETS;
	ssûiØSETS;
	bûrÅrr;
	rûb/r;
	iûrrÉr;
	gûi#gg;
	sûi#ss;
	,2Ù¡b\g,¡s
	}

classHas{cls;o}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	(r;v)û_alsf{o};
	if (0<#r)
		{
		iûCLASSESÉcls;
		rrûiØATTRIBUTES;
		ggûiØGETS;
		ssûiØSETS;
		ccûiØCONVERTER;
		eeûiØEDITABLE;
		wwûiØWIDGETABLE;
		igfûiØINTERNAL_GETS;
		isfûiØINTERNAL_SETS;
		dfsûiØDEFAULTS;
		aqfûiØDOMAIN_SYMS;
		atyûiØATTRIBUTE_TYPES;
		datûiØSYNTHESIZED;
		vû2Ù¡v;
		if (1ÅbûrÅrr)
			{
			vvûb/v;
			bvgû0=Ø#¡vgûØ0#¡vv;
			bvsû0=Ø#¡vsûØ1#¡vv;
			((bvg^~bvs)/vg)û<{G_no_op};
			((bvs^~bvg)/vs)û<{S_no_op};
			iiûrrÉb/r;
			(ii#gg)ûvg;
			(ii#ss)ûvs;
			(ii#ee)û1;		ã always editable
			(ii#ww)û0;		ã always non-widgetable
			(ii#cc)û0;		ã always no converter
			(ii#aty)û0;		ã always constant type
			(ii#dat)û1;		ã derived attr always 1
			(ii#igf)û<();
			(ii#isf)û<();
			(ii#dfs)û<();
			(ii#aqf)û<();
			};
		if (1Åbû~b)
			{
			vvûb/v;
			vvûb/v;
			bvgû0=Ø#¡vgûØ0#¡vv;
			bvsû0=Ø#¡vsûØ1#¡vv;
			((bvg^~bvs)/vg)û<{G_no_op};
			((bvs^~bvg)/vs)û<{S_no_op};
			rrûrr,b/r;
			ggûgg,vg;
			ssûss,vs;
			prbû+/b;
			eeûee,prbÒ1;
			wwûww,prbÒ0;
			ccûcc,prbÒ0;
			atyûaty,prbÒ0;
			datûdat,prbÒ1;
			igfûigf,prbÙ();
			isfûisf,prbÙ();
			dfsûdfs,prbÙ();
			aqfûaqf,prbÙ();
			};
		bû(0<Ø#¡gg)©0<Ø#¡ss;
		(iØs.ATTRIBUTES)ûb/rr;
		(iØs.GETS)ûb/gg;
		(iØs.SETS)ûb/ss;
		(iØs.DEFAULTS)ûb/dfs;
		(iØs.CONVERTER)ûb/cc;
		(iØs.EDITABLE)ûb/ee;
		(iØs.WIDGETABLE)ûb/ww;
		(iØs.ATTRIBUTE_TYPES)ûb/aty;
		(iØs.SYNTHESIZED)ûb/dat;
		(iØs.INTERNAL_GETS)ûb/igf;
		(iØs.INTERNAL_SETS)ûb/isf;
		(iØs.DOMAIN_SYMS)ûb/aqf;
		remove_class_attributes{cls;(~b)/rr};
		};

	(kkû#kû,CLASSESÉiØSUB) do inherit_attributes{,kk#k;,i;r};
	cls
	}

remove_class_attributes{cls;rr}:
	{
	if (0=#rr) û();
	iûCLASSESÉcls;
	if (0=#rrû(~rrÅiØATTRIBUTES)/rr) û();

	(dr;dv)ûiØCLASS_DEFAULTS;
	(iØs.CLASS_DEFAULTS)û(<~drÅrr)/¡(dr;dv);

	(dr;dv)ûiØCLASS_DEFAULTS_0;
	(iØs.CLASS_DEFAULTS_0)û(<~drÅrr)/¡(dr;dv);

	&¡{proper_flat_sub{cls};<rr};
	}

ãã ***	q_ functions

Q_color{}:		COLOR_NAMES
Q_font{}:		FONT_NAMES
Q_resize{}:		RESIZE
Q_bool{}:		0 1
Q_traceYaxis{}:		`y `Y
Q_traceXaxis{}:		`x `X
Q_justify{}:		`left `right `bottom `top `center `none
Q_reportFont{}:		REPORT_FONT_NAMES
Q_classes{}:		classes{}

ãã ***	Symbols

c_v{cx;var}:	if (0<#var) ÖcxÖvar
c_c{s}: 	if (2=#s) s else ,Ö_gsv{`cx}Ös
c_n{s}:		aÖb Ý (a;b)ûc_c{s}
q_n{s}:		if (0<#s) if (2=#Òs) s[;0]Ös[;1] else if (2=#s) (0#s)Ö1#s else `Ös
d_c{cx;sym}:	if (cx=0#sym) 1#sym else q_n{sym}

ãã ***  Fonts

font_names{}:
	{
	zûvtom{NEWLINE;unix_read{'xlsfonts'}};
	(-Ä/(÷@1' '=z)É@1Û0)Õ@1zû(z[;0]='-')/z
	}

report_font_names{}:
	{
	zûunix_read{'ls /usr/local/lib/transcript/*.afm'};
	zû_ssr{,z;'.afm';'    '};
	zûvtom{NEWLINE;z};
	(-Ä/(÷@1' '=z)É@1Û0)Õ@1z
	}

s.FONT_NAMES:font_names{}
s.REPORT_FONT_NAMES:report_font_names{}

ãã ***	Color conversion

color_information{f0;f1}:
	{
	kûsys.readmat{f0};
	if (()½k) kûsys.readmat{f1};
	zû13Õ@1 k;
	zûszÒz Ý ((z=TAB)/z)û' ' Ý zû,z Ý szûÒz;
	zû((z=' ')É@1Û0)÷@0 1 z;
	zûb/z Ý bû~©/@1 zÅ1ØALPHA_NUM;
	zûc/z Ý cûp½@1Û^\@1 p Ý pûz¨' ';
	zûd/z Ý dû~z[;É4]½@1 'gray';
	yûd/c/b/3!â,12Ù@1 k;
	(<çy)#¡(Âz;y)
	}

hc3{h}:		if (()½h) ¢1 ¢1 ¢1 else 16Â@1Û3 2Ò'0123456789ABCDEF'É`char©h-32«(h>96)^123>hû`int©1Õh
c3h{c3}:	if (¢1Åc3) () else '#',(,ô16 16Î`int©c3)#'0123456789ABCDEF'
cc3{c}:		if (()½c) ¢1 ¢1 ¢1 else if ((#COLOR_NAMES)=iûCOLOR_NAMESÉc) ¢1 ¢1 ¢1 else i#COLOR_NUMBERS
c3c{c3}:	if (¢1Åc3) () else if ((#COLOR_NUMBERS)=iûCOLOR_NUMBERSÉc3) () else i#COLOR_NAMES
hc{h}:		if (()½h) () else (tÉÄ/tû+/@1(COLOR_NUMBERS -@1 Ähc3{h})*2)#COLOR_NAMES
ch{c}:		if (()½c) () else c3h{cc3{c}}

h_c_exact{h}:	if ('#'¨1Ùh) Âh else if ((#COLOR_NUMBERS)=iûCOLOR_NUMBERSÉhc3{h}) h else i#COLOR_NAMES

shade{n;x}:	c3h@1{0Óa,Äa+@1+\(1Ón-1)/ô1!(b-a)ß1Ón-1} Ý bûcc3{1#x} Ý aûcc3{0#x}
closest{c3}:	hc{c3h{c3}}

ãã ***  Brian's forking cover

unix_exec{x}:if (0=#xû,if (0=½x) tokens{x} else x) É0 else sys.sfe{0Øx;(>c.ptr¡{x}),0}

unix_read{argv}:
	{
	zû'';
	if (0<#fdûunix_exec{argv})
		{
		bufû1024Ò'';
		while (0<rûsys.read{fd;buf;1024}) z[,]ûbuf[Ér];
		sys.close{fd};
		};
	z
	}

ãã ***	String utilities

paired{y;x}:r©¢1÷rû2|+\y=x
quoted{x}:paired{'"';x}©paired{'''';x}
tokens{x}:vtoe{' ';db{x}}

etom{x}:>(Ó/>#¡x)Ù¡x
vtom{y;x}:etom{vtoe{y;x}}
vtoe{y;x}:if (0<#x) 1Õ¡(Ú(~quoted{x})^x=y)Úxûy,x

dltb{x}:((÷©\÷x¨' ')^©\x¨' ')/x
deb{x}:(quoted{x}©(x¨' ')©x¨1÷x)/x
db{x}:dltb{deb{x}}

ãã ***	Polyadic function apply

apply{f;x}:
	{
	case (_valence{f} Ý if (¢1=½f) fû<{f})
		{
		0;	f¡{};
		1;	f¡{0Øx};
		2;	f¡{0Øx;1Øx};
		3;	f¡{0Øx;1Øx;2Øx};
		4;	f¡{0Øx;1Øx;2Øx;3Øx};
		5;	f¡{0Øx;1Øx;2Øx;3Øx;4Øx};
		6;	f¡{0Øx;1Øx;2Øx;3Øx;4Øx;5Øx};
		7;	f¡{0Øx;1Øx;2Øx;3Øx;4Øx;5Øx;6Øx};
		8;	f¡{0Øx;1Øx;2Øx;3Øx;4Øx;5Øx;6Øx;7Øx};
		9;	f¡{0Øx;1Øx;2Øx;3Øx;4Øx;5Øx;6Øx;7Øx;8Øx};
			Ù`valence
		}
	}

ãã ***	Boxed array formatting

execute{x}:
	{
		if 	(0=#xû,x)						û()
	else 	if 	(0=#zû(~quoted{x})/x)					zûâx
	else 	if 	(~©/(Ø1Ù¡1Õ¡(Úz=' ')Úzû' ',z)ÅØ0 1 2 5#ALPHA_NUM) 	zûâx
   	else 									Ù`domain;

	if (0¤½zûâx) z else Ù`domain
	}

box{x}:		boxArray{if (¢1=½x) <{x} else x;1}

boxArray{x;y}:
	{
	oneû1=tsxû«/sxûÒx;
	smpû~bxdû0<½x;
	if (rflagû1Å1<tsx) if (rflagû^/,x=fxû0#1Ù,x) xûfx;
	zûcase (typû©x)
		{
		`int;		boxIota{x;''};
		`float;		boxIota{x;'1.0«'};
		`sym;		boxSymVec{boxSym¡{,x}};
		`char;		'''',double_quote{,x},'''';
		`box;		if ('(())'½zû(one#'(<'),(1ÕØ';',¡&¡{,x;0}),(~one)/')') '()' else z;
		`func;		if (1=#,x) (y/'<{'),function_name{''Òx},y/'}' else '(',(1ÕØ';',¡&¡{,x;0}),')';
		`null;		'()'
		};
	if (rflag) ((1Õîsx),'Ò',bxd/'<'),z else (if (~smp^'É'Åz) if (1<#sx) (1Õîsx),'Ò' else if (((,1)½sx)^1=#sx) ','),z
	}

boxIota{x;y}:
	{
	if ((,0)½nûÒx) y,'0Ò0'
	else if (0Ån) y,'0'
	else if (0=#n) y,1Õîx
	else if (3>#vû,x) y,1Õîv
	else if (~x½i+(jûv[1]-iûv[0])«ÉnûÒx) y,1Õîv
	else y,(if (i=0) '' else (1Õîi),'+'),(if (j=1) '' else (1Õîj),'«'),'É',1Õîn
	}

boxSym{x}:	if (^/(zû`char©x)Å'.',Ø0 1 2 3#ALPHA_NUM) '`',z else 'Â''',z,''''

boxSymVec{x}:
	{
		if 	(1=#x) 			Øx
	else 	if 	(^/bû'`'=Ø,0Ø¡x) 	Øx
	else
		{
		bû~b;
		(br;c)û(<b)/¡((¢1Õb>1÷b),0;x);
		cû(<',('),¡c,¡')';
		if (1Åbr) (br/c)û(br/c),¡',';
		(b/x)ûc;
		zûØx;
		(','=1Ùz)Õz
		}
	}

function_name{x}:if (0=0Øzûdo _name{x}) Î1Øz else îx

pretty_print{x}:'(',(ØNEWLINE,¡(+/@1Û2!Ú1,¢1Õmask{x}^x=';')Úxû1Õ¢1Õx),NEWLINE,')'
mask{x}:	mask_parens{x}^mask_quotes{x}
mask_parens{x}:	~r©¢1÷rû0¨(+\x='(')++\¢1«x=')'
mask_quotes{x}:	~(r©¢1÷rû2|+\'"'=x)©r©¢1÷rû2|+\''''=x
double_quote{x}:(1+x='''')/x

ã ***	Warnings and errors

print_message{cx;var;x;pfx}:
	{
	if (`int=©cx) (cx;var)ûg_data{cx};
	msgûpfx,variable_print_name{cx;var},,x;
	if (0<#MSG) ((0#MSG)%1#MSG)ûmsg else Õ'ã ',,msg;
	}

print_alert{cx;var;x}:	Ý if (QUIET=0) print_message{cx;var;x;'   '}
print_error{cx;var;x}:	Ý if (ERROR=1 Ý if (QUIETÅ0 1) print_message{cx;var;x;'!  '}) abort{}
print_abort{cx;var;x}:	Ý abort{} Ý if (QUIETÅ0 1 2) print_message{cx;var;x;'!! '}
abort{}:		Ý if (ABORT=1 Ý beep{()}) Ù() else Ù'S error'

variable_print_name{cx;var}:
	{
	if (0=#var) 		û();
	if (`s`JUNK½cx,var) 	û();
	if (`int=©var) 		(cx;var)ûg_data{var};
	if (0=#cx) 		cxû`;
	variable_title{cx;var},': '
	}

ãã ***	Assorted utilities

sdipcv{cx}:	header{cx;'s;d;i;p;c;v'}
scv{cx}:	header{cx;'s;c;v'}

header{cx;hdr}:
	{
	zû();
	(iû#aû_nl{cx;`fns}) do if ((1++/';'=hdr)=_valence{fnû<{cx%i#a}}) if (hdr½(1+fmtÉ'{')Õ(fmtÉ'}')Ùfmtûîfn) zûz,i#a;
	z
	}

internal{f}:	`s½0#c_c{_name{f}}
unique{z}:	(zÉz)=É#z
matrify{x}:	(¢2Ù1 1,Òx)Òx
arrayify{x;y}:	((-y)Ù(yÒ1),Òx)Òx
lcm{x}:		1+(Ó/xÊ.|1+É«/xûunique{x}/x)É0
wrap{v;n}:	1ÕØNEWLINE,¡Ø¡(Ú1,1Õb¨¢1÷bû(+\(Ó(+/c)ßn)Òn)è+\cû>#¡v)Úv
wrap_n{x;y;w}:	z Ý (iû#x Ý zû()) do zûz,<_ssr{wrap{iØx;y};NEWLINE;NEWLINE,wÒ' '}

touches{a;b}:	topos{a;b;0}
overlaps{a;b}:	topos{a;b;1}

topos{a;b;f}:
	{
  	apûa[0 0 1 1]+0 1 0 1\a[2 3];
	bpûb[0 0 1 1]+0 1 0 1\b[2 3];
	mû«apÊ.-bp;
  	zû^/((0=t[0])©©/t[0]¨tû,m[0 1;0 1]),(0=t[0])©©/t[0]¨tû,m[2 3;2 3];
  	if (f) zûz^~©/ap=bp[1 0 3 2];
	z
	}

ãã ***	Safe indexing

index{i;v}:if (^/i<#v) i#v

ãã ***	Nested array of character vectors to indented character matrix

nested_to_indented{x}:
	{
	if (0=½x) xû<x;
	zûif (~1Åtû0<>½¡x) Ø(Ó/Ø1Õ¡Ò¡x)Ù@1¡xû(¢2Ù¡1,¡1,¡Ò¡x)Ò¡x
	else Ø(Ó/>1#¡Ò¡z)Ù@1¡zû(¢2Ù¡1,¡1,¡Ò¡z)Ò¡zû(èèt)#((~t)/x),' ',@1¡&¡{t/x};
	(¢2Ù1 1,Òz)Òz
	}

ãã ***  Go for it

Gf{x}:z Ý `Gf _ssv x Ý zû_gsv `Gf

ãã ***	Protected pick

pick{x;y}:
	{
	gûGf{1};
	(rc;z)ûdo xØy;
	Gf{g};
	if (rc=0) z
	}

ãã ***  Nested association-list to slot-filler (recursive)

rsf{o}:z Ý Gf{g} Ý zûrsf_recurse{o} Ý gûGf{1}
rsf_recurse{o}:if (0¨rc Ý (rc;z)ûdo _alsf{o}) o else (r;v) Ý if (1Åbû0<Ø½¡v Ý (r;v)ûz) (b/v)û&¡{b/v}

ãã ***	Nested slot-filler to association-list (recursive)

ral{o}:if (~_issf{o}) o else Ø(<¡0Øz),¡<@0Û1Øz Ý zû(0Øo;&¡1Øo)

ãã ***	Generate all paths of a nested slot-filler

rsf_paths{sf}:if (_issf{sf}) (Û¡0Øsf),if (1Åbû`null¨>©¡1Øsf)(<b/0Øsf),¡Ø&¡{b/1Øsf}

ãã ***	nested slotfiller to y-indented matrix

imt{y;x}:if (0=_issf{x}) 0 0Ò'' else >(Ó/>#¡z)Ù¡z Ý zûimt_recurse{y;x}

imt_recurse{y;x}:
	{
	symsûÎ¡0Øx;
	valsû(#0Øx)Ù();
	bû>_issf¡{1Øx};
	if (1Åb) (b/vals)ûy,¡¡&¡{y;b/1Øx};
	bû(~b)^`null¨>©¡1Øx;
	if (1Åb) (b/syms)û(b/syms),¡':',¡box¡{b/1Øx};
	Ø(<¡syms),¡vals
	}

ãã ***	y-indendented matrix to nested slotfiller - e.g. nsf{' ';mat}, nsf{`char©9;mat}

nsf{y;x}:nsf_recurse{y;(~^/@1 x=' ')/x}

nsf_recurse{y;x}:
	{
	if (0<#x)
		{
		vmû(Úy¨x[;0])Úx;
		namsû(~¡÷¡^\¡÷¡t=¡' ')/¡t Ý tû0#¡vm;
		valsû(#nams)Ò();
		bû>':'Å¡nams;
		bû(>#¡nams)>i Ý iû>namsÉ¡':';
		if (1Åb) (b/nams)û(b/i)Ù¡b/nams Ý (b/vals)ûâ¡(b/i+1)Õ¡b/nams;
		symsû>Â¡nams;
		if (1Åb Ý bû~b) (b/vals)û&¡{y;1Õ@1¡1Õ¡b/vm};
		(syms;vals)
		}
	}

ãã ***	Dag depths; i.e. dag_depth HERITAGE; returns (nodes;depths)

dag_depth{x}:
	{
	uûunique{,x}/,x;
	zû(u;Û¡(#u)Ò¢1);
	(iû#u) do zûdag_depth_{x;i#u;z};
	z
	}

dag_depth_{x;u;z}:
	{
	(uØz)ûif (¢1¨uØz) uØz
	else if (~1Åbûx[;1]=u) 0
	else 
		{
		kûb/x[;0];
		(iû#k) do zû&{x;i#k;z};
		1+Ó/>>((0Øz)Ék)#¡1#z
		};
	z
	}

ãã ***	Untab

untab{x;y}:
	{
  	delsû(¢1÷xÅTAB,NEWLINE)/É#x;
  	ldû((dels,#x)-0,dels)/0,dels;
  	nsû1+y|¢1+ld-É#x;
  	((tabsûx=TAB)/x)û' ';
 	(1+tabs«ns-1)/x
	}

ãã ***	Self access (simulates "slot" attribute of variables)

of_widget{r;wid}:
	{
	(s;v)û2Ùg_sflags{wid};
	if ((#s)>iûsÉr) iØv
	}

widget_has{wid;r;x}:
	{
	(s;v)û2Ùg_sflags{wid};
	if ((#s)>iûsÉr) (iØv)ûx else (s;v)û(s,r;v,<x);
	s_sflags{wid;(s;v)};
	}

ãã ***  Attribute properties

COLOR_ATTRIBUTES:color_attributes{CLASSES;ATTRIBUTES;DOMAIN_SYMS}
FONT_ATTRIBUTES:font_attributes{CLASSES;ATTRIBUTES;DOMAIN_SYMS}

color_attributes{cls;ats;syms}:
	{
	zû();
	cûØÂ¡(<'color'),¡1Õ¡î¡É#COLORS;
	(iû#COLORS) do z[,]û<(cls;(Ø¡syms½¡¡i#c)/¡ats);
	z
	}

font_attributes{cls;ats;syms}:(cls;(Ø¡syms½¡¡`font)/¡ats)

domainOf{cls;r}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	symsûatts_of_atts{cls;rû,r;DOMAIN_SYMS};
	zû();
	(iû#r) do zûz,<if (`sym¨©obûiØsyms) ob
	else case (_valence{funûobØDOMAINS})
		{
		0;	fun¡{};
		1;	fun¡{reference_widget{cls}}
		};
	z
	}

domainNameOf{cls;r}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	zûatts_of_atts{cls;rû,r;DOMAIN_SYMS};
	((0=Ø#¡z)/z)û<`unknown;
	Øz
	}

ofDomainName{cls;p}:	ofProperty{cls;p;DOMAIN_SYMS;0ØDOMAINS}

placeOf{cls;r}:		propertyOf{cls;r;WIDGETABLE;PLACES}
ofPlace{cls;p}:		ofProperty{cls;p;WIDGETABLE;PLACES}

typeOf{cls;r}:		propertyOf{cls;r;ATTRIBUTE_TYPES;TYPES}
ofType{cls;p}:		ofProperty{cls;p;ATTRIBUTE_TYPES;TYPES}

propertyOf{cls;r;aps;ps}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	atts_of_atts{cls;r;aps}#ps
	}

ofProperty{cls;prop;aps;ps}:
	{
	if (~clsÅCLASSES) print_abort{;;(,Îcls),' is not a class'};
	if (~propÅps) print_abort{;;(,Îprop),' ?'};
	rrûattributes{cls};
	ttûatts_of_atts{cls;rr;aps};
	if (0=½tt) (tt=psÉprop)/rr else Ø(ttÅ<prop)/rr
	}

places{}:		PLACES
types{}:		TYPES
domainNames{}:		0ØDOMAINS

descOfAttribute{r}:	b\(tÉ(bûrÅtû0ØATTRIBUTE_DESC)/r)#1ØATTRIBUTE_DESC

attributeHasDesc{r;x}:
	{
	bûrÅ0ØATTRIBUTE_DESC;
	if (1Åb) (i#1Øs.ATTRIBUTE_DESC)ûb/x Ý iû(0ØATTRIBUTE_DESC)Éb/r;
	if (0Åb) s.ATTRIBUTE_DESCûATTRIBUTE_DESC,¡(b/r;b/x);
	}

descOfClass{cls}:	b\(tÉ(bûclsÅtû0ØCLASS_DESC)/cls)#1ØCLASS_DESC

classHasDesc{cls;x}:
	{
	bûclsÅ0ØCLASS_DESC;
	if (1Åb) (i#1Øs.CLASS_DESC)ûb/x Ý iû(0ØCLASS_DESC)Éb/cls;
	if (0Åb) s.CLASS_DESCûCLASS_DESC,¡(b/cls;b/x);
	}

ãã ***  Where do attributes come from?

derivedFrom{cls;atts}:
	{
	attsû,atts;
	zû(#atts)Ù`;
	pûprimitiveTo{cls};
	bûattsÅp;
	(b/z)ûcls;
	iû0;
	bû~b;
	sûproper_superclasses{cls};
	while ((1Åb)^i<#s) iûi+1 Ý bû`=z Ý (b/z)û&{i#s;b/atts};
	z
	}

primitiveTo{cls}:
	{
	if ((#CLASSES)=iû''ÒCLASSESÉcls) print_abort{;;(,Îcls),' is not a class'};
	(att;syn)ûi#¡(ATTRIBUTES;SYNTHESIZED);
	(>syn)/>att
	}

ãã ***	State-script save and load

script{}:
	{
	obsû(ØG_script@0{obs})/obsûobjects{};
	if (0<#swtûstateOfSwitches{}) swtûswt,NEWLINE;
	if (0<#parûstateOfParameters{}) parûpar,NEWLINE;
	if (0<#cstûØstateOfClass¡{realClasses{}}) cstûcst,NEWLINE;
	if (0<#odfûstateOfObjects{obs}) odfûodf,NEWLINE;
	obsû(obs=Øpars)/obsû(0<Ø#¡parsûG_Parent¡{g_varWid@0{obs}})/obs;
	if (0<#stsûØG_state¡{obs}) stsûsts,NEWLINE;
	swt,par,cst,sts,odf
	}

save{file}:write{file;script{}}

write{file;text}:
	{
	if (2=#Òtext) textû,text,@1"\n";
  	fdûsys.open{file;`O_CREAT `O_TRUNC `O_RDWR;Ä8 8 8Â10 10 10Î666};
  	if (0>sys.write{fd;text;Òtext}) Ù'write failed';
  	sys.close{fd};
	}

load{file}:
	{
	rosûreference_objects{};
	oldû(~oldÅros)/oldûSYMBOLS;
	_load{file};
	newû(~newÅros)/newûSYMBOLS;
	addû(~newÅold)/new;
	rmvû(~oldÅnew)/old;
	(q_n{add};q_n{rmv})
	}

ãã ***	State-script construction

state{cx;var}:state_of_object{cx;var;g_varClass{cx,var};g_varWid{cx,var};}

state_of_object{cx;var;cls;id;r}:
	{
	pclsûclass_of_id{g_parent{id}};
	zflagûzero_parent{id};
	vflagû~clsÅrealClasses{};
	gflagû1Å`vgrid `hgridÅpcls;
	aflagû`positionedÅflat_super{pcls};
	pflagû(`windowÅpcls)©zflag©`pixeledÅflat_super{cls};

	rmû();
	if (~zflag) rmûrm,`yx;
	if (~pflag) rmûrm,`yxs;
	if (~aflag) rmûrm,`at;
	if (~gflag) rmûrm,`extent;

	rûif (rflagû()½r) editable_attributes{cls} else ,r;
	if (rflag) if (`extentÅrm) if (~©/`yxs`yxÅrm) if (^/`yxs`yxÅr) rmû`yx`yxs,(rm¨`extent)/rm;
	if (rflag) rû(~rÅrm)/r;

	wûget_attributes{cx;var;id;cls;`Ör;0};
	bû`sym=>©¡w;
	(s;w)û(<b)/¡(r;w);
	rû(~b)/r;

	vûget_attributes{cx;var;id;cls;r;0};

	if (0<#r) (r;v)ûfilter_defaults{cx;var;cls;r;v};
	if (0<#r) (r;v)û(<èÎr)#¡(r;v);
	(r,`Ös;v,w)
	}

stateOfParameters{}:	state_of_variables{PARAMETER_DEFAULTS}
stateOfSwitches{}:	state_of_variables{SWITCH_DEFAULTS}
stateOfObjects{obs}:	state_of_variables{filter_workspace{OBJECT_DEFAULTS;obs}}

filter_workspace{sf;obs}:
	{
		if (0=#obs) 			sf
	else 	if (~`WSÅ0Øsf) 			sf
	else	if (()½WS)			sf
	else 	if (~((0#WS)Ö1#WS)½0#obs) 	sf
	else 					(<`WS¨0Øsf)/¡sf
	}

state_of_variables{sf}:z Ý (iû#0Øsf Ý zû'') do if (~(valû`s%sw)½swvû(swûi#0Øsf)Øsf) zûz,NEWLINE,'s.',(Îsw),'û',box{val},';'

stateOfClass{cls}:
	{
	zû'';
	(r;v)ûget_class_defaults{cls};
	iûCLASSESÉcls;
	(rr;vv)ûiØCLASS_DEFAULTS_0;
	if (0<#rr) (r;v)û(Ø0Ø¡al;1Ø¡al) Ý alû(~alÅ(<¡rr),¡<¡vv)/al Ý alû(<¡r),¡<¡v;
	if (1Åbû`sym=>©¡dûiØDEFAULTS)
		{
		(s;w)û(<b)/¡(iØATTRIBUTES;d);
		(s;w)û(<~sÅr)/¡(s;w);
		if (0<#s) (r;v)û(r;v),¡(`Ös;w);
		};
	if (0<#r) zûz,NEWLINE,'`',(,Îcls),' s.Has ',pretty_print{box{Ø(<¡r),¡<¡v}},';';
	z
	}

state_has_rec{cx;var}:state_has{cx;var;1}

state_has{cx;var;rec}:
	{
	(cx;var)ûc_v{cx;var};
	if (0¨idûwidget{cx,var})
		{
		if (0<#clûclass_of_symbol{cx,var;1})
			{
			(r;v)ûstate_of_object{cx;var;cl;id;};
			if (clÅrealClasses{}) (r;v)û(`class,r;(<cl),v);
			(r;v)û(<`null¨Ø©¡v)/¡(r;v);
			if (0<#r) rvûØ(<¡r),¡<¡v;
			zûif (0<#r) <NEWLINE,'`',variable_title{cx;var},' .has ',pretty_print{box{rv}},';';
			if (rec) if (0<container_type{cl}) zû_flat¡{state_has_rec¡{cx;unique{val}/valû_flat{cx%var}}},z;
			Øz
			}
		}
	}

ãã *** Default filtering for state

filter_class_defaults{cx;var;cls;r;v}:
	{
	(rr;vv)ûget_class_defaults{cls};
	if (0=#rr) û(r;v);
	(rr;vv)û(<rrÅr)/¡(rr;vv);
	if (0=#rr) û(r;v);
	(ss;ww)û(<bûrÅrr)/¡(r;v);
	(r;v)û(<~b)/¡(r;v);
	(ss;ww)û(<rrÉss)#¡(ss;ww);
	bû~ww½@0vv;
	(r,b/ss;v,b/ww)
	}

filter_defaults{cx;var;cls;r;v}:
	{
	ridûreference_widget{cls};
	robûreference_object{cls};
	wsfûWS½cx,var;
	vûb\(bû((wsf^`shelltitle=r)©wsf^rÅ0ØPRINT_DEFAULTS)©~Øv½¡get_attributes{`s;rob;rid;cls;r;0})/v;
	titûvariable_name{cx;var};
	stitûshell_title{cx;var};
	cwûcompute_width{cx;var;cls};
	rrû`leader `head `pin `yx `title `shelltitle `space `exit `editspace `na `atsector;
	vvû(if (0<#WS) (0#WS)Ö1#WS;1;0;0 0;tit;stit;cw;1;1;na{cx;var};here{});
	(r;v)ûfilter_default_attributes{cx;var;r;v;cls;rr;vv};
	(r;v)ûfilter_default_extent{cx;var;r;v;cls};
	(r;v)ûfilter_default_colors{cx;var;r;v;cls};
	(r;v)ûfilter_default_font{cx;var;r;v;cls};
	(r;v)ûfilter_default_tablist{cx;var;r;v;cls};
	(r;v)ûfilter_default_verify{cx;var;r;v;cls};
	(r;v)ûfilter_default_colspace{cx;var;r;v;cls};
	(r;v)ûfilter_default_print{cx;var;r;v;cls};
	(r;v)ûfilter_default_iconic{cx;var;r;v;cls};
	(r;v)ûfilter_default_rows_cols{cx;var;r;v;cls};
	(r;v)ûfilter_default_at{cx;var;r;v;cls};
	(r;v)ûfilter_virtual_attributes{cx;var;r;v;cls};
	(r;v)ûfilter_inherited_attributes{cx;var;r;v;cls;`matrix;`font`labelfont};
	(r;v)ûfilter_inherited_attributes{cx;var;r;v;cls;`vector;`fg`scrollfg};
	(r;v)
	}

filter_default_extent{cx;var;r;v;cls}:
	{
	if ((#r)>iûrÉ`extent) if (0 0½2ÙkûiØv) (r;v)û(`yxs,b/r;(<2Õk),(bûi¨É#r)/v);
	(r;v)
	}

filter_default_colors{cx;var;r;v;cls}:
	{
	(rr;dd)û(''ÒCLASSESÉcls)Ø¡(ATTRIBUTES;DOMAIN_SYMS);
	(iû#COLORS) do (r;v)û(<~(rÅ(>dd½¡Â'color',1Õîi)/rr)^>v½¡i#COLORS)/¡(r;v);
	(r;v)
	}

filter_default_font{cx;var;r;v;cls}:
	{
	(rr;dd)û(''ÒCLASSESÉcls)Ø¡(ATTRIBUTES;DOMAIN_SYMS);
	(<~(rÅ(>dd½¡`font)/rr)^>v½¡<FONT)/¡(r;v)
	}

filter_default_at{cx;var;r;v;cls}:
	{
	if ((#r)=iûrÉ`at) 				û(r;v);
	widûg_varWid{cx,var};
	pidûg_parent{wid};
	(pcx;pvar)û2Ùg_data{pid};
	if (0=#pvar) 					û(r;v);
	dlsûg_varClass{pcx,pvar};
	if (0=at_type{dls}) 				û(r;v);
	if (dlsÅ`vpane `hpane)				û(r;v);
	pvalûpcx%pvar;
	if ((G_containerBuild{pid}©~G_containerPosition{pid})^(0=½pval)^1=#Òpval)
							û(r;v);
	(r;b\(bûi¨É#r)/v)
	}

filter_inherited_attributes{cx;var;r;v;cls;scls;iv}:
	{
	if (~is_subclass_of{cls;scls}) 	û(r;v);
	if ((#r)Åi Ý iûrÉiv) 		û(r;v);
	if (~v[i[0]]½v[i[1]]) 		û(r;v);
	(<r¨r[i[1]])/¡(r;v)
	}

filter_virtual_attributes{cx;var;r;v;cls}:
	{
	if (~is_subclass_of{cls;`vContained}) 				û(r;v);
	if (0=#raû(raÅr)/raû(iûCLASSESÉ`vContained)ØATTRIBUTES) 	û(r;v);
	vaû(rÉra)#v;
	(pcx;pvar)ûg_data{g_parent{pidûg_varWid{cx,var}}};
	pclsûg_varClass{pcx,pvar};
	pvaûget_attributes{pcx;pvar;pid;pcls;ra;0};
	if (~©/bûpva½@0 va) 						û(r;v);
	(<~rÅb/ra)/¡(r;v)	
	}

filter_default_print{cx;var;r;v;cls}:
	{
	if (WS½cx,var)
		{
		iûrÉ0ØPRINT_DEFAULTS;
		bû(#r)>i;
		(i;pd)û(<b)/¡(i;1ØPRINT_DEFAULTS);
		bû~Ø(i#v)½¡pd;
		cû(#r)Ò1;
		(i#c)ûb;
		(r;v)û(<c)/¡(r;v);
		};
	(r;v)
	}

filter_default_verify{cx;var;r;v;cls}:
	{
	if ((#r)>iûrÉ`verify) if (clsÅstolen_classes{}) (r;v)û(b/r;(bûi¨É#r)/v);
	(r;v)
	}

filter_default_colspace{cx;var;r;v;cls}:
	{
	if ((#r)>iûrÉ`colspace) if (matrix_spacing{cx;var}½,iØv) (i#v)û<¢1;
	(r;v)
	}

filter_default_attributes{cx;var;r;v;cls;rr;vv}:
	{
	(jû#rr) do if ((#r)>iûrÉj#rr) if ((,jØvv)½,iØv) (r;v)û(b/r;(bûi¨É#r)/v);
	(r;v)
	}

filter_default_tablist{cx;var;r;v;cls}:
	{
	if (~zero_parent{widûg_varWid{cx,var}}) (r;v)
	else if ((#r)=iûrÉ`tablist) (r;v)
	else if (~((,iØv)½,cxÖvar)©(,iØv)½,(èg_varWid@0{pi})#piûprimitives_in{wid}) (r;v)
	else if ((1<#iØv)^(,iØv)½natural_tab_order{wid}) (r;v) Ý (iØv)û`
	else (b/r;(bûi¨É#r)/v)
	}

filter_default_iconic{cx;var;r;v;cls}:
	{
	if ((#r)>iûrÉ`iconic) if ((WS½cx,var)©((,0)½,iØv)) (r;v)û(r;b\(bûi¨É#r)/v);
	(r;v)
	}

filter_default_rows_cols{cx;var;r;v;cl}:
	{
	if (is_subclass_of{cl;`vector})
		{
		if ((#r)>iûrÉ`rows) if (((drs<5)^rs½drsûfilter_rows{cx;var;cl})©5½rsûiØv) vûb\(bûi¨É#r)/v;
		if ((#r)>iûrÉ`cols) if (((dcs<2)^cs½dcsûfilter_cols{cx;var;cl})©2½csûiØv) vûb\(bûi¨É#r)/v;
		};
	(r;v)
	}

filter_rows{cx;var;cl}:
	{
	case (flat_super{cl})
		{
		`array `view;		#cx%var;
		`table;			if (0=#dûcx%var) 0 else #0Ø,d
		}
	}

filter_cols{cx;var;cl}:
	{
	case (flat_super{cl})
		{
		`array;		case (#Òdûcx%var)
					{
					0 1;	1;
					2;	1#Òd
					};
		`view;		1#Òcx%var;
		`table;		#cx%var		
		}
	}

ãã ***  Virtual creates

C_AXGraphTrace{par}:	g_varWid{`s.GRAPH_TRACE}
C_AXTableField{par}:	g_varWid{`s.TABLE_FIELD}
C_AXMenuPulldown{par}:	g_varWid{`s.MENU_PULLDOWN}
C_AXMenuSeparator{par}:	g_varWid{`s.MENU_SEPARATOR}
C_AXMenuToggle{par}:	g_varWid{`s.MENU_TOGGLE}
C_AXMenuButton{par}:	g_varWid{`s.MENU_BUTTON}

ãã ***	Initialization

initialize_array{v}:
	{
	zû(;;;É0;É0;É0;É0;;;;);
	if (0=sû#v) ûz;
	nûÄsßpû#z;
	mû0,+\(¢1+n)Òp;
	zû<Øm#v;
	zûz,<(mûm+1)#v;
	zûz,<(mûm+1)#v;
	zûz,<Ø(mûm+1)#v;
	zûz,<Ø(mûm+1)#v;
	zûz,<Ø(mûm+1)#v;	
	zûz,<Ø(mûm+1)#v;	
	zûz,<(mûm+1)#v;
	zûz,<(mûm+1)#v;
	zûz,<(mûm+1)#v;
	zûz,<(mûm+1)#v;
	z
	}

ãã ***	Workspace tree

wstree{sym}:
	{
	(cx;var)ûc_c{sym};
	cxâ(Îvar),':s.workspace_tree{`',(Îcx),';`',(Îvar),'} Ý s.WS Ý s.SYMBOLS';
	append_reference{cx;var;1;<{set_workspace_tree};};
	cxÖvar
	}

workspace_tree{c;v}:		if (0=#WS) (;) else if (0=zûg_varWid{WS}) c%v else G_followertree{g_parent{z}}
trigger_workspace_tree{}:	s.SYMBOLSûSYMBOLS

set_workspace_tree{s;d;i;p;c;v}:
	{
	if (0=idûg_varWid{¢1Ùp}) û();
	tidûg_parent{id};
	show_id{id};
	bRaise{tid};
	bRaise{g_parent{g_varWid{c,v}}};
	}

ãã ***  Graph color dependencies

LINEPIXELS:if (0=#LINECOLORS) É0 else color_to_pixel@0{LINECOLORS}
FILLPIXELS:if (0=#FILLCOLORS) É0 else color_to_pixel@0{FILLCOLORS}

ãã ***  Object-level Verification

G_verify{wid}:
	{
		if (1=VERIFY) 									1
	else 	if (clsÅstolen_classes{} Ý clsûg_varClass{cx,var} Ý (cx;var)ûg_data{wid}) 	1
	else 	if (()½zûreference_callback_list{cx;var;0}) 					0
	else 											(©/(0Øz)ÅVERIFY_FNS)
	}

S_verify{wid;z}:
	{
	(cx;var)ûg_data{wid};

		if (z½1)	prepend_reference{cx;var;0;<{preset_variable};}
	else 	if (z½0) 	remove_reference{cx;var;0;<{preset_variable}}
	else 			print_error{cx;var;'verify-setting not 1 or 0'}
	}

ãã ***	Programmer eval callback

G_eval{var}:eval_callback{cx;var;1} Ý (cx;var)ûvar
S_eval{var;x}:if (()½x Ý (cx;var)ûvar) remove_eval{cx;var;1} else append_eval{cx;var;1;x}

eval_callback{cx;var;typ}:if (~()½zûreference_callback_list{cx;var;typ}) if ((#b)>iûbÉ1 Ý bû`s¨0#ôÖ_name@0{0Øz}) iØ¡z

remove_eval{cx;var;typ}:if (~()½zûeval_callback{cx;var;typ}) remove_reference{cx;var;typ;0Øz}

append_eval{cx;var;typ;x}:
	{
	remove_eval{cx;var;typ};
	append_reference{cx;var;typ;0Øx;1Øx} Ý xû2Ùx;
	}

ãã ***	Reference callback list processing

reference_type{typ}:typØ((__gprcb;__sprcb;pre_reference_callback);(__grcb;__srcb;reference_callback))

append_reference{cx;var;typ;fun;cd}:
	{
	if (()½fun) û();
	(fn;k;scb)ûanalyze_reference{cx;var;typ;fun;cd};
	if (0=#k) kû,<fun,<cd else if (~funÅØ0Ø¡k) k[,]û<fun,<cd;
	scb¡{cxÖvar;fn,<k};
	}

prepend_reference{cx;var;typ;fun;cd}:
	{
	if (()½fun) û();
	(fn;k;scb)ûanalyze_reference{cx;var;typ;fun;cd};
	if (0=#k) kû,<fun,<cd else if (~funÅØ0Ø¡k) kû(<fun,<cd),k;
	scb¡{cxÖvar;fn,<k};
	}

analyze_reference{cx;var;typ;fun;cd}:
	{
	remove_reference{cx;var;typ;fun};
	(gcb;scb;cb)ûreference_type{typ};
	zûgcb¡{cxÖvar};
	if (`func¨©z) zû2Ùcb;
	z,scb
	}

remove_reference{cx;var;typ;fun}:
	{
	if (()½fun) û();
	(gcb;scb;cb)ûreference_type{typ};
	if (()½zûgcb¡{cxÖvar}) û();
	(fn;k)ûz;
	if (©/bûfun=_flat{0Ø¡k}) kû(~b)/k;
	zûif (0=#k) (;) else fn,<k;
	scb¡{cxÖvar;z};
	}

reference_callback_list{cx;var;typ}:if (~()½zû(0Øreference_type{typ})¡{cx,var}) (_flat{0Ø¡k};1Ø¡k) Ý kû1Øz

pre_reference_callback{s;d;i;p;c;v}:
	{
	(funs;clds)û(_flat{0Ø¡s};1Ø¡s);
	(funs;clds)û(<è`s¨0#ôÖ_name@0{funs})#¡(funs;clds);
	(kû#funs Ý zûd) do zûapply{kØfuns;(kØclds;z;i;p;c;v)};
	z
	}

reference_callback{s;d;i;p;c;v}:
	{
	(funs;clds)û(_flat{0Ø¡s};1Ø¡s);
	(funs;clds)û(<è`s¨0#ôÖ_name@0{funs})#¡(funs;clds);
	(kû#funs) do apply{kØfuns;(kØclds;d;i;p;c;v)};
	}

ãã ***	Reference callback append/remove covers

set_callback{cx;var;cls;v}:
	{
	(sfn;psfn)û(CLASSESÉcls)Ø¡(SET_FNS;PRESET_FNS);
	if ((VERIFY=1)^0=#psfn) psfnû<{preset_variable};
	prepend_reference{cx;var;0;psfn;};
	prepend_reference{cx;var;1;sfn;v};
	}

unset_callback{cx;var;cls}:
	{
	(sfn;psfn)û(CLASSESÉcls)Ø¡(SET_FNS;PRESET_FNS);
	remove_reference{cx;var;0;psfn};
	remove_reference{cx;var;1;sfn};
	}

set_electric_Has{sym;val}:
	{
	(cx;var)û,c_c{sym};
	_set{cx,var;(`s.attribute;val)};
	append_reference{cx;var;0;<{electric_Has_preset};};
	append_reference{cx;var;1;<{electric_Has};};
	}

unset_electric_Has{sym}:
	{
	(cx;var)û,c_c{sym};
	remove_reference{cx;var;0;<{electric_Has_preset}};
	remove_reference{cx;var;1;<{electric_Has}};
	_set{cx,var;(`s.attribute;)};
	}

unset_electric_has{x}:remove_reference{cx;var;1;<{electric_has}} Ý (cx;var)ûx

set_electric_has{x}:append_reference{cx;var;1;<{electric_has};} Ý (cx;var)ûx

set_verify{s;d;i;p;c;v}:if (d=1) set_unverified_objects{} else unset_unverified_objects{}

set_unverified_objects{}:
	{
	oû(~g_varClass@0{o}Åstolen_classes{})/o Ý oûobjects{};
	(iû#o) do prepend_reference{c;v;0;<{preset_variable};} Ý (c;v)ûÖi#o;
	}

unset_unverified_objects{}:
	{
	oû(~g_varClass@0{o}Åstolen_classes{})/o Ý oûobjects{};
	(iû#o) do remove_reference{c;v;0;<{preset_variable}} Ý (c;v)ûÖi#o;
	}

ãã ***	Electric has and Has reference callbacks

electric_Has_preset{s;d;i;p;c;v}:d Ý _set{c,v;(`s.attribute;if (`null¨_nc{c;v}) c%v)}

electric_Has{s;d;i;p;c;v}:(iû#k Ý kûSYMBOLS) do electric_propagate{cx;var;c;v;d} Ý (cx;var)ûi#k
	
electric_propagate{cx;var;c;v;d}:
	{
	clsûg_varClass{cx,var};
	(at;cf;ty)û(CLASSESÉcls)Ø¡(ATTRIBUTES;DEFAULTS;ATTRIBUTE_TYPES);
	if (~©/boolû(~atÅused{cx,var})^cfÅ<cÖv) û();
	(at;ty)û(<bool)/¡(at;ty);
	idûg_varWid{cx,var};
	ovû_get{c,v;`s.attribute};
	cvûget_attributes{cx;var;id;cls;at;0};
	if (1Åb Ý bûty=2) if (1Åbbû((b/cv)Å<ov)^`func¨>©¡b/cv) set_attributes{cx;var;id;cls;bb/b/at;(+/bb)Ù();0};
	if (1Åb Ý bû~b) if (1Åbbû((b/cv)Å<ov)©`null=>©¡b/cv) set_attributes{cx;var;id;cls;bb/b/at;(+/bb)Ò<d;0};
	}

electric_has{s;d;i;p;c;v}:
	{
	if (~(viûcÖv)Å0ØUSES) û();
	(obv;rsv)ûviØUSES;
	(iû#obmûÖobv Ý valûc%v) do set{ocx;ovar;g_varWid{ocx,ovar};g_varClass{ocx,ovar};,i#rsv;,<val;0} Ý (ocx;ovar)ûi#obm;
	}

set_toolkit_colors{s;d;i;p;c;v}:
	{
	kû,if (i½()) É#COLORS else Øi;
	dûcolors_to_pixels{(#k)Òd};
	widsûg_varWid@1{SYMBOLS};
	(jû#cfsûk#DEFAULT_COLOR_CHANGES) do (jjû#wids) do (jØcfs)¡{jj#wids;j#d};
	(jû#sfsûk#DEFAULT_COLOR_SETS) do (jØsfs)¡{SERVER;j#d};
	}

set_toolkit_font{s;d;i;p;c;v}:
	{
	wûg_varWid@1{SYMBOLS};
	fdûfont_to_id{d};
	(cû#w) do bDefaultFontChanged{c#w;fd};
	s_defaultFont{SERVER;fd};
	}

preset_toolkit_colors{s;d;i;p;c;v}:if (~d½()) d else i#DEFAULT_COLOR_VALUES
preset_toolkit_font{s;d;i;p;c;v}:if (~d½()) d else DEFAULT_FONT_VALUE

default_color_value{f}:pixel_to_color{f¡{SERVER}}

set_color_alias_callback{}:
	{
	vû`GREY `BLACK `RED `BLUE `GREEN `YELLOW;
	(iû#v) do
		{
		`sâ(Îi#v),':',(1Õîi),'#COLORS';
		append_reference{`s;i#v;1;<{set_color_alias};i};
		append_reference{`s;i#v;0;<{preset_color_alias};i};
		}
	}

preset_color_alias{s;d;i;p;c;v}:if (~d½()) d else s#DEFAULT_COLOR_VALUES
set_color_alias{s;d;i;p;c;v}:if (d¨s#COLORS) (s#s.COLORS)ûd

ãã ***	system callbacks		

set_quiet_callback{}:
	{
	append_reference{`s;`QUIET;1;<{set_quiet};};
	s.QUIETû0;
	}

set_connected_callback{}:
	{
	append_reference{`s;`DISPLAY;0;<{connect_to_server};};
	append_reference{`s;`CONNECTED;0;<{connected_event};};

	s.CONNECTEDû	(;);
	s.DISPLAYû	();

	if (()½DISPLAY)	Ù() Ý Õ'ã !!! DISPLAY not set -- S not initialized';
	}

ãã *** CDE WIndow Manager functions and dependencies

CDE:{if (0½SERVER) ¢1 else s.g_serverIsCDERunning{SERVER}}

currentws{}:{if (0½SERVER) "" else g_serverCurrentWorkspace{SERVER}}

wslist{}:{if (0½SERVER) () else g_serverWorkspaceNames{SERVER}}

setcurrentws{name}:{
	if (~`char½©name) ûprint_error{`s;`setcurrentws;"bad workspace name -- setting ignored"};
	if (0½SERVER) 0 else s_serverCurrentWorkspace{SERVER;name}
	}

ãã ***	Save yourself

restore_yourself{cx;var}:
	{
	if (0<#WM_SAVE_YOURSELF_FILE)
		{
		(vars;atts)ûWM_SAVE_YOURSELF_CTL;
		if ((#vars)>iûvarsÉcxÖvar) (cx,var) has (iØatts;iØ,WM_SAVE_YOURSELF_DAT);
		}
	}

save_yourself_file{s;d;i;p;c;v}:
	{
	s.WM_SAVE_YOURSELFû	if (d½()) 				Ý save_yourself_variables{()}
	else 			if (()½stûsave_yourself_state{d}) 	<{save_yourself_scv} Ý save_yourself_variables{()}
	else 								<{save_yourself_scv} Ý save_yourself_variables{st};
	}

save_yourself_state{d}:
	{
	gûGf{1};
	if (0¨rc Ý (rc;z)ûdo sys.imp{àd}) zû();
	Gf{g};
	z
	}

save_yourself_variables{x}:
	{
	(a;b)û2Ùx;
	s.WM_SAVE_YOURSELF_CTLû2Ùa;
	s.WM_SAVE_YOURSELF_DATûb;
	}

save_yourself_scv{s;c;v}:
	{
	(vars;atts)û2ÙWM_SAVE_YOURSELF_CTL;
	zû();
	(iû#vars) do z[,]û<(iØatts) of i#vars;
	s.WM_SAVE_YOURSELF_DATûz;
	WM_SAVE_YOURSELF_FILEàsys.exp{(WM_SAVE_YOURSELF_CTL;WM_SAVE_YOURSELF_DAT)};
	}

set_save_yourself_callback{}:
	{
	append_reference{`s;`WM_SAVE_YOURSELF;1;<{set_wm_save_yourself};};
	is_object{`s`WM_SAVE_YOURSELF;OBJECT_CLASS};
	s.WM_SAVE_YOURSELFûWM_SAVE_YOURSELF;
	if (0¨s_savewmWindow{g_parent{g_varWid{`s`WM_SAVE_YOURSELF}}}) print_abort{`s;`WM_SAVE_WINDOW;'cannot receive signal'};
	_scb{`s.WM_SAVE_YOURSELF_FILE;(save_yourself_file;)};
	_spcb{`s.WM_SAVE_YOURSELF_CTL;(save_yourself_ctl;)};
	}

save_yourself_ctl{s;d;i;p;c;v}:z Ý (0Øz)û_gsv{`cx}Ö0Øz Ý zû_alsf{d}

set_wm_save_yourself{s;d;i;p;c;v}:
	{
	if (¢1=½d) dû<{d};
	if ((;)½2Ùd) dû<{wm_save_yourself};
	S_cb{g_parent{g_varWid{c,v}};`saveyourself;2Ùd};
	}

wm_save_yourself{s;c;v}:print_alert{c;v;'signal detected - no action'}

ãã ***	System utilities

hasScheme{sym;sf}:
	{
	(c;v)ûc_c{sym};
	sfû_alsf{sf};
	varsû(cÖv),G_Descendents{widget{c,v}};
	clssûg_varClass@0{vars};
	uclssû((clssÉclss)=É#clss)/clss;
	attsû(uclssÉclss)#attributesOfClass¡{<,0Øsf;uclss};
	vars has@0 1 (Ø¡atts),@0(<@1>#¡>atts)/¡<,1Øsf;
	}

set_gray{s;d;i;p;c;v}:		s_busyTitleState{d}
set_clock{s;d;i;p;c;v}:		s_busyClockState{d}
set_busy{s;d;i;p;c;v}:		s_busyState{d}
set_quiet{s;d;i;p;c;v}:		bGraphDebug{0¨«d}
set_beep{s;d;i;p;c;v}:		s.BEEPû0 Ý beep{()}
set_menuDefaultMnemonic{s;d;i;p;c;v}: bsetMenuDefaultMnemonic{d}
set_doubleClickInterval{s;d;i;p;c;v}: bsetDoubleClickInterval{d}
set_backingstore{s;d;i;p;c;v}: bsetBackingStoreOption{d}

reset_data{s;d;i;p;c;v}:if (s©1=d) (jû#SYMBOLS) do s_data{g_varWid{cx,var};cx,var} Ý (cx;var)ûj#SYMBOLS

construct_tree{}:
	{
	s.SUPERûunique¡{t}/¡tû_flat¡{superClasses¡{CLASSES}};
	s.SUBûunique¡{t}/¡tû_flat¡{subClasses¡{CLASSES}};
	s.PROPER_SUBûproper_subclasses¡{CLASSES};
	}

inherit_attributes{i;j;r}:
	{
	riûiØATTRIBUTES;
	bû~riÅr;
	(iØs.ATTRIBUTES)û	b/ri;
	(iØs.GETS)û		b/iØGETS;
	(iØs.SETS)û		b/iØSETS;
	(iØs.CONVERTER)û	b/iØCONVERTER;
	(iØs.EDITABLE)û		b/iØEDITABLE;
	(iØs.WIDGETABLE)û	b/iØWIDGETABLE;
	(iØs.ATTRIBUTE_TYPES)û	b/iØATTRIBUTE_TYPES;
	(iØs.INTERNAL_GETS)û	b/iØINTERNAL_GETS;
	(iØs.INTERNAL_SETS)û	b/iØINTERNAL_SETS;
	(iØs.SYNTHESIZED)û	b/iØSYNTHESIZED;
	(iØs.DOMAIN_SYMS)û	b/iØDOMAIN_SYMS;
	(iØs.DEFAULTS)û		b/iØDEFAULTS;
	inherit_structure¡{i;j};
	}

flat_structure{}:
	{
	clsû(0=>#¡PROPER_SUB)/CLASSES;
	stkû();
	(iû#cls) do stkûrecurse_structure{i#cls;stk};	
	}

recurse_structure{cl;stk}:
	{
	stk[,]ûcl;
	iûCLASSESÉcl;
	pclûiØPROPER_SUPER;
	(jû#pcl) do
		{
		if (~pcl[j]Åstk) stkû&{pcl[j];stk};
		inherit_structure{i;CLASSESÉpcl[j]};
		};
	stk
	}

inherit_structure{i;k}:
	{
	if (0=#iØSET_FNS) 	if (0<#sfûkØSET_FNS)  	(iØs.SET_FNS)ûsf;
	if (0=#iØPRESET_FNS) 	if (0<#pfûkØPRESET_FNS) (iØs.PRESET_FNS)ûpf;
	if (0=#iØVERIFY_FNS) 	if (0<#vfûkØVERIFY_FNS) (iØs.VERIFY_FNS)ûvf;
	if (0=#iØSPACE_FNS) 	if (0<#spfûkØSPACE_FNS) (iØs.SPACE_FNS)ûspf;
	(iØs.NULL_DEFAULTS)ût,(~ndÅtûiØs.NULL_DEFAULTS)/ndûkØs.NULL_DEFAULTS;
	rjûkØATTRIBUTES;
	riûiØATTRIBUTES;
	if (1Åbû~rjÅri)
		{
		(iØs.ATTRIBUTES)û	(iØs.ATTRIBUTES),	b/rj;
		(iØs.GETS)û		(iØs.GETS),		b/kØGETS;
		(iØs.SETS)û		(iØs.SETS),		b/kØSETS;
		(iØs.CONVERTER)û	(iØs.CONVERTER),	b/kØCONVERTER;
		(iØs.EDITABLE)û		(iØs.EDITABLE),		b/kØEDITABLE;
		(iØs.WIDGETABLE)û	(iØs.WIDGETABLE),	b/kØWIDGETABLE;
		(iØs.ATTRIBUTE_TYPES)û	(iØs.ATTRIBUTE_TYPES),	b/kØATTRIBUTE_TYPES;
		(iØs.INTERNAL_GETS)û	(iØs.INTERNAL_GETS),	b/kØINTERNAL_GETS;
		(iØs.INTERNAL_SETS)û	(iØs.INTERNAL_SETS),	b/kØINTERNAL_SETS;
		(iØs.DOMAIN_SYMS)û	(iØs.DOMAIN_SYMS),	b/kØDOMAIN_SYMS;
		(iØs.DEFAULTS)û		(iØs.DEFAULTS),		b/kØDEFAULTS;
		(iØs.SYNTHESIZED)û	(iØs.SYNTHESIZED),	(+/b)Ò0;
		}
	}

ããã *** Documentation functions begin.

doc{file}:
	{
	write{file;
		docOfBindings{},
		docOfFunctions{},
		docOfSwitches{},
		docOfParameters{},
		docOfErrors{},
		docOfDomains{},
		docOfKey{},
		docOfClasses{},
		docOfAttributes{},
		docOfTypes{}
		}
	}

docOfBindings{}:
	{
	NEWLINE,	(40Ò'='),'  bindings  ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"default class bindings (show `a, a not bound):",
	NEWLINE,	"¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢",
	NEWLINE,
	NEWLINE,	"          if (type = `box)   `radio `check `slot `layout `array `scalar",
	NEWLINE,	"     else if (type = `func)  `button",
	NEWLINE,	"     else if (rank = 2)      `layout `array `scalar",
	NEWLINE,	"     else if (rank = 1)      `table `graph `layout `array `scalar",
	NEWLINE,	"     else                    `scalar",
	NEWLINE
	}

docOfFunctions{}:
	{
	NEWLINE,	(40Ò'='),' functions ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"    object = `cx.var or `cx`var; `var ý (current_context),`var",
	NEWLINE,	"    class  = primitive or derived S display class",
	NEWLINE,	"    att(s) = symbolic vector of attribute name(s)",
	NEWLINE,	"    sfal   = slotfiller or association-list",
	NEWLINE,	"    gs     = ((g_func;s_func); ... ;(g_func;s_func))",
	NEWLINE,	"    ags    = (`att ... `att;gs)",
	NEWLINE,
	NEWLINE,	"       `obj has (`att;val)           ... attribution",
	NEWLINE,	"       `obj has `.att `cx.var        ... electric attribution",
	NEWLINE,	"   `class s.Has (`att;val)           ... class defaulting",
	NEWLINE,	"   `class s.Has `.att `cx.var        ... electric class defaulting",
	NEWLINE,
	NEWLINE,	"in the . context:",
	NEWLINE,	"¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢",
	NEWLINE,	"objectûobject is class               ... bind object to class",
	NEWLINE,	"objectsûfree object                  ... unbind object, return objects freed",
	NEWLINE,
	NEWLINE,	"objectûobject has sfal               ... object has attributes in sfal",
	NEWLINE,	"valsû[sfal or atts] of object        ... values of attributes in 0Øsfal or atts",
	NEWLINE,
	NEWLINE,	"show object                          ... display object; bind to default if free",
	NEWLINE,	"hide object                          ... remove object from screen if shown",
	NEWLINE,
	NEWLINE,	"in the s. context:",
	NEWLINE,	"¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢",
	NEWLINE,	"objectsûobjects are classes          ... guided top-down multiple binding",
	NEWLINE,
	NEWLINE,	"toûfrom copy to                      ... copy S attributes to a set of variables",
	NEWLINE,	"var call event                       ... call the default callback for event on var",
	NEWLINE,
	NEWLINE,	"classûclass Has sfal                 ... attributes of class have variable types",
	NEWLINE,	"typesûatts Of class                  ... variable types of attributes of class",
	NEWLINE,
	NEWLINE,	"class classHas ags                   ... define or remove attributes from a class",
	NEWLINE,	"gsûatts ofClass class                ... g_/s_ functions of attributes of a class",
	NEWLINE,
	NEWLINE,	"object parentHas sfal                ... parent of object has attributes",
	NEWLINE,	"valsûatts ofParent object            ... retrieve value of attributes of parent of object",
	NEWLINE,
	NEWLINE,	"obsûreset{}                          ... free all objects",
	NEWLINE,	"(classes;atts)ûReset{}               ... reset all default attributes (slotfiller result)",
	NEWLINE,
	NEWLINE,	"(1/0)ûvar canBe class                ... can variable be bound to class?",
	NEWLINE,	"boolsûclass canHave atts             ... can class-instance have attributes?",
	NEWLINE,
	NEWLINE,	"attsûattributes class                ... attributes of class, including protected",
	NEWLINE,	"attsûproperties object               ... editable attributes of object",
	NEWLINE,	"valsûclass domainOf att              ... values in domain of att for class",
	NEWLINE,
	NEWLINE,	"attsûprimitiveTo class               ... attributes primitive to class",
	NEWLINE,	"classesûclass derivedFrom atts       ... classes attributes derived from for class",
	NEWLINE,
	NEWLINE,	"attsûvars attributesOf object        ... attributes which have values of variables",
	NEWLINE,	"attsûvars attributesOfClass class    ... attributes of class which use variables",
	NEWLINE,
	NEWLINE,	"charvecûscript{}                     ... charvec reconstructs current S environment",
	NEWLINE,	"(bound;free)ûload file               ... load file, return objects bound, free",
	NEWLINE,	"save file                            ... save script to file",
	NEWLINE,
	NEWLINE,	"objectsûboundTo class                ... objects bound to class",
	NEWLINE,
	NEWLINE,	"objectsûobjects{}                    ... objects bound",
	NEWLINE,	"objectsûshells{}                     ... shells among objects",
	NEWLINE,	"objectsûtoplevels{}                  ... toplevel shells among objects",
	NEWLINE,	"objectsûpopups{}                     ... popup shells among objects",
	NEWLINE,
	NEWLINE,	"classesûclasses{}                    ... classes",
	NEWLINE,	"classesûrealClasses{}                ... classes which can be directly instantiated",
	NEWLINE,	"classesûvirtualClasses{}             ... classes which cannot be directly instantiated",
	NEWLINE,	"classesûmetaClasses{}                ... classes which cannot be instantiated",
	NEWLINE,
	NEWLINE,	"nestedûsuperClasses class            ... nested array of superclasses of class",
	NEWLINE,	"nestedûsubClasses classes            ... nested array of subclasses of class",
	NEWLINE,
	NEWLINE,	"classesûvirtualContainers{}          ... virtual container classes",
	NEWLINE,	"classesûrealContainers{}             ... real container classes",
	NEWLINE,	"classesûcontainers{}                 ... container classes",
	NEWLINE,	"classesûprimitives{}                 ... non-container classes",
	NEWLINE,
	NEWLINE,	"objectûthis{}                        ... window which has focus",
	NEWLINE,	"objectsûwhich sfal                   ... which objects satisfy attributes-values sfal?",
	NEWLINE,
	NEWLINE,	"rows colsûdesktop{}                  ... geometry of OLVWM desktop",
	NEWLINE,	"row colûhere{}                       ... this sector of desktop",
	NEWLINE,	"objectûbeHere object                 ... ûý object has `atsector `here",
	NEWLINE,	"goThere{row,col}                     ... traverse to sector row,col",
	NEWLINE,	"natural{}                            ... every shell has `naturalsize",
	NEWLINE,
	NEWLINE,	"refresh{}                            ... for real object o, o has `refresh",
	NEWLINE,
	NEWLINE,	"rgbûhc3 hex                          ... hex ('#rrggbb') to rgb (n1,n2,n3)",
	NEWLINE,	"hexûc3h rgb                          ... rgb to hex",
	NEWLINE,	"rgbûcc3 clr                          ... color (`color_symbol) to rgb",
	NEWLINE,	"clrûc3c rgb                          ... rgb to color",
	NEWLINE,	"clrûhc hex                           ... hex to color",
	NEWLINE,	"hexûch clr                           ... color to hex",
	NEWLINE,	"clrsûby shade <from,to>              ... interpolate colors",
	NEWLINE,	"clrûclosest rgb                      ... rgb to closest named color",
	NEWLINE,
	NEWLINE,	"pix/clrûcolor clr/pix                ... interconvert color and pixel",
	NEWLINE,	"id/fontûfont font/id                 ... interconvert font and font-id",
	NEWLINE,	"pix/¢1ûisColor sharpton              ... allocate color or fail with ¢1",
	NEWLINE,	"freeColor pix                        ... free color",
	NEWLINE,
	NEWLINE,	"slotûrsf assoc                       ... nested association list to slotfiller",
	NEWLINE,	"assocûral slot                       ... nested slotfiller to association list",
	NEWLINE,	"matûdel imt slot                     ... nested slotfiller to indented matrix",
	NEWLINE,	"slotûdel nsf mat                     ... indented matrix to nested slotfiller",
	NEWLINE, 
	NEWLINE,	"objectûwstree symbol                 ... symbol is tree of objects",
	NEWLINE,
	NEWLINE,	"dûvScroll{s;d;i;p;c;v}               ... vertical scrollgroup preset callback",
	NEWLINE,	"dûhScroll{s;d;i;p;c;v}               ... horizontal scrollgroup preset callback",
	NEWLINE,
	NEWLINE,	"doc file                             ... produce this document",
	NEWLINE,
	NEWLINE,	"CLASS_TREE:                          ... tree of class hierarchy",
	NEWLINE,	"CLASS_DAG:                           ... dag of class hierarchy",
	NEWLINE
	}

docOfSwitches{}:
	{
	NEWLINE,	(40Ò'='),'  switches  ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"s.AUTOPOSITIONû    1                 ... if 1, simple layout vectors stack children vertically",
	NEWLINE,	"s.AUTOBUILDû       0                 ... if 1, simple layout vectors invoke autobuilder",
	NEWLINE,	"s.AUTOREPARENTû    1                 ... if 1, orphaned child is reparented to top-level",
	NEWLINE,	"s.AUTORESHOWû      1                 ... if 1, reparented child is shown if shown in parent",
	NEWLINE,	"s.AUTONEWSHOWû     0                 ... if 1, newly parented child is always shown",
	NEWLINE,	"s.AUTOEVALUATEû    1                 ... if 0, avoid evaluation via %",
	NEWLINE,	"s.AUTOEDITSPACEû   1                 ... if 1, editspace is infinite (EDITSPACE)",
	NEWLINE,	"s.AUTORESPACEû     0                 ... if 1, increase space in default `out if necessary",
	NEWLINE,	"s.AUTOSCRIPTû      1                 ... if 1, script{} records variable binding",
	NEWLINE,	"s.AUTOWSû          1                 ... if 1, s.WS is next window created when s.WS is ()",
	NEWLINE,	"s.AUTOPRINTABLEû   1                 ... if 1, default printability is 1",
	NEWLINE,	"s.AUTOEXECUTEû     1                 ... if 1, allow type-change on input, else use _scfi{}",
	NEWLINE,	"s.AUTOCOPYû        0                 ... if 1, copy on insert, else use na value",
	NEWLINE,	"s.AUTOLITERALû     0                 ... if 1, format/validate as a boxed type",
	NEWLINE,	"s.AUTOHASû         0                 ... if 1, report every attribute setting",
	NEWLINE,	"s.AUTOBLANKû       ()                ... if not (), na value interconverts to AUTOBLANK",
	NEWLINE,	"s.AUTODOCû         ''                ... Default `doc of object",
	NEWLINE
	}

docOfParameters{}:
	{
	NEWLINE,	(40Ò'='),' parameters ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"s.WPû             100                ... run format width routine on first WP numbers",
	NEWLINE,	"s.EDITSPACEû      256                ... size of infinite edit buffer",
	NEWLINE,	"s.DATASPACEû        9                ... default `space",
	NEWLINE,	"s.WSû              ()                ... all windows follow the workspace",
	NEWLINE,	"s.WSNAMEû        'A+'                ... default `shelltitle for s.WS",
	NEWLINE,	"s.SHELLû           ¢1                ... default shelltype (¢1 = popup, 0 = toplevel)",
	NEWLINE,	"s.GRAYû             1                ... if 1, gray title when busy",
	NEWLINE,	"s.CLOCKû            1                ... if 1, clock cursor when busy",
	NEWLINE,	"s.BUSYû             0                ... turn busy state on (1) and off (0)",
	NEWLINE,	"s.QUIETû            0                ... if 0, all messages; if 1, errors + aborts; if 2, aborts",
	NEWLINE,	"s.ABORTû            1                ... if 1, abort, else suspend",
	NEWLINE,	"s.ERRORû            0                ... if 1, abort or suspend on error",
	NEWLINE,	"s.MSGû             ()                ... error message variable",
	NEWLINE,	"s.BEEPû             0                ... emit type n sound",
	NEWLINE,        "s.EXITû            ()                ... if scalar integer, default `exit = _exit{EXIT}",
	NEWLINE,	"s.VERIFYû           0                ... if 1, verify all updates to bound variables",
	NEWLINE,	"s.DISCONNECTû       0                ... _exit{DISCONNECT} on server disconnect",
	NEWLINE,	"s.SCREEN:       ys,xs                ... pixel dimensions of screen",
	NEWLINE,        "s.MENUDEFAULTMNEMONICû0              ... use default underlining in menus",
	NEWLINE,        "s.DOUBLECLICKINTERVALû250            ... the interval between clicks for double click event",
	NEWLINE,        "s.BACKINGSTOREû     1                ... if 1, backing-store used for all widgets",
	NEWLINE,	"s.OFû               0                ... 1 (version 2) or 0 (Òof{x;y} = Òx)",
	NEWLINE,	"s.AREû(objects;classes)              ... guided top-down multiple binding",
	NEWLINE,
	NEWLINE,	"s.WM_SAVE_YOURSELFû()                ... foo{s;c;v} = save yourself callback",
	NEWLINE,	"s.WM_SAVE_YOURSELF_FILEû()           ... file in which to save state",
	NEWLINE,	"s.WM_SAVE_YOURSELF_CTLû()            ... slotfiller of (variables;attributes)",
	NEWLINE,	"s.WM_SAVE_YOURSELF_DATû()            ... values of attributes in WM_SAVE_YOURSELF_CTL",
	NEWLINE,
	NEWLINE,	"s.COLOR_NAMES:                       ... symbols of colors",
	NEWLINE,	"s.COLOR_NUMBERS:                     ... rgb values of colors",
	NEWLINE,	"s.FONT_NAMES:                        ... character matrix of fonts",
	NEWLINE,	"s.REPORT_FONT_NAMES:                 ... character matrix of report fonts",
	NEWLINE,
	NEWLINE,	"s.NAû                                ... default NA slotfiller for `insertabove, `insertbelow",
	NEWLINE,
	NEWLINE,	"s.LINECOLORSû                        ... default trace linecolors",
	NEWLINE,	"s.FILLCOLORSû                        ... default trace fillcolors",
	NEWLINE,	"s.LINESTYLESû                        ... default trace linestyles",
	NEWLINE,	"s.TRACESYMBOLSû                      ... default trace scatter symbols",
	NEWLINE,
	NEWLINE,	"s.DISPLAYû                           ... symbol of current display",
	NEWLINE,	"s.SERVER:                            ... server id of current display",
	NEWLINE,	"s.CONNECTEDû                         ... slotfiller of display-server connections",
	NEWLINE,
	NEWLINE,	"s.HERITAGE:                          ... dag of subclassing relations in S",
	NEWLINE,
	NEWLINE,	"s.IOû         `tio `dio `qio         ... contexts of `s.io-based in/out routines",
	NEWLINE,
	NEWLINE,	"s.COLORSû     `grey `black `pink `lightsteelblue3 `mediumaquamarine `yellow",
	NEWLINE,
	NEWLINE,	"s.GREY:        COLORS[0]",
	NEWLINE,	"s.BLACK:       COLORS[1]",
	NEWLINE,	"s.RED:         COLORS[2]",
	NEWLINE,	"s.GREEN:       COLORS[3]",
	NEWLINE,	"s.BLUE:        COLORS[4]",
	NEWLINE,	"s.YELLOW:      COLORS[5]",
	NEWLINE,
	NEWLINE,	"s.FONTû        'kaplgallant-19'",
	NEWLINE
	}

docOfTypes{}:
	{
	zûNEWLINE,(40Ò'='),'   types   ',(40Ò'='),NEWLINE;
	zûdocOfGlobalAttributes{COLOR_ATTRIBUTES;'COLORS';1;z};
	zûdocOfGlobalAttributes{,<FONT_ATTRIBUTES;'FONT';0;z};
	z,NEWLINE
	}

docOfGlobalAttributes{atts;str;flag;z}:
	{
	(iû#atts) do
		{
		(clss;bts)û>i#atts;
		if (1Åbû0<>#¡bts)
			{
			mûwrap_n{'`',¡¡Î¡¡b/bts;64;23};
			mû(¢15Ù¡Î¡b/clss),¡':',¡(<3Ò' '),¡m;
			tûNEWLINE,'   ',t,NEWLINE,'   ',(¢1+#tûstr,(if (flag) '[',(1Õîi),']'),':')Ò'¢';
			zûz,NEWLINE,t,ØNEWLINE,¡(<'    '),¡m;
			};
		};
	z
	}

docOfKey{}:
	{
	atsûØATTRIBUTES;
	atypsûØATTRIBUTE_TYPES;
	cnvrtûØCONVERTER;

	NEWLINE,	(40Ò'='),'  classes  ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"    (class) = metaclass",
	NEWLINE,	"    [class] = virtual class",
	NEWLINE,
	NEWLINE,	"      <attribute> = protected attribute",
	NEWLINE,	"      *           = persistent attribute",
	NEWLINE,	'      o           = "`attribute of `object" is defined',
	NEWLINE,	'      h           = "`object has `attribute" is defined',
	NEWLINE,	'      Á           = ambivalent "of":  valû(`attribute;parm) of `object',
	NEWLINE,	'      É           = if (), inherit value from parent (e.g. `bg) or self (e.g. `scrollbg)',
	NEWLINE,
	NEWLINE,	'      Å [...]     = domain of attribute',
	NEWLINE,	'      () ý ...    = null converted to ...',
	NEWLINE,
	NEWLINE,	"    real classes:",
	NEWLINE,
	NEWLINE,	(1ÕØNEWLINE,¡<@1 Û 75!(75«Ó(#t)ß75)ÙtûØ¢15Ù¡Î¡classes{}),
	NEWLINE,
	NEWLINE,	(90Ò'.'),
	NEWLINE,
	NEWLINE,	"    foo{s;c;v} = event callback:",
	NEWLINE,
	NEWLINE,	"      s = static data, i.e. `object has (`event;(foo;s))",
	NEWLINE,	"      c = context symbol",
	NEWLINE,	"      v = variable symbol",
	NEWLINE,
	NEWLINE,	(1ÕØNEWLINE,¡<@1 Û 75!(75«Ó(#t)ß75)ÙtûØ¢15Ù¡Î¡sym_sort{unique{t}/tû((3¨cnvrt)^atyps=1)/ats}),
	NEWLINE,
	NEWLINE,	(90Ò'.'),
	NEWLINE,
	NEWLINE,	"    foo{s;c;v} = event callback, boolean default switch:",
	NEWLINE,
	NEWLINE,	"      `object has (<event>;1) = turn on default callback",
	NEWLINE,	"      `object has (<event>;0) = turn off default callback",
	NEWLINE,
	NEWLINE,	(1ÕØNEWLINE,¡<@1 Û 75!(75«Ó(#t)ß75)ÙtûØ¢15Ù¡Î¡sym_sort{unique{t}/tû((3=cnvrt)^atyps=1)/ats}),
	NEWLINE,
	NEWLINE,	(90Ò'.'),
	NEWLINE,
	NEWLINE,	"    {z}ûfoo{s;d;i;p;c;v} = variable callback:",
	NEWLINE,
	NEWLINE,	"      s,c,v = same as event callback",
	NEWLINE,	"      d ½ i#pØc%v",
	NEWLINE,
	NEWLINE,	(1ÕØNEWLINE,¡<@1 Û 75!(75«Ó(#t)ß75)ÙtûØ¢15Ù¡Î¡sym_sort{unique{t}/tû(atyps=2)/ats}),
	NEWLINE,
	NEWLINE,	(90Ò'.'),
	NEWLINE
	}

docOfDomains{}:
	{
	zû'';
	zûz,NEWLINE,(40Ò'='),'  domains  ',(40Ò'=');
	zûz,NEWLINE;
	(iû#syms Ý symsû(~symsÅ`font `color `reportfont,ØÂ¡(<Î`color),¡1Õ¡î¡É#COLORS)/syms Ý symsû0ØDOMAINS) do
		{
		descû0ØdomainOf{j#CLASSES;((jØk)É1)#jØATTRIBUTES} Ý jû(>©/¡kûDOMAIN_SYMSÅ¡<<i#syms)É1;
		descûif (`sym=©desc) _ssr{wrap{'`',¡Î¡desc;55};NEWLINE;NEWLINE,32Ò' '} else box{desc};
		zûz,NEWLINE,(¢25ÙÎi#syms),' Å     ',desc
		};
	zûz,NEWLINE,(¢25Ù'color'),' Å     ','[color symbols]';
	zûz,NEWLINE,(¢25Ù'font'),' Å     ','[font matrix]';
	zûz,NEWLINE,(¢25Ù'reportfont'),' Å     ','[reportfont matrix]';
	zûz,NEWLINE;
	z
	}

docOfAttributes{}:
	{
	clssûclasses{};
	cidxûCLASSESÉclss;
	okû0¤¡cidx#EDITABLE;
	nattsûok/¡cidx#ATTRIBUTES;
	attsûunique{atts}/attsûØnatts;
	matrûô>(<atts)Å¡natts;
	boolû(2«1ÕÒmatr)Ò1 0;
	matrûbool\@1 matr;
	partûÚ ~matr½@1 Û ¢1÷matr;
	matrû¢1ÕØ(partÚmatr),¡2;
	matrûmatr#' +.';
	attcû¢1ÕØ(partÚÎatts),¡'.';
	zûattc,@1' ',@1 '|',@1 ' ',@1 matr;
	clscû'|',@1 ' ',@1 bool\@1 ôÎclss;
	zû((-1ÕÒz)Ù@1 clsc),' ',z;
	zzûz[1];
	kû2+zzÉ'|';
	kkûÓ((#zz)-k)ß10;
	zû(k+kk«10)Ù@1 z;
	expû(kÒ1),ØkkÒ<12Ù10Ò1;
	zûexp\@1 z;
	cmpû~exp;
	z[;cmp/É#cmp]û((#z),+/cmp)Ò'| ';
	z[#clsc;]û'-';
	zû'=',z,'-';
	zûNEWLINE,ØNEWLINE,¡<@1 z;
	_ssr{z;'.| ';' | '},NEWLINE
	}

docOfClasses{}:		1ÕØNEWLINE,¡docOfClass¡{CLASSES}

doc_box{x}:		if (()½x) '' else if (1=#x) '`',,Îx else box{x}

docOfErrors{}:
	{
	NEWLINE,	(40Ò'='),'  errors  ',(40Ò'='),
	NEWLINE,
	NEWLINE,	"	There are three severity levels of messaging in S:",
	NEWLINE,
	NEWLINE,	"		alerts - ",
	NEWLINE,	"		errors - !",
	NEWLINE,	"		aborts - !!",
	NEWLINE,
	NEWLINE,	"	There is one global which controls noise:",
	NEWLINE,
	NEWLINE,	"		s.QUIETû0	echo alerts + errors + aborts (default)",
	NEWLINE,	"		s.QUIETû1	echo only errors + aborts",
	NEWLINE,	"		s.QUIETû2	echo only aborts",
	NEWLINE,
	NEWLINE,	"	To quiet everything:",
	NEWLINE,
	NEWLINE,	"		s.QUIETû¢1",
	NEWLINE,
	NEWLINE,	"	There are two flags which control behavior on errors:",
	NEWLINE,
	NEWLINE,	"		s.ABORTû1	Ù() on aborts (default)",
	NEWLINE,	"		s.ABORTû0	ÙÂ'S error'",
	NEWLINE,
	NEWLINE,	"		s.ERRORû0	print error and proceed (default)",
	NEWLINE,	"		s.ERRORû1	abort on error (follow s.ABORT)",
	NEWLINE,
	NEWLINE,	"	There is a variable which controls target of message:",
	NEWLINE,	
	NEWLINE,	"		s.MSGû()	Õmsg",
	NEWLINE,	"		s.MSGû`cx `var	(cx%var)ûmsg",
	NEWLINE
	}

docOfClass{cls}:
	{
	iûCLASSESÉcls;
	psupûiØPROPER_SUPER;		ã proper superclasses of cls
	psubûiØPROPER_SUB;		ã proper subclasses of cls
	contûiØCONTAINER;		ã primitive (0), container (1), virtual container (2)
	cntsûiØCONTAINS;		ã class of pseudochild
	crfnûiØCLASS_FNS;		ã create function
	attyûiØAT_TYPE;			ã 0 or 1
	consûiØCONSTRAINTS;		ã resize constraints
	knowûiØKNOWABLE;		ã knowability flag
	ontoûiØONTOLOGY;		ã first-class (1) or pseudo (0)

	(l;r)ûontoØ(('(';')');('';'');('[';']'));
	zû'';
			zûz,NEWLINE,	'class:           ',l,(,Îcls),r;
	if (0<#tû0ØdescOfClass{cls})
			zûz,NEWLINE,	'description:     ',,t;
	if (0<onto)	zûz,NEWLINE,	'type:            ',,contØ('primitive';'container';'virtual container');
	if (0<#cnts)	zûz,NEWLINE,	'virtual child:   ',doc_box{cnts};
	if (2=onto)	zûz,NEWLINE,	'virtual parent:  ',doc_box{contained_by{cls}};

	if (0<#psup) 	zûz,NEWLINE,	'superclasses:    ',doc_box{psup};
	if (0<#psub) 	zûz,NEWLINE,	'subclasses:      ',doc_box{psub};

	if (0<#cons)	zûz,NEWLINE,	'default resize:  ',doc_box{cons};

	attsûiØATTRIBUTES;
	sfnsûiØSETS;
	gfnsûiØGETS;
	editûiØEDITABLE;
	dflsûiØDEFAULTS;
	cnvaûiØCONVERTER;
	mcûÓ/>#¡CONVERTER_DESC;

	(atts;sfns;gfns;edit;cnva;dfls)û(<iØSYNTHESIZED)/¡(atts;sfns;gfns;edit;cnva;dfls);
	if (0=#atts) zzû''
	else
		{
		(atts;sfns;gfns;edit;cnva;dfls)û(<èÎatts)#¡(atts;sfns;gfns;edit;cnva;dfls);
		descsûdescOfAttribute{atts};
		dmnsûdomainNameOf{cls;atts};
		zzûNEWLINE;
		waû1#ÒÎatts;
		(jû#atts) do
			{
			dmnûif (`unknown=dmnûj#dmns) '' else 'Å [',(Îdmn),']; ';
			iotûif ((`null=©jØdfls)^(j#cnva)Å1 2) ' É' else '  ';
			cnvûif (()½tû(j#cnva)ØCONVERTER_DESC) '' else t,'; ';
			if (0=#descûjØdescs) descû'';
			starû2Ù(`variable=placeOf{cls;j#atts})Ø(' ';'*');
			(lp;rp)û(¢1=j#edit)Ø(('';'');('<';'>'));
			sfgfû((sigû«#jØgfns)#' o'),':',(«#jØsfns)#' h';
			ambiûif (sig) (1<_valence{jØgfns})#' Á' else ' ';
			zzûzz,NEWLINE,'   ',((25Ó1+wa+1+2«#lp)Ùstar,lp,(,Îj#atts),rp),' ',sfgf,' ',ambi,' ',iot,' ',' ... ',dmn,cnv,desc;
			};
		};
	z,zz
	}

ããã *** Documentation functions end.

add_connection{z;s}:
	{
	remove_reference{`s;`CONNECTED;0;<{connected_event}};
	s.CONNECTEDûCONNECTED,¡(z;<s);
	append_reference{`s;`CONNECTED;1;<{connected_event};};
	}

connect_to_server{s;d;i;p;c;v}:
	{
	if (~()½d) Ý print_abort{;;'Multiple display support not yet implemented'}
	else
		{
		if (~()½zûsys.readenv{'DISPLAY'})
			{
			sûc_XServer{z};
			zûÂz;
			add_connection{z;s};
			s_exitFunc{s;(disconnect_from_server;z)};
			z
			}
		}
	}

disconnect_from_server{s}:(sØs.CONNECTED)û0

connected_event{s;d;i;p;c;v}:if ((`sym=©p)^d½0) _exit{DISCONNECT} Ý print_alert{`s;p;'disconnected'} else d

reference_data{}:(iû#rûreference_objects{}) do _set{r[i];(`s.reference_data;r[i;0]%r[i;1])}

install_class_defaults{clss;atts;vals}:
	{
	nû>#¡NULL_DEFAULTS;
	clss[,]ûn/CLASSES;
	atts[,]ûØNULL_DEFAULTS;
	vals[,]û(+/n)Ù();
	uclsûunique{clss}/clss;
	(iû#ucls) do
		{
		sclsû(i#ucls),_flat{subClasses{i#ucls}};
		jûCLASSESÉscls;
		(uatts;uvals)û(<clss=i#ucls)/¡(atts;vals);
		(j#s.CLASS_DEFAULTS)û(j#CLASS_DEFAULTS),¡¡<(uatts;uvals);
		}
	}


initialize_globals{}: {
	s.OBJECT_CLASSû `reference;			ã class-name of objects in the reference loop
	s.REPORT_CLASSû `report;			ã class-name of report objects, which are peculiar
	s.REPORT_CLASSESû s.REPORT_CLASS, `reportparagraph `reportcolumn `reportrule;  ã reporting-related classes
	s.NON_WIDGETSû s.OBJECT_CLASS, s.REPORT_CLASSES;	ã non-widget object classes
	set_quiet_callback{};			ã place reference callback on s.QUIET

	s.OFû		0;			ã version 2 compatibility switch
	s.AREû		(;);			ã default classes (s.are{}, s.class_of_symbol{})
	s.BINDINGû	0;			ã semi-global (ugh)
	s.ABORTû	1;			ã Ù() from !! errors or suspend
	s.ERRORû	0;			ã continue past ! errors (warnings) or suspend
	s.EXITû		();			ã sys.exit{EXIT} in quit callback or just free window			
	s.MSGû		();			ã S messages to object = MSG or Õ
	s.WSû		();			ã all windows follow s.WS, if defined
	s.NEWLINEû	`char©10;
	s.TABû		`char©9;

	s.DISCONNECTû	0;

	`sâ'SERVER:if (()½DISPLAY) 0 else DISPLAYØCONNECTED';
	set_connected_callback{};

	`sâ'SCREEN:if (()½DISPLAY) ¢1 ¢1 else g_screenHeight{SERVER},g_screenWidth{SERVER}';

	s.RESIZEû'lrtbwhWH';
	s.ALPHA_NUMû('abcdefghijklmnopqrstuvwxyz';'ABCDEFGHIJKLMNOPQRSTUVWXYZ';'_';'0123456789';'¢';'$');

	s.TYPESû`constant `scv `sdipcv;
	s.PLACESû`variable `widget `shell `toplevel_shell `popup_shell;

	s.DEFAULT_COLOR_SETSû(s_defaultBg;s_defaultFg;s_defaultIdxColor;s_defaultRowColor;s_defaultMatrixColor;s_defaultHlColor);
	s.DEFAULT_COLOR_GETSû(g_defaultBg;g_defaultFg;g_defaultIdxColor;g_defaultRowColor;g_defaultMatrixColor;g_defaultHlColor);

	s.DEFAULT_COLOR_CHANGESû(bDefaultBgColorChanged;bDefaultFgColorChanged;bDefaultIdxColorChanged;bDefaultRowColorChanged;bDefaultMatrixColorChanged;bDefaultHlColorChanged);

	`sâ'DEFAULT_COLOR_VALUES:default_color_value@0{DEFAULT_COLOR_GETS}';
	`sâ'DEFAULT_FONT_VALUE:id_to_font{g_defaultFont{SERVER}}';

	`sâ'COLORS:DEFAULT_COLOR_VALUES';
	`sâ'FONT:DEFAULT_FONT_VALUE';

	`sâ'COLOR_SHARPTONS:ch@0{2ÙCOLORS}';

	`sâ'DEFAULT_COLOR:bDefaultPixelValue{}';
	`sâ'DEFAULT_FONT:bDefaultFontValue{}';

	s.COLOR_FILEû'/usr/local/X11/lib/rgb.txt';
	s.COLOR_FILE1û'/usr/local/X11R5/lib/rgb.txt';
	
	`sâ'COLOR_INFORMATION:color_information{COLOR_FILE;COLOR_FILE1}';
	`sâ'COLOR_NAMES:0ØCOLOR_INFORMATION';
	`sâ'COLOR_NUMBERS:1ØCOLOR_INFORMATION';

	append_reference{`s;`COLORS;1;<{set_toolkit_colors};};
	append_reference{`s;`FONT;1;<{set_toolkit_font};};
	append_reference{`s;`COLORS;0;<{preset_toolkit_colors};};
	append_reference{`s;`FONT;0;<{preset_toolkit_font};};

	set_color_alias_callback{};

	`sâ'CLASS_DAG:heritage{CLASSES;PROPER_SUB}';
	`sâ'CLASS_TREE:classTree{}';

 	s.DOMAINSû_alsf{
		(
		`boolean;		Q_bool;
		`printmode;		q_printMode;
		`font;			Q_font;
		`color;			Q_color;
		`color0;		Q_color;
		`color1;		Q_color;
		`color2;		Q_color;
		`color3;		Q_color;
		`color4;		Q_color;
		`color5;		Q_color;
		`resize;		Q_resize;
		`justify;		Q_justify;
		`style;			q_traceStyle;
		`linestyle;		q_traceLineStyle;
		`shadowstyle;		q_shadowStyle;
		`symbol;		q_traceSymbol;
		`legendstyle;		q_graphLegendStyle;
		`legendposition;	q_graphLegendPosition;
		`tickstyle;		q_graphTickStyle;
		`axis;			q_graphAxis;
		`out;			q_outputFormats;
		`ytitlestyle;		q_graphYtitleStyle;
		`grid;			q_graphGrid;
		`gridstyle;		q_graphGridStyle;
		`zero;			q_graphZero;
		`zerostyle;		q_graphZeroStyle;
		`yaxis;			Q_traceYaxis;
		`xaxis;			Q_traceXaxis;
		`rule;			q_graphRule;
		`movelimit;		q_traceConstraint;
		`pageorientation;	q_reportPageOrientation;
		`pagesize;		q_reportPageSize;
		`reportoutputmode;	q_reportOutputMode;
		`reportdisclaimerstyle;	q_reportDisclaimerStyle;
		`reportstyle;		q_reportStyle;
		`reportoccurrence;	q_reportOccurrence;
		`reportcompmode;	q_reportCompMode;
		`graphmode;		q_graphMode;
		`graphymode;		q_graphYmode;
		`reportfont;		Q_reportFont;
		`reportstyle;		q_reportStyle;
		`class;			Q_classes
		)
		};

}

initialize_def{}:{
	(
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`action;	
	`super;		`slotfiller `focused `boxed `sized;
	`contains;	;	
	`create;	c_AXBtnBox;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`ACTION;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`hl;			g_actionHlColor;	s_actionHlColor;	17;1;1;0;;;	`color5;;
		`hlthickness;		g_actionHlThickness;	S_actionHlThickness;	0;1;1;0;;;	;;
		`buttonshadowthickness;	g_actionButtonShadowThickness;S_actionButtonShadowThickness;0;1;1;0;;;	;;

		`justify;	g_actionBoxOptions; 	s_actionBoxOptions;	19;1;1;0;;;	`justify;;
		ã reroute the `focus attribute to be the same as `selected attribute to see which child has focus
		`focus;		G_boxSelected;		S_boxSelected;		0;0;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`array;
	`super;		`variable `vector `insert `delete `edit;
	`contains;	;	
	`create;	c_AXArray;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		array_width;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`ARRAY;	
	`knowable;	1;
	`ontology;	1;
	`null;		`out `in;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`atContainer;
	`super;		`container `variable `real `sized;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		set_atContainer;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`vrowspace;	g_layoutRowSpace;	s_layoutRowSpace;	13;1;1;0;;;		;;
		`vcolspace;	g_layoutColSpace;	s_layoutColSpace;	13;1;1;0;;;		;;
		`lockposition;	g_layoutLockPositions;	s_layoutLockPositions;	9;1;1;0;;;	`boolean;;
		`locksize;	g_layoutLockSize;	s_layoutLockSize;	9;1;1;0;;;	`boolean;;
		`structure;	G_layoutStructure;	S_layoutStructure;	0;0;1;0;;;		;;
		`constraints;	G_layoutConstraints;	S_layoutConstraints;	0;0;1;0;;;		;;
		`margin;	g_layoutMargin;		S_layoutMargin;		0;1;1;0;;;		;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`bound;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`state;			G_state;		;			0;0;0;0;;;	;;
		`stateself;		G_stateSelf;		;			0;0;0;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`boxed;	
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;
	`attributes;
		(	
		`selected;	G_boxSelected;		S_boxSelected;		0;1;1;0;;;	;;	
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`builder;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`position;	G_containerPosition;	S_containerPosition;	3;1;1;0;;;	`boolean;;
		`build;		G_containerBuild;	S_containerBuild;	3;1;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`button;	
	`super;		`label `focused;
	`contains;	;	
	`create;	c_AXPushB;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	verify_data;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`BUTTON;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	
		(
		`margin;	g_buttonMargin; 	S_buttonMargin;		0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`buttons23;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`2up;			G_2up;			S_2up;			0;1;1;1;;;	;;
		`2down;			G_2down;		S_2down;		0;1;1;1;;;	;;
		`3up;			G_3up;			S_3up;			0;1;1;1;;;	;;
		`3down;			G_3down;		S_3down;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`check;	
	`super;		`slotfiller `focused `boxed `sized;
	`contains;	;	
	`create;	c_AXCheckBox;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`CHECK;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`hl;			g_checkHlColor;		s_checkHlColor;		17;1;1;0;;;	`color5;;
		`hlthickness;		g_checkHlThickness;	S_checkHlThickness;	0;1;1;0;;;	;;

		ã reroute the `focus attribute to be the same as `selected attribute to see which child has focus
		`focus;		G_boxSelected;		S_boxSelected;		0;0;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`choice;	
	`super;		`slotfiller `focused;
	`contains;	;	
	`create;	c_AXChoice;
	`be;		;
	`set;		;
	`preset;	preset_radio;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`CHOICE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`cols;		g_choiceNumCols; 	s_choiceNumCols;	11;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`collapsible;
	`super;		`atContainer;
	`contains;	;	
	`create;	c_AXCollapsibleW;
	`be;		be_collapsible;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		1;
	`constraints;	;
	`container;	1;
	`reference;	`COLLAPSIBLE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
                 (
		`handlebg;      	g_handleBg;		s_handleBg;		17;1;1;0;;;	`color0;;
		`handlesize;		g_handleSize;		s_handleSize;		14;0;1;0;;;;;
		`open;			g_open;			s_open;			0;0;1;0;;;;;
		`tooltip;		g_toolTip;		s_toolTip;		0;0;1;0;;;;;
                 );
ãã --------------------------------------------------------------------------------------------------------------
ãã	`class;		`color;
ãã	`super;		`label;
ãã	`contains;	;	
ãã	`create;	c_AColorObject;
ãã	`be;		;
ãã	`set;		;
ãã	`preset;	;
ãã	`verify;	;
ãã	`space;		;
ãã	`at;		0;
ãã	`constraints;	'Hh';
ãã	`container;	0;
ãã	`reference;	`COLOR;
ãã	`knowable;	1;
ãã	`ontology;	1;
ãã	`null;		;	
ãã	`attributes;
ãã		(	
ãã		`bg;		g_colorBgString;	S_colorBgString;	5;1;1;0;;;	`color0;;
ãã		`fg;		g_colorFgString;	S_colorFgString;	5;1;1;0;;;	`color1;;
ãã		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`command;
	`super;		`scalar `key;
	`contains;	;	
	`create;	c_AXCommand;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		scalar_width;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`COMMAND;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`buffer;	g_commandBuffer;		s_commandBuffer;		0;1;1;0;;;	;;
		`cursor;	g_commandCursorPosition;	s_commandCursorPosition;	13;1;1;0;;;	;;
		);

ãã --------------------------------------------------------------------------------------------------------------
	`class;		`container;
	`super;		`vContainer;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	preset_container;
	`verify;	verify_container;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`delete;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`delete;	G_delete;	S_delete;	3;1;1;1;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`edit;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`edit;		g_arrayEdit;		s_arrayEdit;		9;0;1;0;;;	`boolean;;
		`editbg;	g_arrayEditorBg;	s_arrayEditorBg;	17;1;1;0;;;	`color1;;
		`editfg;	g_arrayEditorFg;	s_arrayEditorFg;	17;1;1;0;;;	`color0;;

		`editbegincb;	G_editBeginCB;		S_editBeginCB;		0;1;1;1;;;	;;
		`editendcb;	G_editEndCB;		S_editEndCB;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`extended;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`ys;		g_height;		S_ys;			0;0;1;0;;;;;
		`xs;		g_width;		S_xs;			0;0;1;0;;;;;
		`yxs;		G_yxs;			S_yxs;			0;1;1;0;;;;;
	
		`y;		G_y_pos;		S_y_pos;		0;0;1;0;;;;;
		`x;		G_x_pos;		S_x_pos;		0;0;1;0;;;;;
		`yx;		G_yx;			S_yx;			0;1;1;0;;;;;

		`extent;	G_extent;		S_extent;		0;1;1;0;;;;;

		`Y;		G_Y;			;			0;0;1;0;;;;;
		`X;		G_X;			;			0;0;1;0;;;;;
		`YX;		G_YX;			;			0;0;1;0;;;;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`focused;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`acceptfocus;		g_acceptFocus;		s_acceptFocus;		9;1;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`graph;
	`super;		`vContainer `pixeled `variable `real;
	`contains;	`graphTrace;	
	`create;	c_AXGraph;
	`be;		be_graph;
	`set;		set_graph;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	2;
	`reference;	`GRAPH;
	`knowable;	1;
	`ontology;	1;
	`null;		`addtrace `addtexttrace `copytrace `copytexttrace;
	`attributes;
(
`mode;			g_graphMode;			s_graphMode;			0;1;1;0;;;	`graphmode;;

`delete;		G_deleteTrace;			S_deleteTrace;			3;1;1;1;;;	`boolean;;

`coordinate;		g_graphXYcoordinate;		s_graphXYcoordinate;		0;0;1;0;;;	;;
`Coordinate;		g_graphXXYYcoordinate;		s_graphXXYYcoordinate;		0;0;1;0;;;	;;

`selected;		G_graphSelected;		;				0;0;1;0;;;	;;

`refer;			G_graphRefer;			S_graphRefer;			0;1;1;1;;;	;;
`barwidth;		g_graphBarWidth;		S_graphBarWidth;		14;1;1;0;;;	;;
`depth;			g_graphDepth;			s_graphDepth;			13;1;1;0;;;	;;
`longpresstime;		g_longPressTime;		s_longPressTime;		14;1;1;0;;;	;;
`selectdistance;	g_graphSelectDistance;		s_graphSelectDistance;		14;1;1;0;;;	;;

`axis;			g_graphAxis;			s_graphAxis;			0;1;1;0;;;	`axis;;

`left;			g_graphScreenLeftMargin;	s_graphScreenLeftMargin;	0;1;1;0;;;	;;
`right;			g_graphScreenRightMargin;	s_graphScreenRightMargin;	0;1;1;0;;;	;;
`top;			g_graphScreenTopMargin;		s_graphScreenTopMargin;		0;1;1;0;;;	;;
`bottom;		g_graphScreenBottomMargin;	s_graphScreenBottomMargin;	0;1;1;0;;;	;;

`titlejustify;		g_graphTitleAlign;		s_graphTitleAlign;		19;1;1;0;;;	`justify;;
`subtitlejustify;	g_graphSubtitleAlign;		s_graphSubtitleAlign;		19;1;1;0;;;	`justify;;
`footnotejustify;	g_graphFootnoteAlign;		s_graphFootnoteAlign;		19;1;1;0;;;	`justify;;
`xsublabeljustify;	g_graphXsubLabelAlign;		s_graphXsubLabelAlign;		19;1;1;0;;;	`justify;;
`xtitlejustify;		g_graphXtitleAlign;		s_graphXtitleAlign;		19;1;1;0;;;	`justify;;
`xlabeljustify;		g_graphXlabelAlign;		s_graphXlabelAlign;		19;1;1;0;;;	`justify;;
`ytitlejustify;		g_graphYtitleAlign;		s_graphYtitleAlign;		19;1;1;0;;;	`justify;;
`ylabeljustify; 	g_graphYlabelAlign;		s_graphYlabelAlign;		19;1;1;0;;;	`justify;;
`Xsublabeljustify;	g_graphXXsubLabelAlign;		s_graphXXsubLabelAlign;		19;1;1;0;;;	`justify;;
`Xtitlejustify;		g_graphXXtitleAlign;		s_graphXXtitleAlign;		19;1;1;0;;;	`justify;;
`Xlabeljustify; 	g_graphXXlabelAlign;		s_graphXXlabelAlign;		19;1;1;0;;;	`justify;;
`Ytitlejustify;		g_graphYYtitleAlign;		s_graphYYtitleAlign;		19;1;1;0;;;	`justify;;
`Ylabeljustify; 	g_graphYYlabelAlign;		s_graphYYlabelAlign;		19;1;1;0;;;	`justify;;

`subtitle;		g_graphSubtitle;		s_graphSubtitle;		0;1;1;0;;;	;;
`subtitlefg;		g_graphSubtitleColor;		s_graphSubtitleColor;		17;1;1;0;;;	`color1;;
`subtitlefont;		g_graphSubtitleFont;		s_graphSubtitleFont;		18;1;1;0;;;	`font;;

`footnote;		g_graphFootnote;		s_graphFootnote;		0;1;1;0;;;	;;
`footnotefg;		g_graphFootnoteColor;		s_graphFootnoteColor;		17;1;1;0;;;	`color1;;
`footnotefont;		g_graphFootnoteFont;		s_graphFootnoteFont;		18;1;1;0;;;	`font;;

`legendbg;		g_graphLegendBg;		s_graphLegendBg;		17;1;1;0;;;	`color0;;
`legendfg;		g_graphLegendFg;		s_graphLegendFg;		17;1;1;0;;;	`color1;;
`legendfont;		g_graphLegendFont;		s_graphLegendFont;		18;1;1;0;;;	`font;;
`legendstyle;		g_graphLegendStyle;		s_graphLegendStyle;		0;1;1;0;;;	`legendstyle;;
`legend;		g_graphLegendPosition;		s_graphLegendPosition;		0;1;1;0;;;	`legendposition;;
`legendhlthickness;	g_graphLegendHlThickness;	S_graphLegendHlThickness;	0;1;1;0;;;	;;
`legendshadowthickness;	g_graphLegendShadowThickness;	S_graphLegendShadowThickness;	0;1;1;0;;;	;;

`rule;			g_graphRule;			s_graphRule;			0;1;1;0;;;	`rule;;
`rulewidth;		g_graphRuleWidth;		s_graphRuleWidth;		13;1;1;0;;;	;;

`grid;			g_graphGrid;			s_graphGrid;			0;1;1;0;;;	`grid;;
`gridstyle;		g_graphGridStyle;		s_graphGridStyle;		0;1;1;0;;;	`gridstyle;;
`gridfg;		g_graphGridColor;		s_graphGridColor;		17;1;1;0;;;	`color1;;
`gridwidth;		g_graphGridWidth;		s_graphGridWidth;		13;1;1;0;;;	;;

`zero;			g_graphZero;			s_graphZero;			0;1;1;0;;;	`zero;;
`zerostyle;		g_graphZeroStyle;		s_graphZeroStyle;		0;1;1;0;;;	`zerostyle;;
`zerofg;		g_graphZeroColor;		s_graphZeroColor;		17;1;1;0;;;	`color1;;
`zerowidth;		g_graphZeroWidth;		s_graphZeroWidth;		13;1;1;0;;;	;;

`addtexttrace;		G_graphAddTextTrace;		S_graphAddTextTrace;		0;1;1;1;;;	;;
`addtrace;		G_graphAddTrace;		S_graphAddTrace;		0;1;1;1;;;	;;
`copytexttrace;		G_graphCopyTextTrace;		S_graphCopyTextTrace;		0;1;1;1;;;	;;
`copytrace;		G_graphCopyTrace;		S_graphCopyTrace;		0;1;1;1;;;	;;

`xleft;			g_graphXleftMargin;		s_graphXleftMargin;		13;1;1;0;;;	;;
`xright;		g_graphXrightMargin;		s_graphXrightMargin;		13;1;1;0;;;	;;
`xsublabel;		G_graphXsubLabelFunc;		S_graphXsubLabelFunc;		0;1;1;2;
			g_graphXsubLabelFunc;		s_graphXsubLabelFunc;				;;

`xlegend;		g_graphXlegend;			s_graphXlegend;			0;1;1;0;;;	;;
`xtickstyle;		g_graphXtickStyle;		s_graphXtickStyle;		0;1;1;0;;;	`tickstyle;;
`xtitlefont;		g_graphXtitleFont;		s_graphXtitleFont;		18;1;1;0;;;	`font;;
`xfg;			g_graphXcolor;			s_graphXcolor;			17;1;1;0;;;	`color1;;
`xlabelfont;		g_graphXlabelFont;		s_graphXlabelFont;		18;1;1;0;;;	`font;;
`xlabelheight;		g_graphXlabelHeight;		;				0;0;1;0;;;	;;
`xlabelwidth;		g_graphXlabelWidth;		;				0;0;1;0;;;	;;
`xmajorticksize;	g_graphXmajorTickSize;		S_graphXmajorTickSize;		0;1;1;0;;;	;;
`xminorticksize;	g_graphXminorTickSize;		S_graphXminorTickSize;		0;1;1;0;;;	;;
`xtitle;		g_graphXtitle;			s_graphXtitle;			10;1;1;0;;;	;;
`xtitlefg;		g_graphXtitleColor;		s_graphXtitleColor;		17;1;1;0;;;	`color1;;
`xlabel;		G_graphXlabelFunc;		S_graphXlabelFunc;		0;1;1;2;
			g_graphXlabelFunc;		s_graphXlabelFunc;				;;
`xmin;			g_graphXminimum;		s_graphXminimum;		0;1;1;0;;;	;;
`xmax;			g_graphXmaximum;		s_graphXmaximum;		0;1;1;0;;;	;;
`xinc;			g_graphXincrement;		s_graphXincrement;		0;1;1;0;;;	;;
`xminorticks;		g_graphXminorTicks;		s_graphXminorTicks;		11;1;1;0;;;	;;
`xextent;		g_graphXextents;		;				0;0;1;0;;;	;;

`ytop;			g_graphYtopMargin;		s_graphYtopMargin;		0;1;1;0;;;	;;
`ybottom;		g_graphYbottomMargin;		s_graphYbottomMargin;		0;1;1;0;;;	;;
`ylegend;		g_graphYlegend;			s_graphYlegend;			0;1;1;0;;;	;;
`ytickstyle;		g_graphYtickStyle;		s_graphYtickStyle;		0;1;1;0;;;	`tickstyle;;
`ytitlefont;		g_graphYtitleFont;		s_graphYtitleFont;		18;1;1;0;;;	`font;;
`yfg;			g_graphYcolor;			s_graphYcolor;			17;1;1;0;;;	`color1;;
`ylabelfont;		g_graphYlabelFont;		s_graphYlabelFont;		18;1;1;0;;;	`font;;
`ylabelheight;		g_graphYlabelHeight;		;				0;0;1;0;;;	;;
`ylabelwidth;		g_graphYlabelWidth;		;				0;0;1;0;;;	;;
`ymajorticksize;	g_graphYmajorTickSize;		S_graphYmajorTickSize;		0;1;1;0;;;	;;
`yminorticksize;	g_graphYminorTickSize;		S_graphYminorTickSize;		0;1;1;0;;;	;;
`ytitle;		g_graphYtitle;			s_graphYtitle;			10;1;1;0;;;	;;
`ytitlefg;		g_graphYtitleColor;		s_graphYtitleColor;		17;1;1;0;;;	`color1;;
`ytitlestyle;		g_graphYtitleStyle;		s_graphYtitleStyle;		0;1;1;0;;;	`ytitlestyle;;
`ylabel;		G_graphYlabelFunc;		S_graphYlabelFunc;		0;1;1;2;
			g_graphYlabelFunc;		s_graphYlabelFunc;				;;
`ymin;			g_graphYminimum;		s_graphYminimum;		0;1;1;0;;;	;;
`ymax;			g_graphYmaximum;		s_graphYmaximum;		0;1;1;0;;;	;;
`yinc;			g_graphYincrement;		s_graphYincrement;		0;1;1;0;;;	;;
`yminorticks;		g_graphYminorTicks;		s_graphYminorTicks;		11;1;1;0;;;	;;
`yextent;		g_graphYextents;		;				0;0;1;0;;;	;;
`ymode;			g_graphYmode;			s_graphYmode;			0;1;1;0;;;	`graphymode;;
	
`Xleft;			g_graphXXleftMargin;		s_graphXXleftMargin;		0;1;1;0;;;	;;
`Xright;		g_graphXXrightMargin;		s_graphXXrightMargin;		0;1;1;0;;;	;;
`Xsublabel;		G_graphXXsubLabelFunc;		S_graphXXsubLabelFunc;		0;1;1;2;
			g_graphXXsubLabelFunc;		s_graphXXsubLabelFunc;				;;
`Xtickstyle;		g_graphXXtickStyle;		s_graphXXtickStyle;		0;1;1;0;;;	`tickstyle;;
`Xtitlefont;		g_graphXXtitleFont;		s_graphXXtitleFont;		18;1;1;0;;;	`font;;
`Xfg;			g_graphXXcolor;			s_graphXXcolor;			17;1;1;0;;;	`color1;;
`Xlabelfont;		g_graphXXlabelFont;		s_graphXXlabelFont;		18;1;1;0;;;	`font;;
`Xlabelheight;		g_graphXXlabelHeight;		;				0;0;1;0;;;	;;
`Xlabelwidth;		g_graphXXlabelWidth;		;				0;0;1;0;;;	;;
`Xmajorticksize;	g_graphXXmajorTickSize;		S_graphXXmajorTickSize;		0;1;1;0;;;	;;
`Xminorticksize;	g_graphXXminorTickSize;		S_graphXXminorTickSize;		0;1;1;0;;;	;;
`Xtitle;		g_graphXXtitle;			s_graphXXtitle;			10;1;1;0;;;	;;
`Xtitlefg;		g_graphXXtitleColor;		s_graphXXtitleColor;		17;1;1;0;;;	`color1;;
`Xlabel;		G_graphXXlabelFunc;		S_graphXXlabelFunc;		0;1;1;2;
			g_graphXXlabelFunc;		s_graphXXlabelFunc;				;;
`Xmin;			g_graphXXminimum;		s_graphXXminimum;		0;1;1;0;;;	;;
`Xmax;			g_graphXXmaximum;		s_graphXXmaximum;		0;1;1;0;;;	;;
`Xinc;			g_graphXXincrement;		s_graphXXincrement;		0;1;1;0;;;	;;
`Xminorticks;		g_graphXXminorTicks;		s_graphXXminorTicks;		11;1;1;0;;;	;;
`Xextent;		g_graphXXextents;		;				0;0;1;0;;;	;;

`Ytop;			g_graphYYtopMargin;		s_graphYYtopMargin;		0;1;1;0;;;	;;
`Ybottom;		g_graphYYbottomMargin;		s_graphYYbottomMargin;		0;1;1;0;;;	;;
`Ytickstyle;		g_graphYYtickStyle;		s_graphYYtickStyle;		0;1;1;0;;;	`tickstyle;;
`Ytitlefont;		g_graphYYtitleFont;		s_graphYYtitleFont;		18;1;1;0;;;	`font;;
`Yfg;			g_graphYYcolor;			s_graphYYcolor;			17;1;1;0;;;	`color1;;
`Ylabelfont;		g_graphYYlabelFont;		s_graphYYlabelFont;		18;1;1;0;;;	`font;;
`Ylabelheight;		g_graphYYlabelHeight;		;				0;0;1;0;;;	;;
`Ylabelwidth;		g_graphYYlabelWidth;		;				0;0;1;0;;;	;;
`Ymajorticksize;	g_graphYYmajorTickSize;		S_graphYYmajorTickSize;		0;1;1;0;;;	;;
`Yminorticksize;	g_graphYYminorTickSize;		S_graphYYminorTickSize;		0;1;1;0;;;	;;
`Ytitle;		g_graphYYtitle;			s_graphYYtitle;			10;1;1;0;;;	;;
`Ytitlefg;		g_graphYYtitleColor;		s_graphYYtitleColor;		17;1;1;0;;;	`color1;;
`Ytitlestyle;		g_graphYYtitleStyle;		s_graphYYtitleStyle;		0;1;1;0;;;	`ytitlestyle;;
`Ylabel;		G_graphYYlabelFunc;		S_graphYYlabelFunc;		0;1;1;2;
			g_graphYYlabelFunc;		s_graphYYlabelFunc;				;;
`Ymin;			g_graphYYminimum;		s_graphYYminimum;		0;1;1;0;;;	;;
`Ymax;			g_graphYYmaximum;		s_graphYYmaximum;		0;1;1;0;;;	;;
`Yinc;			g_graphYYincrement;		s_graphYYincrement;		0;1;1;0;;;	;;
`Yminorticks;		g_graphYYminorTicks;		s_graphYYminorTicks;		11;1;1;0;;;	;;
`Yextent;		g_graphYYextents;		;				0;0;1;0;;;	;;
`Ymode;			g_graphYYmode;			s_graphYYmode;			0;1;1;0;;;	`graphymode;;

`xsublabelout;		G_graphXsubLabelFormatFunc;	S_graphXsubLabelFormatFunc;	0;1;1;2;
			g_graphXsubLabelFormatFunc;	s_graphXsubLabelFormatFunc;			`out;;
`Xsublabelout;		G_graphXXsubLabelFormatFunc;	S_graphXXsubLabelFormatFunc;	0;1;1;2;
			g_graphXXsubLabelFormatFunc;	s_graphXXsubLabelFormatFunc;			`out;;
`xlabelout;		G_graphXlabelFormatFunc;	S_graphXlabelFormatFunc;	0;1;1;2;
			g_graphXlabelFormatFunc;	s_graphXlabelFormatFunc;			`out;;
`ylabelout;		G_graphYlabelFormatFunc;	S_graphYlabelFormatFunc;	0;1;1;2;
			g_graphYlabelFormatFunc;	s_graphYlabelFormatFunc;			`out;;
`Xlabelout;		G_graphXXlabelFormatFunc;	S_graphXXlabelFormatFunc;	0;1;1;2;
			g_graphXXlabelFormatFunc;	s_graphXXlabelFormatFunc;			`out;;
`Ylabelout;		G_graphYYlabelFormatFunc;	S_graphYYlabelFormatFunc;	0;1;1;2;
			g_graphYYlabelFormatFunc;	s_graphYYlabelFormatFunc;			`out;;
`pieoffsetmargin;	g_graphPieOffsetMargin;		s_graphPieOffsetMargin;		0;1;1;0;;;	;;

ã Reporting attributes

`leftmargin;		g_graphLeftMargin;		s_graphLeftMargin;		0;1;1;0;;;  	;;
`rightmargin;		g_graphRightMargin;		s_graphRightMargin;		0;1;1;0;;;  	;;
`topoffset;		g_graphTopOffset;		s_graphTopOffset;		0;1;1;0;;;  	;;
`bottomoffset;		g_graphBottomOffset;		s_graphBottomOffset;		0;1;1;0;;;  	;;
`printrow;		g_graphPrintRow;		s_graphPrintRow;		12;1;1;0;;;  	;;
`printcolumn;		g_graphPrintColumn;		s_graphPrintColumn;		12;1;1;0;;;  	;;
`justify; 		g_graphJustify;			s_graphJustify;			19;1;1;0;;;	`justify;;
`pagealign;		g_graphPageAlign;		s_graphPageAlign;		0;1;1;0;;;  	`justify;;
`style;			g_graphStyle;			s_graphStyle;			0;1;1;0;;;  	`reportstyle;;
);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`graphTrace;
	`super;		`vContained `variable `virtual;
	`contains;	;	
	`create;	C_AXGraphTrace;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		graphTrace_width;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`GRAPH_TRACE;
	`knowable;	1;
	`ontology;	2;
	`null;		`linecolor `linestyle `fillcolor `legend `textactivate `yaxis `xaxis `symbolsize `gradient `symbol `out `in;	
	`attributes;
		(
		`coordinate;	g_traceCoordinate;	s_traceCoordinate;	0;0;1;0;;;	;;
		`selected;	g_traceSelected;	s_traceSelected;	0;0;1;0;;;	;;
		`refer;		G_traceRefer;		S_traceRefer;		0;1;1;1;;;	;;
		`addpoint;	G_traceAddPoint;	S_traceAddPoint;	0;1;1;1;;;	;;
		`referpoint;	G_traceReferPoint;	S_traceReferPoint;	0;1;1;1;;;	;;
		`movelimit;	g_traceConstraint;	s_traceConstraint;	0;1;1;2;	;;`movelimit;;
		`selectable;	g_traceSelectable;	s_traceSelectable;	9;1;1;2;	;;`boolean;;
		`protected;	G_protected;		;			3;0;0;0;;;	;;
		`style;		G_traceStyleFunc;	S_traceStyleFunc;	0;1;1;2;
				g_traceStyleFunc;	s_traceStyleFunc;			`style;;
		`linewidth;	G_traceLineWidthFunc;	S_traceLineWidthFunc;	0;1;1;2;
				g_traceLineWidthFunc;	s_traceLineWidthFunc;			;;
		`linestyle;	G_traceLineStyleFunc;	S_traceLineStyleFunc;	0;1;1;2;
				g_traceLineStyleFunc; 	s_traceLineStyleFunc;			`linestyle;;
		`symbol;	G_traceSymbolFunc;	S_traceSymbolFunc;	0;1;1;2;
				g_traceSymbolFunc; 	s_traceSymbolFunc;			`symbol;;
		`linecolor;	G_traceLineColorFunc;	S_traceLineColorFunc;	0;1;1;2;
				g_traceLineColorFunc; 	s_traceLineColorFunc;			`color;;
		`fillcolor;	G_traceFillColorFunc;	S_traceFillColorFunc;	0;1;1;2;
				g_traceFillColorFunc; 	s_traceFillColorFunc;			`color;;
		`legend;	G_traceLegendFunc;	S_traceLegendFunc;	0;1;1;2;
				g_traceLegendFunc; 	s_traceLegendFunc;			;;
		`symbolsize;	G_traceSymbolSizeFunc;	S_traceSymbolSizeFunc;	0;1;1;2;
				g_traceSymbolSizeFunc; 	s_traceSymbolSizeFunc;			;;
		`gradient;	G_traceGradientFunc;	S_traceGradientFunc;	0;1;1;2;
				g_traceGradientFunc;	s_traceGradientFunc;			;;

		`textactivate;	G_traceTextActivate;	S_traceTextActivate;	0;1;1;1;;;	;;
		`yaxis;		G_traceYYaxisFunc;	S_traceYYaxisFunc;	0;1;1;2;
				g_traceYYaxisFunc;	s_traceYYaxisFunc;			`yaxis;;
		`xaxis;		G_traceXaxisFunc;	S_traceXaxisFunc;	0;1;1;2;
				g_traceXaxisFunc;	s_traceXaxisFunc;			`xaxis;;
		`pieangle;	g_tracePieAngle;	s_tracePieAngle;	0;1;1;0;;;	;;
		`pieoffsets;	g_tracePieOffsets;	s_tracePieOffsets;	0;1;1;0;;;	;;
		`pieaspectratio;g_tracePieAspectRatio;	s_tracePieAspectRatio;	0;1;1;0;;;	;;
		`piedepthfactor;g_tracePieDepthFactor;	s_tracePieDepthFactor;	0;1;1;0;;;	;;
		`pieprofiles;	g_tracePieProfiles;	s_tracePieProfiles;	0;1;1;0;;;	;;
		`pielegendalign;g_tracePieLegendAlign;	s_tracePieLegendAlign;	0;1;1;0;;;	;;
		`pievaluealign;	g_tracePieValueAlign;	s_tracePieValueAlign;	0;1;1;0;;;	;;
		`piepercentalign;g_tracePiePercentAlign;s_tracePiePercentAlign;	0;1;1;0;;;	;;
		`pieprimaryslice;g_tracePrimarySlice;	s_tracePrimarySlice;	0;1;1;0;;;	;;
		`pieprimaryslicealign;g_tracePrimarySliceAlign;s_tracePrimarySliceAlign;0;1;1;0;;;	;;
		`textfont;	g_traceTextFont;	s_traceTextFont;	18;1;1;0;;;	`font;;
		`textfg;      	g_traceTextFg;		s_traceTextFg;		17;1;1;0;;;	`color1;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`grid;
	`super;		`container `builder `variable `real;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		set_grid;
	`preset;	preset_grid;
	`verify;	verify_grid;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`structure;	G_gridStructure;	S_gridStructure;	0;0;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`hgauge;	
	`super;		`slider;
	`contains;	;	
	`create;	c_AXHGauge;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`HGAUGE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`hgrid;
	`super;		`grid;
	`contains;	;	
	`create;	c_XManager;
	`be;		be_hgrid;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	1;
	`reference;	`HGRID;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`hmenu;	
	`super;		`variable `real `focused;
	`contains;	;	
	`create;	c_AXHMenu;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	verify_menu;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`HMENU;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
ã		`C;		g_hmenuUniformTitles;	s_hmenuUniformTitles;	9;1;1;0;;;	`boolean;;
		`mnemonics;	g_hmenuMnemonics;	s_hmenuMnemonics;	0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`hpane;
	`super;		`atContainer;
	`contains;	;	
	`create;	c_AXHPaneW;
	`be;		be_pane;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		1;
	`constraints;	;
	`container;	1;
	`reference;	`HPANE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes; 	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`hscale;	
	`super;		`slider;
	`contains;	;	
	`create;	c_AXHScale;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`HSCALE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`editbegincb;	G_editBeginCB;		S_editBeginCB;		0;1;1;1;;;	;;
		`editendcb;	G_editEndCB;		S_editEndCB;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`insert;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`insertabove;		G_insertabove;		S_insertabove;		3;1;1;1;;;	`boolean;;
		`insertbelow;		G_insertbelow;		S_insertbelow;		3;1;1;1;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`key;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`key;		G_key;		S_key;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`label;
	`super;		`variable `real;
	`contains;	;	
	`create;	c_AXLabelM;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`LABEL;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`justify;	g_labelOptions; 	s_labelOptions;		19;1;1;0;;;	`justify;;
		`margin;	g_labelMargin; 		S_labelMargin;		0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`layout;
	`super;		`atContainer `builder;
	`contains;	;	
	`create;	c_XLayout;
	`be;		be_layout;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		1;
	`constraints;	;
	`container;	1;
	`reference;	`LAYOUT;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`matrix;
	`super;		`array;
	`contains;	;	
	`create;	c_AXCross;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		matrix_width;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`MATRIX;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
	(
	`labelfont;	G_matrixTitleFontFunc;	S_varTitleFontFunc;		0;1;0;2;
			g_varTitleFontFunc;	s_varTitleFontFunc;				`font;;
	`colspace;	G_matrixColSpaceFunc;	S_matrixColSpaceFunc;		0;1;1;2;
			g_matrixColSpaceFunc;	s_matrixColSpaceFunc;				;;
	`collabelrows;	g_matrixNumHeadingRows;	s_matrixNumHeadingRows;		11;1;1;0;;;	;;
	`selectcol;	G_matrixSelectCol;	S_matrixSelectCol;		3;1;1;1;;;	;;
	`selectrow;	G_matrixSelectRow;	S_matrixSelectRow;		3;1;1;1;;;	;;
	`selectcorner;	G_matrixSelectCorner;	S_matrixSelectCorner;		3;1;1;1;;;	;;
	`rowindex;	g_matrixRowIndex;	s_matrixRowIndex;		0;1;1;0;;;	;;
	`colindex;	g_matrixColIndex;	s_matrixColIndex;		0;1;1;0;;;	;;
	`rowindexbg;	g_matrixRowIndexBg;	s_matrixRowIndexBg;		17;1;1;0;;;	`color4;;
	`colindexbg;	g_matrixColIndexBg;	s_matrixColIndexBg;		17;1;1;0;;;	`color4;;
	`cornerindex;	g_matrixCornerIndex;	s_matrixCornerIndex;		9;1;1;0;;;	`boolean;;
	`cornerindexbg;	g_matrixCornerIndexBg;	s_matrixCornerIndexBg;		17;1;1;0;;;	`color4;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`menu;
	`super;		`vContainer `variable;
	`contains;	`menuPulldown;	
	`create;	;
	`be;		be_menu;
	`set;		set_menu;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	2;
	`reference;	`MENU;
	`knowable;	0;
	`ontology;	1;
	`null;	 	;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`menuButton;
	`super;		`variable;
	`contains;	;	
	`create;	C_AXMenuButton;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`MENU_BUTTON;
	`knowable;	0;
	`ontology;	2;
	`null;	 	;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`menuPulldown;
	`super;		`vContainer `variable;
	`contains;	`menuButton `menuToggle `menuSeparator `menuPulldown;	
	`create;	C_AXMenuPulldown;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'';
	`container;	2;
	`reference;	`MENU_PULLDOWN;
	`knowable;	0;
	`ontology;	2;
	`null;	 	;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`menuSeparator;
	`super;		`variable;
	`contains;	;	
	`create;	C_AXMenuSeparator;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`MENU_SEPARATOR;
	`knowable;	0;
	`ontology;	2;
	`null;	 	;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`menuToggle;
	`super;		`variable;
	`contains;	;	
	`create;	C_AXMenuToggle;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'hH';
	`container;	0;
	`reference;	`MENU_TOGGLE;
	`knowable;	0;
	`ontology;	2;
	`null;	 	;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`notebook;
	`super;		`container `variable `real;
	`contains;	;	
	`create;	c_Notebook;
	`be;		be_notebook;
	`set;		set_notebook;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	1;
	`reference;	`NOTEBOOK;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`orientation;	     g_notebookOrientation; 	   s_notebookOrientation;	 0;1;1;0;;;	;;
		`showbinding;	     g_notebookShowBinding;	   s_notebookShowBinding;	 9;1;1;0;;; `boolean;;
		`showtabs;	     g_notebookShowTabs;	   s_notebookShowTabs;		 9;1;1;0;;; `boolean;;
		`showpopup;	     g_notebookShowPopup;	   s_notebookShowPopup;		 9;1;1;0;;; `boolean;;
		`bindingwidth;	     g_notebookBindingWidth;	   S_notebookBindingWidth;	 0;1;1;0;;;	;;
		`framethickness;     g_notebookFrameThickness;	   S_notebookFrameThickness;	 0;1;1;0;;;	;;
		`marginheight;       g_notebookMarginHeight;	   S_notebookMarginHeight;	 0;1;1;0;;;	;;
		`marginwidth;        g_notebookMarginWidth;        S_notebookMarginWidth;	 0;1;1;0;;;	;;
		`borderheight;       g_notebookBorderHeight;	   S_notebookBorderHeight;	 0;1;1;0;;;	;;
		`borderwidth;        g_notebookBorderWidth;        S_notebookBorderWidth;	 0;1;1;0;;;	;;
		`backpages;	     g_notebookBackpages;          S_notebookBackpages;		 0;1;1;0;;;	;;
		`backpagethickness;  g_notebookBackpageThickness;  S_notebookBackpageThickness;	 0;1;1;0;;;	;;
		`backpagefg;	     g_notebookBackpageFg;	   s_notebookBackpageFg;	 17;1;1;0;;; `color4;;
		`backpagebg;         g_notebookBackpageBg; 	   s_notebookBackpageBg;	 17;1;1;0;;; `color4;;
		`selectedpagefg;     g_notebookSelectedPageFg;	   s_notebookSelectedPageFg;	 17;1;1;0;;; `color1;;
		`selectedpagebg;     g_notebookSelectedPageBg; 	   s_notebookSelectedPageBg;	 17;1;1;0;;; `color0;;
		`framebg;            g_notebookFrameBackground;    s_notebookFrameBackground;	 17;1;1;0;;; `color4;;
		`currentpage;        g_notebookCurrentPage;        s_notebookCurrentPage;        0;1;1;0;;;     ;;
		`locksize;	     g_notebookLockSize;	   s_notebookLockSize;		 9;1;1;0;;; `boolean;;

		`pagechangecb;	     G_notebookPageChangeCB;	   S_notebookPageChangeCB;	 0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		OBJECT_CLASS;
	`super;		`symbol `bound;
	`contains;	;	
	`create;	c_AXReference;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`OBJECT;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(	
		`active;		g_visible;		S_mapped;		9;1;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`page;
	`super;		`variable `real `key `buttons23;
	`contains;	;	
	`create;	c_AXPage;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`PAGE;
	`knowable;	1;
	`ontology;	1;
	`null;	 	`color;	
	`attributes;	
		(
		`colormap;	G_pageColorTable; 	S_pageColorTable;	0;1;1;0;;;	;;
		`cursor;	g_pageCursor;		;			0;1;1;0;;;	;;
		`color;		G_pageIndexFunc;	S_pageIndexFunc;	0;1;1;2;
				g_pageIndexFunc;	s_pageIndexFunc;			;;
		`bold;		G_pageBoldFunc;		S_pageBoldFunc;		3;1;1;2;
				g_pageBoldFunc;		s_pageBoldFunc;				`boolean;;
		`blink;		G_pageBlinkFunc;	S_pageBlinkFunc;	3;1;1;2;
				g_pageBlinkFunc;	s_pageBlinkFunc;			`boolean;;
		`underline;	G_pageUnderlineFunc;	S_pageUnderlineFunc;	3;1;1;2;
				g_pageUnderlineFunc;	s_pageUnderlineFunc;			`boolean;;
		`box;		g_pageBoxes;		s_pageBoxes;		0;1;1;0;;;	;;
		`blinkrate;	g_pageBlinkRate;	S_pageBlinkRate;	0;1;1;0;;;	;;
		`line;		g_pageLines;		s_pageLines;		0;1;1;0;;;	;;
		`linewidth;	g_pageLineWidth;	s_pageLineWidth;	14;1;1;0;;;	;;
		`boxcolor;	g_pageBoxColors;	s_pageBoxColors;	4;1;1;0;;;	;;
		`rband;		G_rband;		S_rband;		3;1;1;1;;;	`boolean;;
		`rbandbox;	g_pageRubberBand;	;			0;1;1;0;;;	;;
		`keysym;	g_pageKeyBuffer;	;			0;0;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`password;
	`super;		`scalar;
	`contains;	;	
	`create;	c_AXPassword;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		scalar_width;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`PASSWORD;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`valid;		g_passwordValidity;		;			0;1;1;0;;;	;;
		`validate;	G_validate;			S_validate;		0;1;1;1;;;	;;
		`fill;		g_passwordFillChar;		s_passwordFillChar;	6;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`pixeled;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`ys;		g_height;		S_ysPixeled;		0;0;1;0;;;;;
		`xs;		g_width;		S_xsPixeled;		0;0;1;0;;;;;
		`yxs;		G_yxs;			S_yxsPixeled;		0;1;1;0;;;;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`positioned;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`at;		G_at;			S_at;			0;1;1;0;;;	;;
		`resize;	G_resize;		S_resize;		7;1;1;0;;	;`resize;;
		`vrow;		G_vrow;			S_vrow;			0;0;1;0;;;	;;
		`vcol;		G_vcol;			S_vcol;			0;0;1;0;;;	;;
		`vrows;		G_vrows;		S_vrows;		0;0;1;0;;;	;;
		`vcols;		G_vcols;		S_vcols;		0;0;1;0;;;	;;
		`w;		G_w;			S_w;			3;0;1;0;;;	`boolean;;
		`W;		G_W;			S_W;			3;0;1;0;;;	`boolean;;
		`h;		G_h;			S_h;			3;0;1;0;;;	`boolean;;
		`H;		G_H;			S_H;			3;0;1;0;;;	`boolean;;
		`l;		G_l;			S_l;			3;0;1;0;;;	`boolean;;
		`r;		G_r;			S_r;			3;0;1;0;;;	`boolean;;
		`t;		G_t;			S_t;			3;0;1;0;;;	`boolean;;
		`b;		G_b;			S_b;			3;0;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`print;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
	(
	`print;			G_no_op;		S_print;		0;0;1;0;;;	;;
	`printstyle;		G_printPageStyle;	S_printPageStyle;	16;1;1;0;
				g_printPageStyle;	s_printPageStyle;			`justify;;
	`printfile;		G_printFile;		S_printFile;		0;1;1;0;
				g_printFile;		s_printFile;				;;
	`printmode;		G_printMode;		S_printMode;		0;1;1;0;
				g_printMode;		s_printMode;				`printmode;;
	`printdefaultfont;	G_printDefaultFont;	S_printDefaultFont;	18;1;1;0;
				g_printDefaultFont;	s_printDefaultFont;			`font;;
	`printorientation;	G_printPageOrientation;	S_printPageOrientation;	0;1;1;0;
				g_printPageOrientation;	s_printPageOrientation;			`pageorientation;;
	`printsize;		G_printPagesize;	S_printPagesize;	0;1;1;0;
				g_printPagesize;	s_printPagesize;			`pagesize;;
	`printoutputmode;	G_printOutputMode;	S_printOutputMode;	0;1;1;0;
				g_printOutputMode;	s_printOutputMode;			`reportoutputmode;;
	`printleft;		G_printLeftMargin;	S_printLeftMargin;	0;1;1;0;
				g_printLeftMargin;	s_printLeftMargin;			;;
	`printright;		G_printRightMargin;	S_printRightMargin;	0;1;1;0;
				g_printRightMargin;	s_printRightMargin;			;;
	`printtop;		G_printTopMargin;	S_printTopMargin;	0;1;1;0;
				g_printTopMargin;	s_printTopMargin;			;;
	`printbottom;		G_printBottomMargin;	S_printBottomMargin;	0;1;1;0;
				g_printBottomMargin;	s_printBottomMargin;			;;
	`printdisfile;		G_printDisclaimerFile;	S_printDisclaimerFile;	0;1;1;0;
				g_printDisclaimerFile;	s_printDisclaimerFile;			;;
	`printdisfont;		G_printDisclaimerFont;	S_printDisclaimerFont;	18;1;1;0;
				g_printDisclaimerFont;	s_printDisclaimerFont;			`font;;
	`printdisstyle;		G_printDisclaimerStyle;	S_printDisclaimerStyle;	0;1;1;0;
				g_printDisclaimerStyle;	s_printDisclaimerStyle;			`reportdisclaimerstyle;;
	`printdisorientation;	G_printDisOrientation;	S_printDisOrientation;	0;1;1;0;
				g_printDisOrientation;	s_printDisOrientation;			`pageorientation;;
	`printdisleftmargin;	G_printDisLeftMargin;	S_printDisLeftMargin;	0;1;1;0;
				g_printDisLeftMargin;	s_printDisLeftMargin;			;;
	`printdisrightmargin;	G_printDisRightMargin;	S_printDisRightMargin;	0;1;1;0;
				g_printDisRightMargin;	s_printDisRightMargin;			;;
	`printdistopmargin;	G_printDisTopMargin;	S_printDisTopMargin;	0;1;1;0;
				g_printDisTopMargin;	s_printDisTopMargin;			;;
	`printdisbottommargin;	G_printDisBottomMargin;	S_printDisBottomMargin;	0;1;1;0;
				g_printDisBottomMargin;	s_printDisBottomMargin;			;;
	`printdisrulewidth;	G_printDisRuleWidth;	S_printDisRuleWidth;	0;1;1;0;
				g_printDisRuleWidth;	s_printDisRuleWidth;			;;

	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`radio;	
	`super;		`slotfiller `focused `boxed `sized;
	`contains;	;	
	`create;	c_AXRadioBox;
	`be;		;
	`set;		;
	`preset;	preset_radio;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`RADIO;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`hl;			g_radioHlColor;		s_radioHlColor;		17;1;1;0;;;	`color5;;
		`hlthickness;		g_radioHlThickness;	S_radioHlThickness;	0;1;1;0;;;	;;

		ã reroute the `focus attribute to be the same as `selected attribute to see which child has focus
		`focus;		G_boxSelected;		S_boxSelected;		0;0;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`real;
	`super;		`virtual `print `positioned `extended `shell `bound;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`hl;			g_hlColor;		s_hlColor;		17;1;1;0;;;	`color5;;
		`hlthickness;		g_hlThickness;		S_hlThickness;		0;1;1;0;;;	;;
		`shadowthickness;	g_shadowThickness;	S_shadowThickness;	0;1;1;0;;;	;;
		`shadowstyle;		g_shadowStyle;		S_shadowStyle;		0;1;1;0;;;	`shadowstyle;;
		`titlejustify;		g_titleAlign;		s_titleAlign;		19;1;1;0;;;	`justify;;

		`show;			G_show;			S_show;			9;1;1;0;;;	`boolean;;
		`syncshow;		G_show;			S_syncshow;		9;1;1;0;;;	`boolean;;
		`realize;		;			S_realize;		9;0;1;0;;;	`boolean;;
		`hide;			G_hide;			S_hide;			9;0;1;0;;;	`boolean;;

		`sensitive;		g_sensitive;		S_sensitive;		9;1;1;0;;;	`boolean;;
		`freeze;		g_freeze;		S_freeze;		9;0;1;0;;;	`boolean;;
		`dynamic;		g_dynamic;		s_dynamic;		9;1;1;0;;;	`boolean;;
		`refresh;		;			S_refresh;		9;0;1;0;;;	`boolean;;

		`mapped;		G_mapped;		S_mapped;		9;0;1;0;;;	`boolean;;
		`naturalsize;		;			S_naturalSize;		0;0;1;0;;;	`boolean;;
		`focus;			G_focus;		S_focus;		0;0;1;0;;;	;;
		`tabto;		 	G_tabTo;		S_tabTo;		0;0;1;0;;;	;;
		`tabfrom;		G_tabFrom;		S_tabFrom;		0;0;1;0;;;	;;
		`leftto;		G_leftTo;		S_leftTo;		0;1;0;0;;;	;;
		`rightto;		G_rightTo;		S_rightTo;		0;1;0;0;;;	;;
		`upto;			G_upTo;			S_upTo;			0;1;0;0;;;	;;
		`downto;		G_downTo;		S_downTo;		0;1;0;0;;;	;;
		`request;		;			S_request;		0;0;1;0;;;	;;
		`primary;		g_primary;		s_primary;		0;0;1;0;;;	;;
		`clear;			G_clear;		S_clear;		0;1;1;1;;;	;;
		`notify;		G_notify;		S_notify;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		REPORT_CLASS;
	`super;		`symbol `bound;
	`contains;	;	
	`create;	c_AXReport;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`REPORT;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`orientation;		g_reportPageOrientation;	s_reportPageOrientation;	0;1;1;0;
					g_reportPageOrientation;	s_reportPageOrientation;	`pageorientation;;
		`disclaimerorientation;	g_reportDisclaimerOrientation;	s_reportDisclaimerOrientation;	0;1;1;0;
					g_reportDisclaimerOrientation;	s_reportDisclaimerOrientation;	`pageorientation;;
		`pagesize;		g_reportPagesize;		s_reportPagesize;		0;1;1;0;
					g_reportPagesize;		s_reportPagesize;		`pagesize;;
		`outputmode;		g_reportOutputMode;		s_reportOutputMode;		0;1;1;0;
					g_reportOutputMode;		s_reportOutputMode;		`reportoutputmode;;
		`disclaimerstyle;	g_reportDisclaimerStyle;	s_reportDisclaimerStyle;	0;1;1;0;
					g_reportDisclaimerStyle;	s_reportDisclaimerStyle;	`reportdisclaimerstyle;;
		`leftmargin;		g_reportLeftMargin;		s_reportLeftMargin;		0;1;1;0;
					g_reportLeftMargin;		s_reportLeftMargin;		;;
		`rightmargin;		g_reportRightMargin;		s_reportRightMargin;		0;1;1;0;
					g_reportRightMargin;		s_reportRightMargin;		;;
		`topmargin;		g_reportTopMargin;		s_reportTopMargin;		0;1;1;0;
					g_reportTopMargin;		s_reportTopMargin;		;;
		`bottommargin;		g_reportBottomMargin;		s_reportBottomMargin;		0;1;1;0;
					g_reportBottomMargin;		s_reportBottomMargin;		;;
		`margins;		G_no_op;			s_reportMargins;		0;0;1;0;
					G_no_op;			s_reportMargins;		;;
		`disclaimerleftmargin;	g_reportDisclaimerLeftMargin;	s_reportDisclaimerLeftMargin;	0;1;1;0;
					g_reportDisclaimerLeftMargin;	s_reportDisclaimerLeftMargin;	;;
		`disclaimerrightmargin;	g_reportDisclaimerRightMargin;	s_reportDisclaimerRightMargin;	0;1;1;0;
					g_reportDisclaimerRightMargin;	s_reportDisclaimerRightMargin;	;;
		`disclaimertopmargin;	g_reportDisclaimerTopMargin;	s_reportDisclaimerTopMargin;	0;1;1;0;
					g_reportDisclaimerTopMargin;	s_reportDisclaimerTopMargin;	;;
		`disclaimerbottommargin;g_reportDisclaimerBottomMargin;	s_reportDisclaimerBottomMargin;	0;1;1;0;
					g_reportDisclaimerBottomMargin;	s_reportDisclaimerBottomMargin;	;;
		`filename;		g_reportFileName;		s_reportFileName;		0;1;1;0;
					g_reportFileName;		s_reportFileName;		;;
		`disclaimerfile;	g_reportDisclaimerFile;		s_reportDisclaimerFile;		0;1;1;0;
					g_reportDisclaimerFile;		s_reportDisclaimerFile;		;;
		`disclaimerrulewidth;	g_reportDisclaimerRuleWidth;	S_reportDisclaimerRuleWidth;	0;1;1;0;;;  ;;
		`footer;		g_reportFooter;			s_reportFooter;			0;1;1;0;;;  ;;
		`header;		g_reportHeader;			s_reportHeader;			0;1;1;0;
					;				;				;;
		`banner;		g_reportBanner;			s_reportBanner;			0;1;1;0;
					;				;				;;
		`cancel;		G_no_op;			S_reportCancel;			0;1;1;0;;;  ;;
		`headeroffset;		g_reportHeaderOffset;		S_reportHeaderOffset;		0;1;1;0;;;  ;;
		`footeroffset;		g_reportFooterOffset;		S_reportFooterOffset;		0;1;1;0;;;  ;;
		`framelinewidth;	g_reportPageFrameLineWidth;	S_reportPageFrameLineWidth;	0;1;1;0;;;  ;;
		`frameoffset;		g_reportPageFrameOffset;	S_reportPageFrameOffset;	0;1;1;0;;;  ;;
		`framestyle;		g_reportPageFrameStyle;		s_reportPageFrameStyle;		0;1;1;0;
					g_reportPageFrameStyle;		s_reportPageFrameStyle;		;;
		`pagecount;		g_reportPageCount;		;				0;0;1;0;
					g_reportPageCount;		;				;;
		`pagecounttotal;	g_reportPageCountTotal;		;				0;0;1;0;
					g_reportPageCountTotal;		;				;;
		`pagenumbers;		g_reportPageNumbers;		s_reportPageNumbers;		0;1;1;0;
					g_reportPageNumbers;		s_reportPageNumbers;		;;
		`pagenumbering;		g_reportPageNumbering;		s_reportPageNumbering;		9;1;1;0;;;`boolean;;
		`pagenumbertext;	g_reportPageNumberText;		s_reportPageNumberText;		0;1;1;0;;;  ;;
		`pagenumber;		g_reportPageNumber;		s_reportPageNumber;		0;1;1;0;;;  ;;
		`print;			G_no_op;			S_reportPrint;			0;0;1;0;;;  ;;
		`uniformscaling;	g_reportUniformScaling;		s_reportUniformScaling;		9;1;1;0;;;`boolean;;
                `pagebreakcb;           G_reportPageBreak;		S_reportPageBreak;      	0;1;1;2;;;  ;;
                `computesizecb;         G_reportComputeSize;		S_reportComputeSize;    	0;1;1;2;;;  ;;
                `computepagebreakcb;    G_reportComputePageBreak;	S_reportComputePageBreak;	0;1;1;2;;;  ;;
		`fontsize;		g_reportFontSize;		;				0;0;1;0;;;  ;;
		`pagenumberoffset;	g_reportPageNumberOffset;	S_reportPageNumberOffset;	0;1;1;0;;;  ;;
		`printmode;		g_reportPrintMode;		s_reportPrintMode;		0;1;1;0;;;`printmode;;

		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`reportcolumn;
	`super;		`symbol `bound;
	`contains;	;	
	`create;	c_AXReportColumn;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`REPORTCOLUMN;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	
	(
		`leftmargin;	g_reportColumnLeftMargin;	s_reportColumnLeftMargin;	0;1;1;0;;;  ;;
		`rightmargin;	g_reportColumnRightMargin;	s_reportColumnRightMargin;	0;1;1;0;;;  ;;
		`topoffset;	g_reportColumnTopOffset;	s_reportColumnTopOffset;	0;1;1;0;;;  ;;
		`bottomoffset;	g_reportColumnBottomOffset;	s_reportColumnBottomOffset;	0;1;1;0;;;  ;;
		`reportfont;	g_reportColumnReportFont;	s_reportColumnReportFont;	0;1;1;0;;;  ;;
		`printrow;	g_reportColumnPrintRow;		s_reportColumnPrintRow;		12;1;1;0;;;  ;;
		`printcolumn;	g_reportColumnPrintColumn;	s_reportColumnPrintColumn;	12;1;1;0;;;  ;;
		`justify; 	g_reportColumnJustify;		s_reportColumnJustify;		19;1;1;0;;;`justify;;
		`pagealign;	g_reportColumnPageAlign;	s_reportColumnPageAlign;	0;1;1;0;;; `justify;;
		`occurrence;	g_reportColumnOccurrence;	s_reportColumnOccurrence;	0;1;1;0;;; `reportoccurrence;;
		`columnwidths;	g_reportColumnColumnWidths;	s_reportColumnColumnWidths;	0;1;1;0;;;  ;;
		`numcolumns;	g_reportColumnNumColumns;	s_reportColumnNumColumns;	13;1;1;0;;;  ;;
		`style;		g_reportColumnStyle;		s_reportColumnStyle;		0;1;1;0;;; `reportstyle;;
	);
ãã --------------------------------------------------------------------------------------------------------------	
	`class;		`reportparagraph;
	`super;		`symbol `bound;
	`contains;	;	
	`create;	c_AXReportParagraph;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`REPORTPARAGRAPH;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	
	(
	`leftmargin;	g_reportParagraphLeftMargin;		s_reportParagraphLeftMargin;		0;1;1;0;;;  ;;
	`rightmargin;	g_reportParagraphRightMargin;		s_reportParagraphRightMargin;		0;1;1;0;;;  ;;
	`topoffset;	g_reportParagraphTopOffset;		s_reportParagraphTopOffset;		0;1;1;0;;;  ;;
	`bottomoffset;	g_reportParagraphBottomOffset;		s_reportParagraphBottomOffset;		0;1;1;0;;;  ;;
	`reportfont;	g_reportParagraphReportFont;		s_reportParagraphReportFont;		0;1;1;0;;;  ;;
	`printrow;	g_reportParagraphPrintRow;		s_reportParagraphPrintRow;		12;1;1;0;;;  ;;
	`printcolumn;	g_reportParagraphPrintColumn;		s_reportParagraphPrintColumn;		12;1;1;0;;;  ;;
	`justify; 	g_reportParagraphJustify;		s_reportParagraphJustify;		19;1;1;0;;;`justify;;
	`pagealign;	g_reportParagraphPageAlign;		s_reportParagraphPageAlign;		0;1;1;0;;; `justify;;
	`occurrence;	g_reportParagraphOccurrence;		s_reportParagraphOccurrence;		0;1;1;0;;; `reportoccurrence;;
	`firstlineindent;g_reportParagraphFirstLineIndent;	s_reportParagraphFirstLineIndent;	0;1;1;0;;;  ;;
	`leading;	g_reportParagraphLeading;		S_reportParagraphLeading;		0;1;1;0;;;  ;;
	`linewidth;	g_reportParagraphLineWidth;		S_reportParagraphLineWidth;		0;1;1;0;;;  ;;
	`fggrayscale;	g_reportParagraphFgGrayScale;		s_reportParagraphFgGrayScale;		0;1;1;0;;;  ;;
	`bggrayscale;	g_reportParagraphBgGrayScale;		s_reportParagraphBgGrayScale;		0;1;1;0;;;  ;;
	`orphanrows;	g_reportParagraphOrphanRows;		S_reportParagraphOrphanRows;		0;1;1;0;;;  ;;
ã	`widowrows;	g_reportParagraphWidowRows;		S_reportParagraphWidowRows;		0;1;1;0;;;  ;;
	`style;		g_reportParagraphStyle;			s_reportParagraphStyle;			0;1;1;0;;; `reportstyle;;

	`column;	g_reportParagraphColumn;		s_reportParagraphColumn;			0;1;1;0;;; ;;
	`columnspan;	g_reportParagraphColumnSpan;		s_reportParagraphColumnSpan;			0;1;1;0;;; ;;

	);


ãã --------------------------------------------------------------------------------------------------------------
	`class;		`reportrule;
	`super;		`symbol `bound;
	`contains;	;	
	`create;	c_AXReportRule;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`REPORTRULE;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	
	(
	`leftmargin;	g_reportRuleLeftMargin;		s_reportRuleLeftMargin;		0;1;1;0;;;  ;;
	`rightmargin;	g_reportRuleRightMargin;	s_reportRuleRightMargin;	0;1;1;0;;;  ;;
	`topoffset;	g_reportRuleTopOffset;		s_reportRuleTopOffset;		0;1;1;0;;;  ;;
	`bottomoffset;	g_reportRuleBottomOffset;	s_reportRuleBottomOffset;	0;1;1;0;;;  ;;
	`fggrayscale;	g_reportRuleFgGrayScale;	s_reportRuleFgGrayScale;	0;1;1;0;;;  ;;
	`rulewidth;	g_reportRuleRuleWidth;		S_reportRuleRuleWidth;		0;1;1;0;;;  ;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`scalar;
	`super;		`variable `real;
	`contains;	;	
	`create;	c_AXScalar;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		scalar_width;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`SCALAR;
	`knowable;	1;
	`ontology;	1;
	`null;		`out `in;	
	`attributes;
	(
	`edit;			g_scalarEdit;			s_scalarEdit;			9;0;1;0;;;  `boolean;;
	`editbg;		g_scalarEditorBg;		s_scalarEditorBg;		17;1;1;0;;; `color1;;
	`editfg;		g_scalarEditorFg;		s_scalarEditorFg;		17;1;1;0;;; `color0;;
	`valuebg;		g_scalarValueBg;		s_scalarValueBg;		17;1;1;0;;; `color1;;
	`valuefont;		g_scalarValueFont;		s_scalarValueFont;		18;1;1;0;;; `font;;
	`valuejustify;		g_scalarValueAlign;		s_scalarValueAlign;		0;1;1;0;;;  `justify;;
	`valueshadowstyle; 	g_scalarValueShadowStyle;	s_scalarValueShadowStyle;	0;1;1;0;;;  `shadowstyle;;
	`valueshadowthickness;	g_scalarValueShadowThickness; 	S_scalarValueShadowThickness;	0;1;1;0;;;  ;;
	`cycle;			g_scalarCycleInterval;		S_scalarCycleInterval;		0;1;1;0;;;  ;;
	`colors;		G_scalarCycleColors;		S_scalarCycleColors;		4;1;1;2;;;  `color;;
	`refer;			G_scalarRefer;			S_scalarRefer;			0;1;1;1;;;  ;;
	`increment;     	G_scalarIncrement;      	S_scalarIncrement;      	0;1;1;1;;;  ;;
	`decrement;     	G_scalarDecrement;      	S_scalarDecrement;      	0;1;1;1;;;  ;;
	`arrowbuttons;  	g_scalarArrowButtons;		s_scalarArrowButtons;   	9;1;1;0;;;  `boolean;;

	`editbegincb;		G_editBeginCB;			S_editBeginCB;			0;1;1;1;;;  ;;
	`editendcb;		G_editEndCB;			S_editEndCB;			0;1;1;1;;;  ;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`shell;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`icontitle;		g_iconName;		S_iconName;		0;1;4;0;;;	;;
		`icon;			G_no_op;		S_shellIconData;	0;1;4;0;;;	;;
		`shelltitle;		g_windowName;		S_shellTitle;		0;1;2;0;;;	;;
		`resizeable;		G_no_op;		S_shellResizeable;	11;1;2;0;;;	;;
		`leftfoot;		g_shellLeftFooter;	S_leftFooter;		10;1;2;0;;;	;;
		`rightfoot;		g_shellRightFooter;	S_rightFooter;		10;1;2;0;;;	;;	
		`foot;			g_shellFooter;		S_shellFooter;		9;1;2;0;;;	`boolean;;
		`head;			g_shellHeader;		S_shellHeader;		9;1;3;0;;;	`boolean;;
		`pin;			g_pushPinState;		s_pushPinState;		9;1;3;0;;;	`boolean;;
		`iconic;		G_iconic;		S_iconic;		9;1;2;0;;;	`boolean;;
		`leader;		G_leader;		S_leader;		0;1;2;0;;;	;;
		`followers;		G_followers;		S_followers;		0;0;2;0;;;	;;
		`followertree;		G_followertree;		S_followertree;		0;0;2;0;;;	;;
		`tablist;		G_tabList;		S_tabList;		0;1;2;0;;;	;;
		`arrowlist;		G_arrowList;		S_arrowList;		0;1;2;0;;;	;;
		`exit;			G_exit;			S_exit;			3;1;2;1;;;	;;
		`atsector;		G_atSector;		S_atSector;		0;1;2;0;;;	;;
		`fullscreen;		G_fullscreen;		S_fullscreen;		3;1;2;0;;;	`boolean;;
		`extents;		G_extents;		;			0;0;2;0;;;	;;

		`iconized;     		G_shellIconized;	S_shellIconized;    	0;1;2;1;;;      ;;
		`deiconized;    	G_shellDeiconized;	S_shellDeiconized;    	0;1;2;1;;;      ;;
		`incurrentworkspace;	G_shellInCurrentWS;	S_shellInCurrentWS;	0;1;2;1;;;      ;;
		`outofcurrentworkspace;	G_shellOutOfCurrentWS;	S_shellOutOfCurrentWS;	0;1;2;1;;;	;;

		`presence;		G_shellWSPresence; 	S_shellWSPresence; 	0;1;2;0;;;	;;
	
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`sized;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`R;		g_layoutUniformRows;	s_layoutUniformRows;	9;1;1;0;;;	`boolean;;
		`C;		g_layoutUniformCols;	s_layoutUniformCols;	9;1;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`slider;	
	`super;		`variable `real;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;
	`attributes;
		(
		`edit;		g_scaleEdit;		s_scaleEdit;		9;0;1;0;;;	`boolean;;
		`editbg;	g_scaleEditorBg;	s_scaleEditorBg;	17;1;1;0;;;	`color1;;
		`editfg;	g_scaleEditorFg;	s_scaleEditorFg;	17;1;1;0;;;	`color0;;

		`labelfont;	g_scaleLabelFont;	s_scaleLabelFont;	18;1;1;0;;;	`font;;
		`labelfg;	g_scaleLabelFg;		s_scaleLabelFg;		17;1;1;0;;;	`color1;;
		`labelout;	G_scaleLabelOut;	S_scaleLabelOut;	0;1;1;2;
				g_scaleLabelOut;	s_scaleLabelOut;			`out;;
		`labelinc;	g_scaleLabelInc;	s_scaleLabelInc;	0;1;1;0;;;	;;

		`labeljustify;g_scaleLabelAlign;	s_scaleLabelAlign;	19;1;1;0;;;	`justify;;
		`titlejustify;	g_scaleTitleAlign;	s_scaleTitleAlign;	19;1;1;0;;;	`justify;;
		`valuejustify;	g_scaleValueAlign;	s_scaleValueAlign;	19;1;1;0;;;	`justify;;
		`subtitlejustify;g_scaleSubtitleAlign;	s_scaleSubtitleAlign;	19;1;1;0;;;	`justify;;
		`mintitlejustify;g_scaleMintitleAlign;	s_scaleMintitleAlign;	19;1;1;0;;;	`justify;;
		`maxtitlejustify;g_scaleMaxtitleAlign;	s_scaleMaxtitleAlign;	19;1;1;0;;;	`justify;;

		`valuefont;	g_scaleValueFont;	s_scaleValueFont;	18;1;1;0;;;	`font;;
		`mintitlefont;	g_scaleMintitleFont;	s_scaleMintitleFont;	18;1;1;0;;;	`font;;
		`maxtitlefont;	g_scaleMaxtitleFont;	s_scaleMaxtitleFont;	18;1;1;0;;;	`font;;
		`subtitlefont;	g_scaleSubtitleFont;	s_scaleSubtitleFont;	18;1;1;0;;;	`font;;

		`sliderbg;	g_scaleSliderBg;	s_scaleSliderBg;	17;1;1;0;;;	`color0;;

		`valuefg;	g_scaleValueFg;		s_scaleValueFg;		17;1;1;0;;;	`color1;;
		`subtitlefg;	g_scaleSubtitleFg;	s_scaleSubtitleFg;	17;1;1;0;;;	`color1;;
		`mintitlefg;	g_scaleMintitleFg;	s_scaleMintitleFg;	17;1;1;0;;;	`color1;;
		`maxtitlefg;	g_scaleMaxtitleFg;	s_scaleMaxtitleFg;	17;1;1;0;;;	`color1;;

		`subtitle;	g_scaleSubtitle;	s_scaleSubtitle;	0;1;1;0;;;	;;
		`mintitle;	g_scaleMintitle;	s_scaleMintitle;	0;1;1;0;;;	;;
		`maxtitle;	g_scaleMaxtitle;	s_scaleMaxtitle;	0;1;1;0;;;	;;

		`min;		g_scaleValueMin;	s_scaleValueMin;	0;1;1;0;;;	;;
		`max;		g_scaleValueMax;	s_scaleValueMax;	0;1;1;0;;;	;;
		`inc;		g_scaleValueInc;	s_scaleValueInc;	0;1;1;0;;;	;;
		`pageinc;	g_scaleValuePageInc;	s_scaleValuePageInc;	0;1;1;0;;;	;;
		`sliderheight;	g_scaleSliderHeight;	s_scaleSliderHeight;	0;1;1;0;;;	;;
		`sliderwidth;	g_scaleSliderWidth;	s_scaleSliderWidth;	0;1;1;0;;;	;;
		`majorticksize;	g_scaleMajorTickSize;	S_scaleMajorTickSize;	0;1;1;0;;;	;;
		`minorticksize;	g_scaleMinorTickSize;	S_scaleMinorTickSize;	0;1;1;0;;;	;;
		`minortickcount;g_scaleMinorTickCt;	S_scaleMinorTickCt;	0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`slot;	
	`super;		`slotfiller `boxed `sized;
	`contains;	;	
	`create;	c_AXSlot;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		slot_width;
	`at;		0;
	`constraints;	'Hh';
	`container;	0;
	`reference;	`SLOT;
	`knowable;	1;
	`ontology;	1;
	`null;		`out `in;	
	`attributes;
		(
		`select;		G_select;		S_select;		0;1;1;1;;;	;;
		`hl;			g_slotHlColor;		s_slotHlColor;		17;1;1;0;;;	`color5;;
		`hlthickness;		g_slotHlThickness;	S_slotHlThickness;	0;1;1;0;;;	;;
		`shadowthickness;	g_slotShadowThickness;	S_slotShadowThickness;	0;1;1;0;;;	;;

		`edit;		g_slotEdit;		s_slotEdit;		9;0;1;0;;;	`boolean;;
		`refer;		G_slotRefer;		S_slotRefer;		0;1;1;1;;;	;;
		`editbg;	g_slotEditorBg;		s_slotEditorBg;		17;1;1;0;;;	`color1;;
		`editfg;	g_slotEditorFg;		s_slotEditorFg;		17;1;1;0;;;	`color0;;
		`cycle;		g_slotCycleInterval;	S_slotCycleInterval;	0;1;1;0;;;	;;
		`colors;	G_slotCycleColors;	S_slotCycleColors;	4;1;1;2;;;	`color;;
		`selected;	G_slotSelected;		S_slotSelected;		0;1;1;0;;;	;;	
		`arrowbuttons;  g_slotArrowButtons;     s_slotArrowButtons;     0;1;1;0;;;      ;;
		`increment;     G_slotIncrement;        S_slotIncrement;        0;1;1;1;;;      ;;
		`decrement;     G_slotDecrement;        S_slotDecrement;        0;1;1;1;;;      ;;

		`editbegincb;	G_editBeginCB;		S_editBeginCB;		0;1;1;1;;;	;;
		`editendcb;	G_editEndCB;		S_editEndCB;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`slotfiller;	
	`super;		`variable `real `insert `delete;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	preset_slotfiller;
	`verify;	verify_slotfiller;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		`geometry `label;
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`symbol;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`set;		G_set;			S_set;			0;1;0;2;;;	;;
		`preset;	G_preset;		S_preset;		0;1;0;2;;;	;;
		`eval;		G_eval;			S_eval;			0;1;0;2;;;	;;
		`is;		G_is;			S_is;			0;1;0;1;;;	;;
		`done;		G_varDoneFunc;		S_varDoneFunc;		0;1;0;2;;;	;;
		`na;		G_varNa;		S_varNa;		0;1;0;0;;;	;;
		`class;		G_class;		S_class;		0;0;0;0;;;	`class;;
		`bound;		G_bound;		;			3;0;0;0;;;	`boolean;;
		`evaluate;	G_evaluate;		S_evaluate;		3;1;0;0;;;	`boolean;;
		`script;	G_script;		S_script;		3;1;0;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`table;
	`super;		`vContainer `variable `vector `insert `delete `edit;
	`contains;	`tableField;	
	`create;	c_AXTable;
	`be;		be_table;
	`set;		set_table;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	2;
	`reference;	`TABLE;
	`knowable;	1;
	`ontology;	1;
	`null;	 	;	
	`attributes;
	(
	`selectfield;	      G_selectField;		S_selectField;			0;1;1;1;;;	;;
	`field;		      G_tableField;		S_tableField;			0;0;1;0;;;	;;
	`selectedfield;	      G_tableSelected;		S_tableSelected;		0;0;1;0;;;	;;
	`firstfield;	      G_tableFirstField;	S_tableFirstField;		0;0;1;0;;;	;;
	`fields;	      g_numVisibleCols;		S_numVisibleCols;		0;0;1;0;;;	;;
	`fixedfields;	      g_tableNumFixedFields;	s_tableNumFixedFields;		13;1;1;0;;;	;;
	`dragdrop;	      g_tableColumnDragDrop;	s_tableColumnDragDrop;		9;1;1;0;;;	`boolean;;
	`columnresize;	      g_tableColumnResize;	s_tableColumnResize;		9;1;1;0;;;	`boolean;;

        ã Report Functions
        `breakfont;           g_tableBreakFont;          s_tableBreakFont;          	0;1;1;0;;;  ;;
        `breakstyle;          g_tableBreakStyle;         s_tableBreakStyle;         	0;1;1;0;;;  ;;
        `fixedreportcolumns;  g_tableFixedReportColumns; S_tableFixedReportColumns; 	0;1;1;0;;;  ;;

        `groupheading;        g_tableGroupHeading;       s_tableGroupHeading; 	0;1;1;0;;;  ;;

ã       `grandtotaltext;      g_tableGrandTotalText;     S_tableGrandTotalText;     	0;1;1;0;;;  ;;
ã        `grandtotal;          g_tableGrandTotal;         S_no_op;                   0;1;1;0;;;  ;;
        `currentbreakcolumn;  g_tableCurrentBreakColumn; S_no_op;                   0;1;1;0;;;  ;;
        `headingstyle;        g_tableHeadingStyle;       s_tableHeadingStyle;       0;1;1;0;;;  ;;
        `reportfont;          g_tableReportFont;         s_tableReportFont;         0;1;1;0;;;  ;;
ã        `reportgrandtotalon;  g_tableReportGrandTotalOn; s_tableReportGrandTotalOn; 0;1;1;0;;;  ;;
        `reportheadingfont;   g_tableReportHeadingFont;  s_tableReportHeadingFont;  0;1;1;0;;;  ;;
        `reporttotalfont;     g_tableReportTotalFont;    s_tableReportTotalFont;    0;1;1;0;;;  ;;
        `reporttotalon;       g_tableReportTotalOn;      s_tableReportTotalOn;      9;1;1;0;;;  `boolean;;
        `reporttotalleading;  g_tableReportTotalLeading; S_tableReportTotalLeading; 0;1;1;0;;;  ;;
        `reporttotalstyle;    g_tableReportTotalStyle;   s_tableReportTotalStyle;   0;1;1;0;;;  ;;
        `style;               g_tableStyle;              s_tableStyle;              0;1;1;0;;;  ;;
	`newspapercolumn;     g_tableNewspaperColumn;    S_tableNewspaperColumn;    0;1;1;0;;;  ;;
	`columnspacing;	      g_tableColumnSpacing;	 s_tableColumnSpacing;	    0;1;1;0;;;  ;;
	`framelinewidth;      g_tableFrameLineWidth;	 S_tableFrameLineWidth;	    0;1;1;0;;;  ;;
	`frameoffset;	      g_tableFrameOffset;	 S_tableFrameOffset;	    0;1;1;0;;;  ;;
	`framestyle;	      g_tableFrameStyle;	 s_tableFrameStyle;	    0;1;1;0;;;  ;;
	`columncontrol;	      g_tableColumnControl;	 s_tableColumnControl;	    0;1;1;0;;;  ;;
	`columnpagespan;      g_tableColumnPageSpan;	 S_tableColumnPageSpan;     0;1;1;0;;;  ;;
	`rowcontrol;	      g_tableRowControl;	 s_tableRowControl;	    0;1;1;0;;;  ;;
	`rowpagespan;	      g_tableRowPageSpan;	 S_tableRowPageSpan;	    0;1;1;0;;;  ;;
	`outputstyle;	      g_tableOutputStyle;	 s_tableOutputStyle;        0;1;1;0;
			      g_tableOutputStyle;	 s_tableOutputStyle;	    ;;
	`leading;	      g_tableLeading;            s_tableLeading;            0;1;1;0;
			      g_tableLeading;		 s_tableLeading;	    ;;
	`leftmargin;	      	g_tableLeftMargin;	 	s_tableLeftMargin;		0;1;1;0;;;  ;;
	`rightmargin;	      	g_tableRightMargin;	 	s_tableRightMargin;		0;1;1;0;;;  ;;
	`topoffset;	      	g_tableTopOffset;		s_tableTopOffset;		0;1;1;0;;;  ;;
	`bottomoffset;	      	g_tableBottomOffset;	 	s_tableBottomOffset;		0;1;1;0;;;  ;;
	`printrow;	      	g_tablePrintRow;		s_tablePrintRow;		12;1;1;0;;;  ;;
	`printcolumn;	      	g_tablePrintColumn;	 	s_tablePrintColumn;		12;1;1;0;;;  ;;
	`justify; 	      	g_tableJustify;			s_tableJustify;			19;1;1;0;;;`justify;;
	`pagealign;    	      	g_tablePageAlign;		s_tablePageAlign;		0;1;1;0;;; `justify;;
	`breaktextcolumn;	g_tableBreakTextColumn;		;				0;0;1;0;;;  ;;
	`breakcolumn;		g_tableBreakColumn;		;				0;0;1;0;;;  ;;
	`breakindex;		g_tableBreakIndex;		;				0;0;1;0;;;  ;;
	`pagebreakindex;	g_tablePageBreakIndex;		;				0;0;1;0;;;  ;;
	`fggrayscale;		g_tableFgGrayScale;		s_tableFgGrayScale;		0;1;1;0;;;  ;;
	`bggrayscale;		g_tableBgGrayScale;		s_tableBgGrayScale;		0;1;1;0;;;  ;;
	`headingfggrayscale;	g_tableHeadingFgGrayScale;	s_tableHeadingFgGrayScale;	0;1;1;0;;;  ;;
	`headingbggrayscale;	g_tableHeadingBgGrayScale;	s_tableHeadingBgGrayScale;	0;1;1;0;;;  ;;
ã	`breakoffset;		g_tableBreakOffset;		s_tableBreakOffset;		0;1;1;0;;;  ;;
ã	`breakleading;		g_tableBreakLeading;		s_tableBreakLeading;		0;1;1;0;;;  ;;
	`reportheadingoffset;	g_tableReportHeadingOffset;	S_tableReportHeadingOffset;	0;1;1;0;;;  ;;
	`computebreaks;		G_no_op;			S_tableComputeBreaks;		0;1;1;0;;;  ;;
	`dynamicrecompute;	g_tableDynamicRecompute;	s_tableDynamicRecompute;	9;1;1;0;;; `boolean;;
	`showbreaks;		g_tableShowBreaks;		s_tableShowBreaks;		9;1;1;0;;; `boolean;;
	`headingfg;		g_tableHeadingFg;		s_tableHeadingFg;		17;1;1;2;;; `color;;
	`delimiter;		g_tableDelimiter;		s_tableDelimiter;		0;1;1;0;
				g_tableDelimiter;		s_tableDelimiter;		;;
ã	`breaktextindex;	g_tableBreakTextIndex;		;				0;0;1;0;
ã				g_tableBreakTextIndex;		;				;;
		);

ãã --------------------------------------------------------------------------------------------------------------
	`class;		`tableField;
	`super;		`vContained `variable `virtual;
	`contains;	;	
	`create;	C_AXTableField;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		tableField_width;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`TABLE_FIELD;
	`knowable;	1;
	`ontology;	2;
	`null;		`out `in;	
	`attributes;	
	(
	`protected;	      G_protected;		;				3;0;0;0;;;	;;
	`colors;	      G_fieldCycleColors;	S_fieldCycleColors;		4;1;1;2;;;	`color;;
	`cycle;		      G_fieldCycleInterval;	S_fieldCycleInterval;		0;0;1;0;;;	;;
	`columnalignment;     g_fieldColumnAlignment;   s_fieldColumnAlignment;         0;1;1;0;;;      ;;
	`heading;		g_fieldHeading;			s_fieldHeading;			0;1;1;0;;;  ;;
	`headingfg;		g_fieldHeadingFg;		s_fieldHeadingFg;		2;1;1;0;;;  ;;

	ã Report Attributes

	`reportheadingfont;	g_fieldReportHeadingFont;	s_fieldReportHeadingFont;	0;1;1;0;;;   ;;
	`pagebreakon;		g_fieldPageBreakOn;		s_fieldPageBreakOn;		0;1;1;0;;;   ;;
	`headingstyle;		g_fieldHeadingStyle;		s_fieldHeadingStyle;		0;1;1;0;;;   ;;
	`headingfggrayscale;	g_fieldHeadingFgGrayScale;	s_fieldHeadingFgGrayScale;	0;1;1;0;;;   ;;
	`headingbggrayscale;	g_fieldHeadingBgGrayScale;	s_fieldHeadingBgGrayScale;	0;1;1;0;;;   ;;
	`breaktext;		g_fieldBreakText;		S_fieldBreakText;		0;1;1;0;;;   ;;
	`breakon;		g_fieldBreakOn;			s_fieldBreakOn;			0;1;1;0;;;   `boolean;;
	`breakprocesson;	g_fieldBreakProcessOn;		s_fieldBreakProcessOn;		0;1;1;0;;;   `boolean;;
	`suppressduplicate;     g_fieldSuppressDuplicate;       s_fieldSuppressDuplicate;       0;1;1;0;;;   `boolean;;
	`computationmode;       g_fieldComputationMode;         s_fieldComputationMode;         0;1;1;0;;;   `reportcompmode;;
	`breakfg;		g_fieldBreakFg;			s_fieldBreakFg;			0;1;1;0;;;   ;;
	`breakbg;		g_fieldBreakBg;			s_fieldBreakBg;			0;1;1;0;;;   ;;

	ã Functional Report Attributes

	`breakcriteriafunc;	g_fieldBreakCriteriaFunc;	s_fieldBreakCriteriaFunc;	0;1;1;2;;;   ;;
	`breakprocessfunc;	g_fieldBreakProcessFunc;	s_fieldBreakProcessFunc;	0;1;1;2;;;   ;;
	`formatbreakfunc;	g_fieldFormatBreakFunc;		s_fieldFormatBreakFunc; 	0;1;1;2;;;   ;;
	`breakfont;		G_fieldBreakFont;		S_fieldBreakFont;		0;1;1;2;;;   ;;
	`breakleading;		G_fieldBreakLeading;		S_fieldBreakLeading;		0;1;1;2;;;   ;;
	`breakoffset;		G_fieldBreakOffset;		S_fieldBreakOffset;		0;1;1;2;;;   ;;
	`breakstyle;		G_fieldBreakStyle;		S_fieldBreakStyle;		0;1;1;2;;;   ;;
	`fggrayscale;		G_fieldFgGrayScale;		S_fieldFgGrayScale;		0;1;1;2;;;   ;;
	`bggrayscale;		G_fieldBgGrayScale;		S_fieldBgGrayScale;		0;1;1;2;;;   ;;
	`breakfggrayscale;	G_fieldBreakFgGrayScale;	S_fieldBreakFgGrayScale;	0;1;1;2;;;   ;;
	`breakbggrayscale;	G_fieldBreakBgGrayScale;	S_fieldBreakBgGrayScale;	0;1;1;2;;;   ;;
	`reportfont;		G_fieldReportFont;		S_fieldReportFont;		0;1;1;2;;;   ;;
	`style;			G_fieldStyle;			S_fieldStyle;			0;1;1;2;;;   ;;
	`breakstring;		g_fieldBreakString;		s_fieldBreakString;		0;1;1;0;;;  ;;
	`breakindex;		g_fieldBreakIndex;		;				0;0;1;0;;;  ;;

	`columnresizecb;      G_fieldColumnResizeCB;	S_fieldColumnResizeCB;	 		0;1;1;1;;;	;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`text;
	`super;		`variable `real;
	`contains;	;	
	`create;	c_AXTextM;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`TEXT;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`rows;		g_textNumVisibleRows;		S_textNumVisibleRows;		0;1;1;0;;;	;;
		`cols; 		g_textNumVisibleCols;		S_textNumVisibleCols;		0;1;1;0;;;	;;
		`save;		G_save;				S_save;				0;1;1;0;;;	;;
		`buffer;	g_textBuffer;			;				0;1;1;0;;;	;;
		`cursor;	g_textCursorPosition;		;				0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`tree;
	`super;		`variable `real;
	`contains;	;	
	`create;	c_AXTree;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`TREE;
	`knowable;	1;
	`ontology;	1;
	`null;	 	;	
	`attributes;
		(
		`select;		G_select;		S_select;		0;1;1;1;;;	;;
		`refer;			G_treeRefer;		S_treeRefer;		0;1;1;1;;;	;;
		`selected;		g_treeSelectedNode;	s_treeSelectedNode;	0;0;1;0;;;	;;

		`nodebg;		g_treeNodeBg;		s_treeNodeBg;		17;1;1;0;;;	`color0;;
		`nodefg;		g_treeNodeFg;		s_treeNodeFg;		17;1;1;0;;;	`color1;;
		`selectednodebg;	g_treeSelectedNodeBg;	s_treeSelectedNodeBg;	17;1;1;0;;;	`color0;;
		`selectednodefg;	g_treeSelectedNodeFg;	s_treeSelectedNodeFg;	17;1;1;0;;;	`color1;;
		`orientation;		g_treeOrientation;	s_treeOrientation;	0;1;1;0;;;	;;
		`verticalspace;		g_treeVerticalSpace;	S_treeVerticalSpace;	0;1;1;0;;;	;;
		`horizontalspace;	g_treeHorizontalSpace;	S_treeHorizontalSpace;	0;1;1;0;;;	;;
		`showbuttons;		g_treeShowButtons;	s_treeShowButtons;	9;1;1;0;;;	`boolean;;
		`linecolor;		g_treeLineColor;	s_treeLineColor;	17;1;1;0;;;	`color1;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`ur;		ã class
	`super;		;		ã attributes inherited from these classes, left to right
	`contains;	;		ã contains this type of virtual class
	`create;	;		ã create function
	`be;		;		ã be function
	`set;		;		ã set function
	`preset;	;		ã preset function
	`verify;	;		ã verify function
	`space;		;		ã space function
	`at;		0;		ã at type
	`constraints;	;		ã resizing constraints when in a layout
	`container;	0;		ã primitive (0), container (1), virtual container (2)
	`reference;	;		ã symbol of reference object
	`knowable;	0;		ã knowable (1) by S or not (0)
	`ontology;	0;		ã S can (1) or cannot (0) create/destroy
	`null;		;		ã attributes to set to null when coupling
	`attributes;	;		ã conceptual vectors of structure:
					ã 	symbolic name
					ã 	get function
					ã 	set function

					ã 	converter type
					ã 	edit type (¢1, 0, 1)
					ã 	variable (0), widget (1), shell (2=3©4), popup (3), toplevel (4)
					ã 	straight value (0), scv (1), or sdipcv (2)

					ã 	internal get function
					ã 	internal set function
					ã 	domain function
					ã 	symbol of variable which is electrically connected to att of class
					ã         starts out all null; `array s.Has `.bg `bbb will make `bbb an entry
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vContained;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		`bg `titlefg `titlefont `fg `font;
	`attributes;
		(
		`bg;		G_varPBgFunc;		S_varPBgFunc;		0;1;0;2;
				g_varBgFunc;		s_varBgFunc;				`color0;;
		`titlefg;	G_varPTitleColor;	S_varPTitleColor;	2;1;0;0;
				g_varTitleColor;	s_varTitleColor;			`color1;;
		`titlefont;	G_varPTitleFont;	S_varPTitleFont;	1;1;0;0;
				g_varTitleFont;		s_varTitleFont;				`font;;
		`fg;		G_varPFgFunc;		S_varPFgFunc;		0;1;0;2;
				g_varFgFunc;		s_varFgFunc;				`color1;;
		`font;		G_varPFontFunc;		S_varPFontFunc;		0;1;0;2;
				g_varFontFunc;		s_varFontFunc;				`font;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vContainer;
	`super;		`ur;
	`contains;	;	
	`create;	;
	`Be;		;
	`set;		;
	`preset;	preset_v_container;
	`verify;	verify_v_container;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`recursively;	;			S_recursively;		0;0;0;0;;;	;;
		`children;	G_Children;		S_Children;		0;0;1;0;;;	;;
		`descendents;	G_Descendents;		;			0;0;1;0;;;	;;
		`familytree;	G_familytree;		;			0;0;1;0;;;	;;
		`reparent;	G_containerReparent;	S_containerReparent;	3;1;1;0;;;	`boolean;;
		`reshow;	G_containerReshow;	S_containerReshow;	3;1;1;0;;;	`boolean;;
		`newshow;	G_containerNewshow;	S_containerNewshow;	3;1;1;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`variable;
	`super;		`ur `symbol;
	`contains;	;	
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	verify_data;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
		(
		`bg;		G_varBgFunc;		S_varBgFunc;		0;1;0;2;
				g_varBgFunc;		s_varBgFunc;				`color0;;
		`titlefg;	G_varTitleColor;	s_varTitleColor;	2;1;0;0;
				g_varTitleColor;	;					`color1;;
		`titlefont;	G_varTitleFont;		S_varTitleFont;		1;1;0;0;
				g_varTitleFont;		;					`font;;

		`fg;		G_varFgFunc;		S_varFgFunc;		0;1;0;2;
				g_varFgFunc;		s_varFgFunc;				`color1;;
		`font;		G_varFontFunc;		S_varFontFunc;		0;1;0;2;
				g_varFontFunc;		s_varFontFunc;				`font;;
		`labelfg;	G_varTitleColorFunc;	S_varTitleColorFunc;	0;1;0;2;
				g_varTitleColorFunc;	s_varTitleColorFunc;			`color1;;
		`labelfont;	G_varTitleFontFunc;	S_varTitleFontFunc;	0;1;0;2;
				g_varTitleFontFunc;	s_varTitleFontFunc;			`font;;

		`in;		G_varInFunc;		S_varInFunc;		0;1;0;2;
				g_varInFunc;		s_varInFunc;				;;
		`out;		G_varOutFunc;		S_varOutFunc;		0;1;0;2;
				g_varOutFunc;		s_varOutFunc;				`out;;
		`blank;		G_varBlank;		S_varBlank;		0;1;0;0;;;	;;
		`doc;		G_varDoc;		S_varDoc;		0;1;0;0;;;	;;
		`execute;	G_varExecute;		S_varExecute;		3;1;0;0;;;	`boolean;;
		`has;		G_varHas;		S_varHas;		3;1;0;0;;;	`boolean;;
		`copy;		G_varCopy;		S_varCopy;		3;1;0;0;;;	`boolean;;
		`protect;	G_varRoFunc;		S_varRoFunc;		3;1;0;2;
				g_varRoFunc;		s_varRoFunc;				`boolean;;
		`protected;	G_varRoFunc;		;			3;0;0;0;;;	`boolean;;
		`geometry;	G_varGeoFunc;		S_varGeoFunc;		0;1;0;2;
				g_varGeoFunc;		s_varGeoFunc;				;;
		`title;		G_varTitle;		S_varTitle;		0;1;0;0;
				g_varTitle;		s_varTitle;				;;
		`label;		G_varTitleFunc;		S_varTitleFunc;		0;1;0;2;
				g_varTitleFunc;		s_varTitleFunc;				;;

		`pagetitle;	G_varPageTitle;		S_varPageTitle;		0;1;1;0;;;	;;
		`pageselection;	G_varPageSelection;	S_varPageSelection;	3;1;1;0;;;	`boolean;;

		`editspace;	G_varEw;		S_varEw;		9;1;0;0;;;	`boolean;;
		`space;		g_varCw;		S_varCw;		0;1;0;0;;;	;;
		`literal;	G_literal;		S_literal;		3;1;0;0;;;	`boolean;;
		`respace;	G_respace;		S_respace;		3;1;0;0;;;	`boolean;;
		`stars;		g_varStars;		s_varStars;		9;1;0;0;;;	`boolean;;
		`be;		G_be;			S_be;			0;1;0;2;;;	;;

		`ws;		G_ws;			S_ws;			3;1;0;0;;;	`boolean;;
		`printable;	G_printable;		S_printable;		3;1;0;0;;;	`boolean;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vector;
	`super;		`real;
	`contains;	;
	`create;	;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;	
	`knowable;	0;
	`ontology;	0;
	`null;		;	
	`attributes;
	(
	`select;	G_select;			S_select;			0;1;1;1;;;	;;
	`selectbg;	g_arraySelectBg;		s_arraySelectBg;		17;1;1;0;;;	`color0;;
	`refer;		G_refer;			S_refer;			3;1;1;1;;;	`boolean;;

	`rowbg;		g_arrayRowBg;			s_arrayRowBg;			17;1;1;0;;;	`color3;;
	`indexbg;	g_arraySelectVectorBg;		s_arraySelectVectorBg;		17;1;1;0;;;	`color2;;

	`index;		g_arraySelectVector;		s_arraySelectVector;		0;1;1;0;;;	;;
	`selected;	G_arraySelected;		S_arraySelected;		0;0;1;0;;;	;;
	`row;		g_arraySelectRow;		s_arraySelectRow;		12;1;1;0;;;	;;
	`col;		g_arraySelectCol;		s_arraySelectCol;		12;1;1;0;;;	;;
	`firstrow;	g_arrayFirstRow;		s_arrayFirstRow;		20;1;1;0;;;	;;
	`firstcol;	g_arrayFirstCol;		s_arrayFirstCol;		20;1;1;0;;;	;;
	`rows;		g_numVisibleRows;		S_numVisibleRows;		0;1;1;0;;;	;;
	`cols; 		g_numVisibleCols;		S_numVisibleCols;		0;1;1;0;;;	;;
	`size;		;				S_vectorSize;			0;0;1;0;;;	;;

	`setrow;	G_setRow;			S_setRow;			3;1;1;1;;;	`boolean;;
	`setcol;	G_setCol;			S_setCol;			3;1;1;1;;;	`boolean;;
	`setfirstrow;	G_setFirstRow;			S_setFirstRow;			3;1;1;1;;;	`boolean;;
	`setfirstcol;	G_setFirstCol;			S_setFirstCol;			3;1;1;1;;;	`boolean;;
	`vscrollwith;	G_scrollWithV;			S_scrollWithV;			0;1;1;0;;;	;;
	`hscrollwith;	G_scrollWithH;			S_scrollWithH;			0;1;1;0;;;	;;

	`hscrollsize;	g_arrayHsbSize;			S_arrayHsbSize;			0;1;1;0;;;	;;
	`vscrollsize;	g_arrayVsbSize;			S_arrayVsbSize;			0;1;1;0;;;	;;
	`scrollsize;	G_arraySbSize;			S_arraySbSize;			0;1;1;0;;;	;;
	`scrollbg;	G_arraySbBg;			S_arraySbBg;			17;0;1;0;;;	`color1;;
	`rowsep;	g_arraySeparatorInterval;	s_arraySeparatorInterval;	11;1;1;0;;;	;;
	`colsep;	g_arrayColSeparator;		s_arrayColSeparator;		11;1;1;0;;;	;;
	`cycle;		g_arrayCycleInterval;		S_arrayCycleInterval;		0;1;1;0;;;	;;
	`colors;	G_arrayCycleColors;		S_arrayCycleColors;		4;1;1;2;;;	`color;;
	`cyclemode;	g_arrayCycleColorMode;		s_arrayCycleColorMode;		0;1;1;0;;;	;;
	`selectionmode; g_arraySelectionMode;           s_arraySelectionMode;           0;1;1;0;;;      ;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vgauge;	
	`super;		`slider;
	`contains;	;	
	`create;	c_AXVGauge;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'wW';
	`container;	0;
	`reference;	`VGAUGE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vgrid;
	`super;		`grid;
	`contains;	;	
	`create;	c_XManager;
	`be;		be_vgrid;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	1;
	`reference;	`VGRID;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`view;
	`super;		`variable `vector `focused;
	`contains;	;	
	`create;	c_AXView;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	`VIEW;	
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
	(	
	`selectbg;	G_viewSelectBg;		S_viewSelectBg;		17;1;1;0;;;	`color0;;
	`selected;	G_viewSelected;		S_viewSelected;		0;0;1;0;;;	;;
	`col;		G_viewSelectCol;	S_viewSelectCol;	12;1;1;0;;;	;;
	`rowsep;	G_viewSeparatorInterval;S_viewSeparatorInterval;11;1;1;0;;;	;;
	`colsep;	G_viewSeparatorInterval;S_viewSeparatorInterval;11;1;1;0;;;	;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`virtual;
	`super;		`ur `bound;	
	`contains;	;	
	`create;	;	
	`be;		;	
	`set;		;	
	`preset;	;
	`verify;	;	
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	0;
	`reference;	;
	`knowable;	0;
	`ontology;	0;
	`null;		;
	`attributes;	
		(
		`parent;	G_Parent;	;		0;0;1;0;;;	;;
		`shell;		G_shell;	;		0;0;1;0;;;	;;
		`ancestors;	G_Ancestors;	;		0;0;1;0;;;	;;
		`mapped;	G_mapped;	;		0;0;1;0;;;	;;
		`active;	g_visible;	;		0;0;1;0;;;	;;
		`verify;	G_verify;	S_verify;	8;1;1;0;;;	`boolean;;

		`raise;		;		S_raise;	0;0;1;0;;;	;;
		`lower;		;		S_lower;	0;0;1;0;;;	;;

		`f1;		G_f1;		S_f1;		0;1;1;1;;;	;;
		`f2;		G_f2;		S_f2;		0;1;1;1;;;	;;
		`f3;		G_f3;		S_f3;		0;1;1;1;;;	;;
		`f4;		G_f4;		S_f4;		0;1;1;1;;;	;;
		`f5;		G_f5;		S_f5;		0;1;1;1;;;	;;
		`f6;		G_f6;		S_f6;		0;1;1;1;;;	;;
		`f7;		G_f7;		S_f7;		0;1;1;1;;;	;;
		`f8;		G_f8;		S_f8;		0;1;1;1;;;	;;
		`f9;		G_f9;		S_f9;		0;1;1;1;;;	;;
		`f10;		G_f10;		S_f10;		0;1;1;1;;;	;;
		`f11;		G_f11;		S_f11;		0;1;1;1;;;	;;
		`f12;		G_f12;		S_f12;		0;1;1;1;;;	;;

		`fkeys;		G_fKeys;	;		0;0;1;0;;;	;;

		`arrowleft;	G_arrowLeft;	S_arrowLeft;	3;1;1;1;;;	`boolean;;
		`arrowright;	G_arrowRight;	S_arrowRight;	3;1;1;1;;;	`boolean;;
		`arrowup;	G_arrowUp;	S_arrowUp;	3;1;1;1;;;	`boolean;;
		`arrowdown;	G_arrowDown;	S_arrowDown;	3;1;1;1;;;	`boolean;;
	
		`arrowkeys;	G_arrowKeys;	;		0;0;1;0;;;	;;

		`settings;	G_settings;	;		0;0;0;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vmenu;	
	`super;		`variable `real `focused;
	`contains;	;	
	`create;	c_AXVMenu;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	verify_menu;
	`space;		;
	`at;		0;
	`constraints;	'wW';
	`container;	0;
	`reference;	`VMENU;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`mnemonics;	g_hmenuMnemonics;	s_hmenuMnemonics;	0;1;1;0;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vpane;
	`super;		`atContainer;
	`contains;	;	
	`create;	c_AXVPaneW;
	`be;		be_pane;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		1;
	`constraints;	;
	`container;	1;
	`reference;	`VPANE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes; 	;
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`vscale;	
	`super;		`slider;
	`contains;	;	
	`create;	c_AXVScale;
	`be;		;
	`set;		;
	`preset;	;
	`verify;	;
	`space;		;
	`at;		0;
	`constraints;	'wW';
	`container;	0;
	`reference;	`VSCALE;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
		(
		`editbegincb;	G_editBeginCB;		S_editBeginCB;		0;1;1;1;;;	;;
		`editendcb;	G_editEndCB;		S_editEndCB;		0;1;1;1;;;	;;
		);
ãã --------------------------------------------------------------------------------------------------------------
	`class;		`window;
	`super;		`container `pixeled `variable `real;
	`contains;	;	
	`create;	c_XScrollW;
	`be;		be_window;
	`set;		set_window;
	`preset;	preset_window;
	`verify;	verify_window;
	`space;		;
	`at;		0;
	`constraints;	;
	`container;	1;
	`reference;	`WINDOW;
	`knowable;	1;
	`ontology;	1;
	`null;		;	
	`attributes;
	(	
	`scrollsize;	g_windowSbSize;			S_windowSbSize;			0;1;1;0;;;	;;
ã	`scrollfg;	G_windowSbFg;			S_windowSbFg;			17;0;1;0;;;	`color1;;
	`scrollbg;	G_windowSbBg;			S_windowSbBg;			17;0;1;0;;;	`color1;;
	);
ãã --------------------------------------------------------------------------------------------------------------
	)
}


initialize{}:
	{
	if (`null¨_nc{`s;`SERVER}) û();		ã exit if there is a server

	initialize_globals{};
	defûinitialize_def{};
	bangû34;
	(cl;sc;cnt;cf;bf;sf;psf;vdf;spf;att;cc;cn;rf;kbl;dbl;dfl;k)û((2|Ébang)/Ébang)#<@1 ôbang!¢1Õdef;

	s.CLASSESûØcl;
	s.CONTAINERûØcn;
	s.CONTAINSû,¡cnt;

	s.PROPER_SUPERû,¡sc;
	construct_tree{};

	s.CLASS_FNSû,¡cf;
	s.BE_FNSû,¡bf;
	s.SET_FNSû,¡sf;
	s.PRESET_FNSû,¡psf;
	s.VERIFY_FNSû,¡vdf;
	s.SPACE_FNSû,¡spf;

	s.AT_TYPEûØatt;
	s.KNOWABLEûØkbl;
	s.ONTOLOGYûØdbl;

	((0=Ø#¡rf)/rf)û<`;
	s.REFERENCE_OBJECTSûØrf;
	s.REFERENCE_WIDGETSû(#CLASSES)Ò0;
	s.REFERENCE_LEADERû¢1;

	s.CONSTRAINTSûcc;
	s.CLASS_DEFAULTSû2Ù¡t\(<<`resize),¡<¡<¡(tû0<Ø#¡CONSTRAINTS)/CONSTRAINTS;
	s.NULL_DEFAULTSûdfl;
	install_class_defaults{`shell `text `graph;`exit `save `delete;(1;1;1)};
	s.CLASS_DEFAULTS_0ûCLASS_DEFAULTS;

	s.ATTRIBUTESûs.SETSûs.GETSûs.CONVERTERûs.EDITABLEûs.WIDGETABLEûs.ATTRIBUTE_TYPESûs.INTERNAL_GETSûs.INTERNAL_SETSûs.DOMAIN_SYMSûs.DEFAULTSûs.SYNTHESIZEDû();
	(iû#k) do
		{
		(rr;gg;ss;cfs;red;wfn;aty;igf;isf;aqf;dfs)ûinitialize_array{iØk};

		s.ATTRIBUTES[,]û	<rr;
		s.GETS[,]û		<gg;
		s.SETS[,]û		<ss;
		s.CONVERTER[,]û		<cfs;
		s.EDITABLE[,]û		<red;
		s.WIDGETABLE[,]û	<wfn;
		s.ATTRIBUTE_TYPES[,]û	<aty;
		s.INTERNAL_GETS[,]û	<igf;
		s.INTERNAL_SETS[,]û	<isf;
		s.DOMAIN_SYMS[,]û	<aqf;
		s.DEFAULTS[,]û		<dfs;
		s.SYNTHESIZED[,]û	<(#rr)Ò1;
		};

	s.CONVERTER_SETSû(Û;font_to_id;color_to_pixel;symbol_to_boolean;colors_to_pixels;color_to_sharpton;char_to_int;sym_to_char;symbol_to_false;symbol_to_true;null_to_char;null_to_one;null_to_neg_one;null_to_zero;null_to_ten;Û;Û;color_to_default;font_to_default;justify_to_symbol;null_to_zero_inf);
	s.CONVERTER_GETSû(Û;id_to_font;pixel_to_color;Û;pixels_to_colors;sharpton_to_color;int_to_char;Û;Û;Û;Û;Û;Û;Û;Û;Û;Û;pixel_to_color;id_to_font;Û;Û);

	pt_attrsû(
		`text;		g_printtextText;	s_printtextText;		`string;
		`font;		g_printtextFont;	s_printtextFont;		`string;
		`fg;		g_printtextForeground;	s_printtextForeground;		`string;  ã Bogus
		`bg;		g_printtextBackground;	s_printtextBackground;		`string;  ã Bogus
		`justify;	g_printtextJustification;s_printtextJustification;	`string;
		`style;		g_printtextStyle;	s_printtextStyle;		`string;
		`mode;		g_printtextMode;	s_printtextMode;		`string;
		`fontsize;	g_printtextFontSize;	s_printtextFontSize;		`scalar;  ã
		`leading;	g_printtextLeading;	s_printtextLeading;		`scalar;  ã Will work
		`toppixel;	g_printtextTopPixel;	s_printtextTopPixel;		`scalar;  ã will work
		`bottompixel;	g_printtextBottomPixel;	s_printtextBottomPixel;		`scalar;  ã will work
		`fontscale;	g_printtextFontScale;	s_printtextFontScale;		`scalar;  ã
		`fggrayscale;	g_printtextFgGrayScale;	s_printtextFgGrayScale;		`scalar;
		`bggrayscale;	g_printtextBgGrayScale;	s_printtextBgGrayScale;		`scalar;  ã
		`linewidth;	g_printtextLineWidth;	s_printtextLineWidth;		`scalar;  ã will work
		`row;		g_printtextRow;		s_printtextRow;			`scalar;
		`column;	g_printtextColumn;	s_printtextColumn;		`scalar;  ã used in breaktext
		`firstcolumn;	g_printtextFirstColumn;	s_printtextFirstColumn;		`scalar;  ã used in breaktext
		`xorigin;	g_printtextxOrigin;	s_printtextxOrigin;		`scalar;  ã used by banner
		`yorigin;	g_printtextyOrigin;	s_printtextyOrigin;		`scalar;  ã used by banner
		`topoffset;	g_printtextTopOffset;	s_printtextTopOffset;		`scalar;
		`bottomoffset;	g_printtextBottomOffset;s_printtextBottomOffset;	`scalar;
	);
	(syms;gets;sets;forms)û<@1ô4!¢1Õpt_attrs;
	s.PT_ATTRSûØsyms;
	s.PT_GETSûgets,<{G_no_op};
	s.PT_SETSûsets,<{S_no_op};
	s.PT_FORMSû(Øforms),`string;

	s.INITIALû		'.';
	s.IOû			`qio `dio `tio;
	s.SYMBOLSû		0 2Ò();
	s.USESû			(;);
	s.SHELL_TITLE_SPACEû	28;
	s.SHELL_BORDER_SPACEû	2 10;
	s.LAYOUT_CTû		25;

	s.VARIABLEû		();
	s.JUNKû			();
	s.WINDOWû		();
	s.LAYOUTû		();
	s.VGRIDû		();
	s.HGRIDû		();
	s.NOTEBOOKû             ();
	s.COLLAPSIBLEû		();
	s.VPANEû		();
	s.HPANEû		();
	s.VIEWû			0 0Ò'';
	s.ARRAYû		É0;
	s.MATRIXû		É0 0;
	s.SCALARû		0;
	s.PASSWORDû		'';
	s.COMMANDû		'';
	s.LABELû		'';
	s.TEXTû			'';
	s.BUTTONû		();
	s.PAGEû			0 0Ò'';
	s.VSCALEû		0;
	s.HSCALEû		0;
	s.VGAUGEû		0;
	s.HGAUGEû		0;
	s.IMAGEû		();
	s.SLOTû			(;);
	s.RADIOû		(;);
	s.CHECKû		(;);
	s.ACTIONû		(;);
	s.CHOICEû		(;);
	s.VMENUû		(;);
	s.HMENUû		(;);
	s.TREEû			(;);
	s.TABLEû		`TABLE_FIELD;
	s.GRAPHû		`GRAPH_TRACE;
        s.D3GRAPHû		0 0Ò0.0;
	s.TABLE_FIELDû		É0;
	s.GRAPH_TRACEû		1.«É10;
	s.MENUû			`MENU_PULLDOWN;
	s.MENU_PULLDOWNû	`MENU_TOGGLE `MENU_BUTTON `MENU_SEPARATOR;
	s.MENU_TOGGLEû		0;
	s.MENU_BUTTONû		();
	s.MENU_SEPARATORû	();
	s.OBJECTû		();
	s.COLORû		'';
	s.REPORTû		();
	s.REPORTCOLUMNû		();
	s.REPORTPARAGRAPHû	'';
	s.REPORTRULEû		();

	s.WM_SAVE_YOURSELFû	();
	s.WM_SAVE_YOURSELF_FILEû();

	save_yourself_variables{()};

	s.VERIFYû		0;
	s.WPû			100;
	s.LINECOLORSû		`red`green`deepskyblue`violetred`yellow`cyan`pink`white;
	s.FILLCOLORSû		`red`green`deepskyblue`violetred`yellow`cyan`pink`white;
	s.LINESTYLESû		`solid`dash`dotdash`dot;
	s.TRACESYMBOLSû		`cross`circle`circlefilled`triangle`trianglefilled`square`squarefilled`diamond`diamondfilled`xsym`star;
	s.EDITSPACEû		256;
	s.DATASPACEû		9;
	s.WSNAMEû		'A+';
	s.SHELLû		¢1;
	s.BEEPû			0;
	s.BUSYû			0;
	s.GRAYû			1;
	s.CLOCKû		1;
	s.MENUDEFAULTMNEMONICû  0;
	s.DOUBLECLICKINTERVALû  250;
	s.BACKINGSTOREûbgetBackingStoreOption{};
	s.NAû			(`int `float `char `sym `box `func `null;(¢999999999;¢999999999.0;' ';`;<();<{Û};<()));

	s.PARAMETER_DEFAULTSû_alsf{
		(
		`OF;			OF;
		`QUIET;			QUIET;
		`ABORT;			ABORT;
		`ERROR;			ERROR;
		`EXIT;			EXIT;
		`WP;			WP;
		`LINECOLORS;		LINECOLORS;
		`FILLCOLORS;		FILLCOLORS;
		`LINESTYLES;		LINESTYLES;
		`TRACESYMBOLS;		TRACESYMBOLS;
		`EDITSPACE;		EDITSPACE;
		`DATASPACE;		DATASPACE;
		`WSNAME;		WSNAME;
		`SHELL;			SHELL;
		`BEEP;			BEEP;
		`GRAY;			GRAY;
		`CLOCK;			CLOCK;
		`MENUDEFAULTMNEMONIC;	MENUDEFAULTMNEMONIC;
		`DOUBLECLICKINTERVAL;   DOUBLECLICKINTERVAL;
		`BACKINGSTORE;		BACKINGSTORE;
		`BUSY;			BUSY;
		`NA;			NA;
		`VERIFY;		VERIFY;
		`DISCONNECT;		DISCONNECT;
		`FONT;			FONT;
		`COLORS;		COLORS;
		`WM_SAVE_YOURSELF;	WM_SAVE_YOURSELF;
		`WM_SAVE_YOURSELF_FILE;	WM_SAVE_YOURSELF_FILE;
		`WM_SAVE_YOURSELF_CTL;	WM_SAVE_YOURSELF_CTL;
		`WM_SAVE_YOURSELF_DAT;	WM_SAVE_YOURSELF_DAT
		)
	};

	set_auto_workspace_callback{};

	s.AUTOBUILDû		0;
	s.AUTOSCRIPTû		1;
	s.AUTOREPARENTû		1;
	s.AUTORESHOWû		1;
	s.AUTONEWSHOWû		0;
	s.AUTOPOSITIONû		1;
	s.AUTOEDITSPACEû	1;
	s.AUTORESPACEû		0;
	s.AUTOPRINTABLEû	1;
	s.AUTOEVALUATEû		1;
	s.AUTOBLANKû		();
	s.AUTODOCû		"";
	s.AUTOLITERALû		0;
	s.AUTOEXECUTEû		1;
	s.AUTOCOPYû		0;
	s.AUTOHASû		0;

	s.SWITCH_DEFAULTSû_alsf{
		(
		`AUTOBUILD;		AUTOBUILD;
		`AUTOREPARENT;		AUTOREPARENT;
		`AUTORESHOW;		AUTORESHOW;
		`AUTONEWSHOW;		AUTONEWSHOW;
		`AUTOPOSITION;		AUTOPOSITION;
		`AUTOEDITSPACE;		AUTOEDITSPACE;
		`AUTORESPACE;		AUTORESPACE;
		`AUTOSCRIPT;		AUTOSCRIPT;
		`AUTOWS;		AUTOWS;
		`AUTOPRINTABLE;		AUTOPRINTABLE;
		`AUTOEVALUATE;		AUTOEVALUATE;
		`AUTOBLANK;		AUTOBLANK;
		`AUTOEXECUTE;		AUTOEXECUTE;
		`AUTOCOPY;		AUTOCOPY;
		`AUTOLITERAL;		AUTOLITERAL;
		`AUTODOC;		AUTODOC;
		`AUTOHAS;		AUTOHAS
		)
	};

	s.PRINT_DEFAULTSû(;);

	s.OBJECT_DEFAULTSû_alsf{
		(
		`WS;		WS;
		`MSG;		MSG
		)
	};

	s.EVENT_CALLBACKSûrsf{
		(
		`arrowleft;	(call_arrowKey;`leftTo);
		`arrowright;	(call_arrowKey;`rightTo);
		`arrowup;	(call_arrowKey;`upTo);
		`arrowdown;	(call_arrowKey;`downTo);
		`addtrace;	(call_graphAddTrace;);
		`copytrace;	(call_graphCopyTrace;);
		`addtexttrace;	(call_graphAddTextTrace;);
		`copytexttrace;	(call_graphCopyTextTrace;);
		`addpoint;	(call_traceAddPoint;);
		`textactivate;	(call_traceTextActivate;);
		`refer;		(call_refer;);
		`delete;	(call_delete;);
		`rband;		(call_rband;);
		`insertbelow;	(call_insert;1);
		`insertabove;	(call_insert;0);
		`exit;		(call_exit;);
		`save;		(call_save;);
		`selectcol;	(call_matrixSelectCol;);
		`selectrow;	(call_matrixSelectRow;);
		`cornerselect;	(call_matrixSelectCorner;);
		`setrow;	(call_setScroll;`vscrollwith`row);
		`setcol;	(call_setScroll;`hscrollwith`col);
		`setfirstrow;	(call_setScroll;`vscrollwith`firstrow);
		`setfirstcol;	(call_setScroll;`hscrollwith`firstcol);
		)
	};

	set_message_callback{};

	append_reference{`s;`VERIFY;1;<{set_verify};};
	append_reference{`s;`GRAY;1;<{set_gray};};
	append_reference{`s;`BUSY;1;<{set_busy};};
	append_reference{`s;`CLOCK;1;<{set_clock};};
	append_reference{`s;`BEEP;1;<{set_beep};};
	append_reference{`s;`MENUDEFAULTMNEMONIC;1;<{set_menuDefaultMnemonic};};
	append_reference{`s;`DOUBLECLICKINTERVAL;1;<{set_doubleClickInterval};};
	append_reference{`s;`BACKINGSTORE;1;<{set_backingstore};};

	s.MENUDEFAULTMNEMONICûs.MENUDEFAULTMNEMONIC;  ã  To initialize the value in C++ land.

	reference_data{};

	flat_structure{};

	set_save_yourself_callback{};

	documentation_variables{};

	}
	
documentation_variables{}:
	{
	s.CONVERTER_DESCû(;;;;;;;;"() ý 0";"() ý 1";"() ý ''";"() ý 1";"() ý ¢1";"() ý 0";"() ý 10";;;;;;"() ý 0, Inf ý Maxint");

	s.CLASS_DESCû_alsf{
		(
		`ur;		"root of all classes -- no attributes";
		`bound;		"bound variable attributes";
		OBJECT_CLASS;	"invisible reference class -- instances are always valid";
		`color;		"special color window -- allocates and frees bg";
		`virtual;	"a virtual object cannot be directly bound or freed";
		`focused;	"a focused object can accept or reject focus";
		`buttons23;	"buttons 2 and 3 up and down callbacks";
		`print;		"print action and attributes";
		`positioned;	"children of a layout are positioned, sized, and constrained";
		`extended;	"an uncontained object has location and extent expressed in pixels";
		`shell;		"attributes of the shell of an uncontained object";
		`real;		"a real object can be directly bound and freed";
		`insert;	"attributes possessed by an object which can be inserted into";
		`delete;	"attributes possessed by an object which can be deleted from";
		`key;           "typeable-character keypress callback events";
		`pixeled;	"sizing attributes of pixel-based objects, e.g. `graph and `window";
		`sized;		"equal-sizing attributes of objects with geometry, e.g. `layout and `action";
		`edit;		"array editing attributes";
		`symbol;	"attributes which travel with any symbol";
		`variable;	"attributes which travel with any variable";
		`vContainer;	"virtual containers (e.g. `graph and `table) have virtual children";
		`vContained;	"virtual children (e.g. `graphTrace and `tableField) have virtual parents";
		`container;	"containers (e.g. `layout and `window) have real children";
		`vector;	"attributes of objects with homogenous parts";
		`slider;	"attributes of slider-type objects";
		`report;	"report printing class";
		`vgauge;	"vertical gauge";
		`hgauge;	"horizontal gauge";
		`vscale;	"vertical scale";
		`hscale;	"horizontal scale";
		`menu;		"menubar object";
		`menuPulldown;	"pulldown menu pane";
		`menuSeparator;	"separator in a menu pane";
		`menuToggle;	"radio/check-togglebutton in a menu pane";
		`menuButton;	"pushbutton in a menu pane";
		`slotfiller;	"attributes of all slot-filler objects";
		`slot;		"slotfiller with input; slot values are arbitrary arrays";
		`boxed;		"non-menu slotfillers";
		`check;		"boolean slotfiller to choose any of many";
		`radio;		"boolean slotfiller to choose exactly one of many";
		`choice;	"boolean slotfiller with cascading exactly-one-of-many choice list";
		`action;	"slotfiller of buttons";
		`vmenu;		"vertical nested (recursive) slotfiller of cascading actions";
		`hmenu;		"horizontal nested (recursive) slotfiller of cascading actions";
		`window;	"scrolled container of one child";
		`layout;	"container of many, organized in virtual rows and columns with span";
		`collapsible;   "layout of with a bar to collapse its contents";
		`vpane;		"layout of vertically stacked children with horizontal panes";
		`hpane;		"layout of horizontally stacked children with vertical panes";
		`array;		"rank 1 or 2 array with input on cells";
		`matrix;	"rank 2 non-character array with row and column labelling";
		`view;		"character matrix, output only";
		`text;		"character vector text-editor with embedded newlines";
		`tree;          "nested slotfiller displays as horizontal tree";
		`scalar;	"Any array, with single input";
		`password;	"Character vector of userid";
		`command;       "Input character-vector; callback on keystrokes";
		`label;		"character array rank ¤ 2";
		`button;	"function scalar or 2-element function vector";
		`page;		"character matrix with scalar-wise attributes";
		`tableField;	"virtual child of a table";
		`graphTrace;	"virtual child of a graph";
		`table;		"virtual container whose tableField children scroll together";
		`graph;		"virtual container whose graphTrace children are drawn on the same pixel-space";
		`builder;	"classes with autoposition and autobuilder characteristics";
		`vgrid;		"container with vertical x-y positioning";
		`hgrid;		"container with horizontal x-y positioning";
		`atContainer;	"container with at-positioning";
		`report;	"virtual class for writing reports"
		)
		};

	s.ATTRIBUTE_DESCû_alsf{
		(
		`parent          ;"returns variable containing object";
		`shell           ;"returns top-level variable containing object";
		`ancestors       ;"vector of objects containing object";
		`mapped          ;"1 if object is mapped, else 0";
		`active		 ;"1 if object is in the screen-referencing loop, else 0";
		`freeze          ;"stops updates until `freeze set to 0";
		`raise           ;"action -- brings object to front";
		`lower           ;"action -- sends object to back";
		`key             ;"foo{s;c;v} is called when key is pressed";
		`verify		 ;"if 1, verify update (debugging)";
		`2up             ;"foo{s;c;v} is called when button 2 is released";
		`2down           ;"foo{s;c;v} is called when button 2 is depressed";
		`3up             ;"foo{s;c;v} is called when button 3 is released";
		`3down           ;"foo{s;c;v} is called when button 3 is depressed";
		`request	 ;"action -- notify selection";
		`primary	 ;"get/set selection";
		`notify		 ;"foo{s;c;v} is called on selection notify";
		`clear		 ;"foo{s;c;v} is called on selection clear";
		`select          ;"foo{s;c;v} is called on selection event";
		`setrow          ;"0 or 1, foo{s;c;v} is called on change of row";
		`setcol          ;"0 or 1, foo{s;c;v} is called on change of col";
		`setfirstrow     ;"0 or 1, foo{s;c;v} is called on change of firstrow";
		`setfirstcol     ;"0 or 1, foo{s;c;v} is called on change of firstcol";
		`vscrollwith	 ;"symbols of variables variable scrolls with vertically";
		`hscrollwith	 ;"symbols of variables variable scrolls with horizontally";
		`refer           ;"0 or 1, or foo{s;c;v} is called on reference event";
		`f1              ;"foo{s;c;v} is called when f1 is pressed and object has focus";
		`f2              ;"foo{s;c;v} is called when f2 is pressed and object has focus";
		`f3              ;"foo{s;c;v} is called when f3 is pressed and object has focus";
		`f4              ;"foo{s;c;v} is called when f4 is pressed and object has focus";
		`f5              ;"foo{s;c;v} is called when f5 is pressed and object has focus";
		`f6              ;"foo{s;c;v} is called when f6 is pressed and object has focus";
		`f7              ;"foo{s;c;v} is called when f7 is pressed and object has focus";
		`f8              ;"foo{s;c;v} is called when f8 is pressed and object has focus";
		`f9              ;"foo{s;c;v} is called when f9 is pressed and object has focus";
		`f10             ;"foo{s;c;v} is called when f10 is pressed and object has focus";
		`f11             ;"foo{s;c;v} is called when f11 is pressed and object has focus";
		`f12             ;"foo{s;c;v} is called when f12 is pressed and object has focus";
		`arrowleft	 ;"foo{s;c;v} is called when shift-left-arrow key is pressed and object has focus";
		`arrowright	 ;"foo{s;c;v} is called when shift-right-arrow key key is pressed and object has focus";
		`arrowup	 ;"foo{s;c;v} is called when shift-up key-arrow key is pressed and object has focus";
		`arrowdown	 ;"foo{s;c;v} is called when shift-down-arrow key key is pressed and object has focus";
		`arrowkeys	 ;"slotfiller of arrowkeys and functions, resolved to an object";
		`fkeys		 ;"slotfiller of fkeys and functions, resolved to object";
		`arrowkeus	 ;"slotfiller of arrowkeys and functions, resolved to object";
		`print           ;"action -- prints object to print.ps or printfile";
		`printfile       ;"file to print to";
		`printstyle	 ;;
		`printmode       ;;
		`printdefaultfont;"Å default font of print image";
		`printsize       ;;
		`printoutputmode ;;
		`pageorientation;;
		`printleft       ;"left margin width in inches";
		`printright      ;"right margin width in inches";
		`printtop        ;"top margin width in inches";
		`printbottom     ;"bottom margin width in inches";
    		`printdisfile	 ;"name of printfile";
    		`printdisfont	 ;"font id";
    		`printdisstyle	 ;	;
    		`printdisorientation;	;
    		`printdisleftmargin;	"inches";
    		`printdisrightmargin;	"inches";
    		`printdistopmargin;	"inches";
    		`printdisbottommargin;	"inches";
    		`printdisrulewidth;	"pixels";
		`report		 	;"action -- prints object in report style";
		`reportpagestatus	;"foo{s;c;v} is called on page break";
		`reportpages		;"pages to print";
		`reporttabs		;"vector of tabsettings";
		`reportpagenumbering	;"1 (default) or 0 (to suppress page numbering)";
		`reportpagetotal	;;
		`reportpagecount	;;
		`reportfont	 	;;
		`reportstyle		;;
		`reporttitlefont 	;;
		`reporttitlestyle	;;
		`reportrowsepwidth	;;
		`reportcolsepwidth	;;
		`reportcelllinewidth	;;
		`reportframelinewidth	;;
		`reportspacing   	;;
		`reportleading	 	;;
		`reportlinefg	 	;;
		`reportlinestyle 	;;
		`reportrowlinestyle	;;
		`reportcollinestyle	;;
		`reporttitleheight	;;
		`reportheader    	;;
		`reportheaderfont	;;
		`reportheaderfg  	;;
		`reportheaderoffset	;;
		`reportfooter	 	;;
		`reportfooterfont	;;
		`reportfooterfg	 	;;
		`reportfooteroffset	;;
		`reportpagenum	 	;;
		`reportpagenumfg 	;;
		`reportpagenumfont	;;
		`reportpagenumoffset	;;
		`reportpagenumtext	;;
		`reportpagenumstyle	;;
		`reportheaderstyle	;;
		`reportfooterstyle	;;
		`be		 ;"dûfoo{s;d;i;p;c;v} is called from c,v to bind a child d";
		`at              ;"position in layout according to <vrow, vcol, #vrows, #vcols>";
		`resize          ;"constrain v/h behavior on resize (cumulative unless '.' Å string)";
		`vrow            ;"virtual row in layout";
		`vcol            ;"virtual column in layout";
		`vrows           ;"number of virtual rows in layout";
		`vcols           ;"number of virtual columns in layout";
		`w               ;"if 1, make initial width in layout = natural width";
		`W               ;"if 1, do not change width when layout is resized";
		`h               ;"if 1, make initial height in layout = natural height";
		`H               ;"if 1, do not change height when layout is resized";
		`l               ;"if 1, left-justify object in virtual cell";
		`r               ;"if 1, right-justify object in virtual cell";
		`t               ;"if 1, top-justify object in virtual cell";
		`b               ;"if 1, bottom-justify object in virtual cell";
		`R		 ;"if 1, make virtual rows = maximum virtual row";
		`C		 ;"if 1, make virtual columns = maximum virtual column";
		`ys              ;"number of pixels in the y-direction";
		`xs              ;"number of pixels in the x-direction";
		`yxs		 ;"<ys,xs> of object";
		`y               ;"y position of top-left corner";
		`x               ;"x position of top-left corner";
		`yx              ;"<y,x>-position of top-left corner";
		`Y               ;"absolute y position of top-left corner";
		`X               ;"absolute x position of top-left corner";
		`YX              ;"absolute <y,x>-position of top-left corner";
		`extent		 ;"<y,x,ys,xs>";
		`icontitle 	 ;"title of icon";
		`icon 		 ;"n«m bitmap or (rs;cs;encoded-int-vector) of icon pattern";
		`shelltitle      ;"title of shell";
		`resizeable      ;"if 1, shell can be resized";
		`leftfoot        ;"text of left window-footer";
		`rightfoot       ;"text of right window-footer";
		`foot            ;"if 1, show window-footer";
		`head            ;"if 1, show window-hooder";
		`pin             ;"if 1, popup shell is pinned";
		`iconic          ;"if 1, window is a top-level shell";
		`leader          ;"leader of window";
		`followers       ;"followers of window";
		`followertree    ;"nested array of followers of window";
		`tablist         ;"vector of objects in order of traversal";
		`arrowlist	 ;"matrix of [`from dir `to], where dir Å `left `right `up `down";
		`exit            ;"0 or 1, or foo{s;c;v} is called on quit or dismiss event";
		`atsector	 ;"place window at sector (i,j) of virtual desktop (`here for here)";
		`fullscreen	 ;"make window exactly as large as the screen";
		`extents	 ;"(`a ... `z;(y,x,ys,xs;...;y,x,ys,xs)) of real non-containers in shell";
		`bg              ;"background color of object";
		`stars		 ;"if 1, then if space < out, fill with stars";
		`hl              ;"color of object when object has focus";
		`hlthickness     ;"width in pixels of focus color";
		`shadowthickness ;"width in pixels of shadow around object";
		`state           ;"state of object expressed as a script (recursive on containers)";
		`stateself       ;"state of object expressed as a script (not recursive on containers)";
		`settings        ;"slot-filler of all or specified current non-default settings of object";
		`show            ;"action -- map objects and shell";
		`realize         ;"action -- map objects but not shell";
		`hide            ;"action -- unmap objects and shell";
		`sensitive       ;"if 0, window and children insensitive";
		`dynamic         ;"if 1, window and children resize dynamically";
		`focus           ;"give object focus (traverse to object)";
		`naturalsize	 ;"recompute natural size of object; on a container --> on children";
		`acceptfocus	 ;"if 1, accept focus";
		`tabto           ;"object tabs to object specified";
		`tabfrom         ;"object tabs from object specified";
		`leftto	 	 ;"object arrows left to object specified";
		`rightto	 ;"object arrows right to object specified";
		`upto	 	 ;"object arrows up to object specified";
		`downto	 	 ;"object arrows down to object specified";
		`refresh	 ;"refresh display-related attributes, e.g. `fg and `out";
		`insertabove     ;"0 or 1, or foo{s;c;v} is called on insertabove event";
		`insertbelow     ;"0 or 1, or foo{s;c;v} is called on insertbelow event";
		`delete          ;"0 or 1, or foo{s;c;v} is called on delete event";
		`is		 ;"foo{s;c;v} is called after object is bound";
		`in              ;"valueûfoo{s;d;i;p;c;v} is called to convert a string";
		`out             ;"stringûfoo{s;d;i;p;c;v} is called to convert a value";
		`blank		 ;"value of print-representation of na-value";
		`doc		 ;"documentation on variable (recommended: character vector or matrix)";
		`execute	 ;"if 0, use _scfi{} to retain numeric typing";
		`has		 ;"if 1, report every attribute setting on variable";
		`copy		 ;"if 0, use na value, else copy on insert";
		`done            ;"foo{s;d;i;p;c;v} is called when screen-update cycle is finished";
		`na		 ;"na value for `insertabove, `insertbelow";
		`protect         ;"booleanûfoo{s;d;i;p;c;v} is called to protect a value";
		`protected       ;"1 if protected, else 0";
		`fg              ;"colorûfoo{s;d;i;p;c;v} is called for foreground of object";
		`font            ;"fontûfoo{s;d;i;p;c;v} is called for font of object";
		`geometry        ;"geometryûfoo{s;d;i;p;c;v} is called for geometry of slot-filler";
		`title           ;"title of object";
		`titlefg         ;"foreground of title of object";
		`titlefont       ;"font of title of object";
		`label           ;"stringûfoo{s;d;i;p;c;v} is called for label of object";
		`labelfg         ;"colorûfoo{s;d;i;p;c;v} is called for foreground of label";
		`labelfont       ;"fontûfoo{s;d;i;p;c;v} is called for font of label";
		`editspace       ;"if 0, the same as `space, else infinite";
		`space           ;"width of data display";
		`respace	 ;"if 1, increase space on default `out if necessary";
		`evaluate        ;"if 0, avoid evaluation on this variable via %";
		`script		 ;"if 1, s.script{} derives S expression for object";
		`set             ;"foo{s;d;i;p;c;v} is called after variable is assigned (_scb{})";
		`preset          ;"valueûfoo{s;d;i;p;c;v} is called before variable is assigned (_spcb{})";
		`eval            ;"foo{s;d;i;p;c;v} is called after variable is evaluated";
		`class           ;"class to which object is bound";
		`bound           ;"1 if object is bound, else 0";
		`ws		 ;"if 1, allow object to be WS";
		`printable	 ;"if 1, object is printable";
		`children        ;"objects contained in object";
		`recursively	 ;"apply (`attribute;value) to self and all descendents";
		`descendents     ;"vector of objects contained in object";
		`familytree	 ;"nested slotfiller of descendents represents container-hierarchy";
		`reparent        ;"if 1, orphaned object reparented to top-level, else freed";
		`reshow          ;"if 1, reparented object shown if originally shown, else hidden";
		`newshow         ;"if 1, newly parented object is unconditionally shown";
		`rowbg           ;"background color of selected row";
		`selectbg        ;"background color of selected cell";
		`selected        ;"element selected";
		`row             ;"row selected";
		`col             ;"column selected";
		`firstrow        ;"first row displayed";
		`firstcol        ;"first column displayed";
		`rows            ;"number of rows displayed";
		`cols            ;"number of columns displayed";
		`size		 ;"restore current size";
		`index           ;'vector of indices of flagged ("indexed") rows';
		`indexbg         ;"background color of indexed rows";
		`scrollsize	 ;"scrollbar width";
		`vscrollsize	 ;"vertical scrollbar width";
		`hscrollsize	 ;"horizontal scrollbar width";
		`scrollfg	 ;"scrollbar foreground";
		`rowsep          ;"row separators every n rows";
		`colsep          ;"column separators every n columns";
		`cycle           ;"milliseconds of color-cycle timer";
		`colors          ;"colorsûfoo{s;d;i;p;c;v} or color-vector to cycle on update to cell";
		`editbg          ;"background color of editor";
		`editfg          ;"foreground color of editor";
		`colspace	 ;"foo{s;d;i;p;c;v} returns a vector of matrix column spaces";
		`collabelrows	 ;"number of rows in column labels of a matrix";
		`rowindex	 ;'vector of indices of flagged ("indexed") row labels';
		`colindex	 ;'vector of indices of flagged ("indexed") column labels';
		`rowindexbg	 ;"background color of indexed row labels";
		`colindexbg	 ;"background color of indexed column labels";
		`cornerindex	 ;"1 if corner label is indexed, else 0";
		`cornerindexbg	 ;"background color of indexed corner label";
		`valid		 ;"password validity (0/1)";
		`validate        ;"foo{s;c;v} is called when password entered";
		`fill		 ;"character scalar to fill password, or '' for no fill";
		`save            ;"0 or 1, or foo{s;c;v} for `text is called on Ctl-s";
		`edit		 ;"turn editor on (1) or off (0)";
		`buffer          ;"contents of command/text buffer (character vector)";
		`cursor          ;"position of cursor in command buffer";
		`justify         ;;
		`margin		 ;"margin around label in pixels (default = 2)";
		`position        ;"if 1, simple vector layout v ûý Ý¡v, else objects at 0 0 1 1";
		`build           ;"if 1, simple vector layout uses autobuilder";
		`lockposition    ;"if 1, do not reposition cells of a layout";
		`locksize        ;"if 1, do not resize layout or notebook";
		`structure	 ;"slotfiller of `at of each of children of object";
		`constraints	 ;"slotfiller of `resize of each of children of object";
		`vrowspace	 ;"space between virtual rows of a layout";
		`vcolspace	 ;"space between virtual columns of a layout";
		`titlejustify	 ;;
		`valuejustify	 ;;
		`subtitlejustify ;;
		`mintitlejustify ;;
		`maxtitlejustify ;;
		`displayjustify	 ;;
		`valuefont	 ;;
		`mintitlefont	 ;;
		`maxtitlefont	 ;;
		`subtitlefont	 ;;
		`labelout	 ;;
		`sliderbg	 ;;
		`valuefg	 ;;
		`subtitlefg	 ;;
		`mintitlefg	 ;;
		`maxtitlefg	 ;;
		`displayfg	 ;;
		`displayfont	 ;;
		`mintitle	 ;;
		`maxtitle	 ;;
		`min	 	 ;;
		`max	 	 ;;
		`inc	 	 ;;
		`pageinc	 ;;
		`displayinc	 ;;
		`sliderheight	 ;;
		`sliderwidth	 ;;
		`majorticksize	 ;;
		`minorticksize	 ;;
		`minortickcount  ;;
		`colormap        ;"(n«2) matrix of `bg `fg index-colors";
		`cursor 	 ;"(row,col) of cursor";
		`color           ;"matrix of indices into `colormap";
		`bold            ;"boolean matrix of normal/bold";
		`blink           ;"boolean matrix of normal/blink";
		`blinkrate	 ;"blink rate in milliseconds";
		`underline       ;"boolean matrix of normal/underline";
		`box             ;"matrix of <row, col, #rows, #cols> of boxes";
		`line            ;"matrix of <row, col, #rows, #cols> of lines";
		`linewidth	 ;"percentage of space character allotted for line";
		`boxcolor        ;"vector of colors of boxes";
		`rband           ;"foo{s;c;v} is called when rubberband box created";
		`rbandbox        ;"<row, col, #rows, #cols> of rubberband box";
		`keysym          ;"keysym = (ascii_code;boolean_vector)";
		`referpoint	 ;"foo{s;c;v} on reference to point in trace";
		`selectfield     ;"foo{s;c;v} is called when field label is selected";
		`field           ;"field selected (col#table)";
		`selectedfield   ;"(row;field) selected";
		`firstfield      ;"first field displayed (firstcol)";
		`fields          ;"number of fields displayed (cols)";
		`fixedfields	 ;"number of fixed fields";
		`selectcol       ;"0 or 1 or foo{s;c;v} is called when col label is selected";
		`selectrow	 ;"0 or 1 or foo{s;c;v} is called when row label is selected";
		`selectcorner	 ;"0 or 1 or foo{s;c;v} is called when corner label is selected";
		`movelimit	 ;"movement direction constraints Å `none `x `y";
		`selectable	 ;"if 1, trace can be selected and manipulated by the mouse pointer";
		`style           ;"foo{s;d;i;p;c;v} Å `line `scatter `ls `bar `close `hl `hlc `hloc `candle";
		`linewidth       ;"line_widthûfoo{}";
		`linestyle       ;"foo{s;d;i;p;c;v} Å `solid `dash `dotdash `dot";
		`linecolor       ;"trace_colorûfoo{}";
		`fillcolor       ;"fill_colorûfoo{}";
		`legend          ;"legend_stringûfoo{}";
		`symbol          ;;
		`symbolsize	 ;"size in pixels of (scatter) symbol (0 ¤ symbolsize ¤ 100)";
		`textactivate    ;"foo{s;c;v} is called when a text-trace creation-event is detected";
		`gradient 	 ;"if 1, line and fillcolor function called at every point";
		`yaxis           ;;
		`xaxis           ;;
		`mode		 ;;
		`left 		 ;"distance between left axis and window - fraction of graph width";
		`right 		 ;"distance between right axis and window - fraction of graph width";
		`top 		 ;"distance between top axis and window - fraction of graph width";
		`bottom 	 ;"distance between bottom axis and window - fraction of graph width";
		`xleft		 ;"distance between left x axis and trace - fraction of graph width";
		`xright		 ;"distance between right x axis and trace - fraction of graph width";
		`Xleft		 ;"distance between left X axis and trace - fraction of graph width";
		`Xright		 ;"distance between right X axis and trace - fraction of graph width";
		`ytop            ;"distance between top y axis and trace - fraction of graph width";
		`ybottom         ;"distance between bottom y axis and trace - fraction of graph width";
		`Ytop            ;"distance between top Y axis and trace - fraction of graph width";
		`Ybottom         ;"distance between bottom Y axis and trace - fraction of graph width";
		`barwidth        ;"maximum bar width for all bar type traces";
		`depth           ;"not yet implemented";
		`titlejustify	 ;;
		`selectdistance  ;"distance in pixels from which a point may be selected for moving";
		`subtitle        ;"subtitle text";
		`subtitlefg      ;"foreground color of subtitle";
		`subtitlefont    ;"font of subtitle";
		`subtitlejustify ;;
		`footnote        ;"footnote text";
		`footnotefg      ;"foreground color of footnote";
		`footnotefont    ;"font of footnote";
		`footnotejustify ;"justification of footnote";
		`legendfont      ;"font of legend text";
		`legendstyle     ;;
		`legend          ;;
		`ylegend         ;"y-coordinate of top-left corner of legend when `legendpos is `xy";
		`ytickstyle      ;;
		`xlegend         ;"x-coordinate of top-left corner of legend when `legendpos is `xy";
		`xtickstyle      ;;
		`axis            ;;
		`xtitlefont  	 ;"font of x axis title";
		`xfg          	 ;"foreground color of x axis";
		`ytitlefont  	 ;"font of y axis title";
		`yfg         	 ;"foreground color of y axis";
		`Xtitlefont  	 ;"font of X axis title";
		`Xfg         	 ;"foreground color of X axis";
		`Ytitlefont  	 ;"font of Y axis title";
		`Yfg         	 ;"foreground color of Y axis";
		`xlabelheight    ;"height in pixels of x label";
		`xlabelwidth     ;"width in pixels of x axis label";
		`xlabelfont	 ;"font of x axis label";
		`ylabelheight    ;"height in pixels of y axis label";
		`ylabelwidth     ;"width in pixels of y axis label";
		`ylabelfont	 ;"font of y axis label";
		`Xlabelheight    ;"height in pixels of X axis label";
		`Xlabelwidth     ;"width in pixels of X axis label";
		`Xlabelfont	 ;"font of X axis label";
		`Ylabelheight    ;"height in pixels of Y axis label";
		`Ylabelwidth     ;"width in pixels of Y axis label";
		`Ylabelfont	 ;"font of Y axis label";
		`ymode           ;;
		`Ymode           ;;
		`rule            ;;
		`rulewidth       ;"width in pixels of rule";
		`grid            ;;
		`gridstyle       ;;
		`gridfg          ;"foreground color of grid";
		`gridwidth       ;"width in pixels of grid line";
		`zero            ;;
		`zerostyle       ;;
		`zerofg          ;"foreground color of zero";
		`zerowidth       ;"width in pixels of zero line";
		`xmajorticksize  ;"length in pixels of x major ticks";
		`xminorticksize  ;"length in pixels of x minor ticks";
		`ymajorticksize  ;"length in pixels of y major ticks";
		`yminorticksize  ;"length in pixels of y minor ticks";
		`Xmajorticksize  ;"length in pixels of X major ticks";
		`Xminorticksize  ;"length in pixels of X minor ticks";
		`Ymajorticksize  ;"length in pixels of Y major ticks";
		`Yminorticksize  ;"length in pixels of Y minor ticks";
		`xtitle          ;"x-axis title";
		`xtitlefg        ;"foreground color of x-axis title";
		`xtitlejustify	 ;;
		`xlabel          ;"labelûfoo{s;d;i;p;c;v} is called for x axis label vector";
		`xlabelout       ;;
		`xlabeljustify   ;;
		`xmin            ;"minimum x value";
		`xmax            ;"maximum x value";
		`xinc            ;"x increment value";
		`xminorticks     ;"number of minor ticks between majorticks on x axis";
		`xextent         ;"returns min, max, and scale values for the x axis";
		`Xtitle          ;"X axis title";
		`Xtitlefg        ;"foreground color of X axis title";
		`Xtitlejustify	 ;;
		`Xlabel          ;"labelûfoo{s;d;i;p;c;v} is called for X axis label vector";
		`Xlabelout       ;;
		`Xlabeljustify   ;;
		`Xmin            ;"minimum X value";
		`Xmax            ;"maximum X value";
		`Xinc            ;"X increment value";
		`Xminorticks     ;"number of minor ticks between majorticks on X axis";
		`Xextent         ;"returns min, max, and scale values for the X axis";
		`ytitle          ;"y axis title";
		`ytitlefg        ;"foreground color of y axis title";
		`ytitlejustify	 ;;
		`ytitlestyle     ;;
		`ylabel          ;"labelûfoo{s;d;i;p;c;v} is called for y axis label vector";
		`ylabelout       ;;
		`ylabeljustify   ;;
		`ymin            ;"minimum y value";
		`ymax            ;"maximum y value";
		`yinc            ;"y increment value";
		`yminorticks     ;"number of minor ticks between majorticks on y axis";
		`yextent         ;"returns min, max, and scale values for the y axis";
		`Ytitle          ;"Y axis title";
		`Ytitlefg        ;"foreground color of Y axis title";
		`Ytitlejustify	 ;;
		`Ytickstyle	 ;;
		`Ytitlestyle     ;;
		`Ylabel          ;"labelûfoo{s;d;i;p;c;v} is called for Y axis label vector";
		`Ylabelout       ;;
		`Ylabeljustify   ;;
		`Ymin            ;"minimum Y value";
		`Ymax            ;"maximum Y value";
		`Yinc            ;"Y increment value";
		`Yminorticks     ;"number of minor ticks between majorticks on Y axis";
		`Yextent         ;"returns min, max, and scale values for the Y axis";
		`xsublabel	 ;"labelûfoo{s;d;i;p;c;v} is called for x axis sublabel vector";
		`xsublabeljustify;;
		`xsublabelout	 ;;
		`Xsublabel	 ;"labelûfoo{s;d;i;p;c;v} is called for X axis sublabel vector";
		`Xsublabeljustify;;
		`Xsublabelout	 ;;
		`Xtickstyle      ;;
		`Xtickstyle      ;;
		`legendbg	 ;"background color of graph legend";
		`legendfg	 ;"foreground color of graph legend";
		`legendhlthickness;"width in pixels of legend focus color";
		`legendshadowthickness;"width in pixels of shadow around legend";
		`coordinate      ;"returns matrix of referenced x,y coordinates in `graph";
		`Coordinate      ;"returns matrix of referenced X,Y coordinates in `graph";
		`addtrace        ;"foo{s;d;i;p;c;v} called on addtrace event";
		`copytrace       ;"foo{s;d;i;p;c;v} called on copytrace event";
		`addtexttrace    ;"foo{s;d;i;p;c;v} called on addtexttrace event";
		`copytexttrace   ;"foo{s;d;i;p;c;v} called on copytexttrace event";
		`addpoint	 ;"foo{s;d;i;p;c;v} called on addpoint event";
		`showtabs	;"boolean-show notebook tabs";
		`showpopup	;"boolean-show notebook popup-menu on right button";
		`showbinding	;"boolean-show the spiral notebook part";
		`borderheight	;"for notebook, separation of top/bottom edges from the widget";
		`borderwidth	;"for notebook, separation of left/right edges from the widget";
		`backpagebg	;"color of the unselected pages of a notebook";
		`backpagefg	;"color of page edges in notebook";
		`selectedpagefg	;"color of selected page title";
		`selectedpagebg	;"color of selected page tab and edging";
		`pagetitle	;"for notebook children, text on notebook tabs";
		`pageselection	;"boolean-for notebook children, allow selection";
		`orientation	;"`horizontal or `vertical, the general alignment of the widget";
		`bindingwidth	;"the width of the spiral notebook part";
		`framethickness	;"the shading area around the selected page";
		`framebg	;"the color of the 'punched hole' area";
		`marginheight	;"between the edges of the selected page and its widget";
		`marginwidth	;"between the edges of the selected page and its widget";
		`backpages	;"how many shadowed pages to draw";
		`backpagethickness;"how thick the shadowed pages are";
		`backpagebg	;"the color of the shadowed pages";
		`backpagefg	;"the color of the edges of the shadowed pages-not tab titles";
		`currentpage	;"the symbol of the currently selected page-null if none";
		)
		};
	}

store{f}:
	{
	sû`sÖØ_nl¡{`s;`fns`vars`ops`deps};
	s[,]û`.show `.hide `.is `.free `.of `.has;
	sûunique{s}/s;
	p.fnew{f;s};
	}

activate{}:
	{
	set_quiet_callback{};
	set_connected_callback{};

	append_reference{`s;`COLORS;1;<{set_toolkit_colors};};
	append_reference{`s;`FONT;1;<{set_toolkit_font};};
	append_reference{`s;`COLORS;0;<{preset_toolkit_colors};};
	append_reference{`s;`FONT;0;<{preset_toolkit_font};};

	set_color_alias_callback{};
	set_auto_workspace_callback{};
	set_message_callback{};

	append_reference{`s;`VERIFY;1;<{set_verify};};
	append_reference{`s;`GRAY;1;<{set_gray};};
	append_reference{`s;`BUSY;1;<{set_busy};};
	append_reference{`s;`CLOCK;1;<{set_clock};};
	append_reference{`s;`BEEP;1;<{set_beep};};
	append_reference{`s;`MENUDEFAULTMNEMONIC;1;<{set_menuDefaultMnemonic};};
	append_reference{`s;`DOUBLECLICKINTERVAL;1;<{set_doubleClickInterval};};
	append_reference{`s;`BACKINGSTORE;1;<{set_backingstore};};

	s.MENUDEFAULTMNEMONICûs.MENUDEFAULTMNEMONIC;  
					ã  To initialize the value in C++ land.

	set_save_yourself_callback{};
	}

ãã ***	Initialize script

initialize{}
$ex initialize 
$ex initialize_globals
$ex initialize_def
$ex documentation_variables
Ý _wa `coalesce

